(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    197254,       3713]
NotebookOptionsPosition[    195393,       3674]
NotebookOutlinePosition[    195727,       3689]
CellTagsIndexPosition[    195684,       3686]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"xp", " ", "=", 
  RowBox[{"NDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], "+", 
         RowBox[{"\[Delta]", " ", 
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{"x", "[", "t", "]"}]}], "+", 
         RowBox[{"\[Beta]", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], "^", "3"}]}]}], "\[Equal]", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0.12"}]}], "}"}], 
     " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Delta]", "\[Rule]", "0.15"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "0.3"}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", "1"}]}], "}"}]}], ",", "x", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.767010757625162*^9, 3.76701078901679*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"72ccc838-ee4e-4b96-aac3-3ace0da2351c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4Aieunb0yLPkXRMWw0
Ffo/hI0Dub7C4z8FZS60Bi4LQAtU2rHuQ/M/aslGZ8wwFED8MXnRqHXXP8qC
eNpvqRpA3cFmNppg5D8VebNxPtcgQDBcsz2JS/U/IB09Xc4dJEAb9VAX1a+i
PykcpROTqidAHHkkQE8x979wLA79xCYrQBeAXoJx4dO/EKmJTQBnLkCMZ2A5
8CztP1jAcTS49jBAixgBLW7v7j9V4qf19JsyQO1sSptXKOI/8YxeUOg4NEDH
c9TGj3v2PwxlhBD2+DVAIqor77Nx3j9VczOECJs3QD5TMwtmJOW/Hq9RXTVg
OUABx7aw41jyv4Vz8M8YHTtA5T7xNNZ0oT8Zbhj2ALw8QOAfFbKy1+Y/LZav
gQN+PkBkM9UIkX/zPzj6Z2AFEUBAzuZXyu9j8D8ZwK8ylvRAQAFR4KY6ne8/
Scq3UQLUQUApmEJKK/fkP49vhMpwpEJAigDL4hAB7z+Vqwh2bIZDQEcm4Gs9
2fI/soJRe2pZREBpNoq/10jZPx6eWs1DKEVARlJFcNf8w79KUBtSqghGQM5h
kSiiDvC/jZ2gMBPaRkCWm98xDNrvv4+B3UEJvUdARQWQk07D8L/hqdqf2ptI
QCjBqvnNKPG/SW2cV65rSUBTSR/VgJLWv3HHFUIPTUpAMRieT8KGvD+wvFOG
ch9LQPmHECEYIM8/PvZRF7HtS0BBAr/PbevgP4zGB9t8zUxA2jOIqc3x9z/w
MYL4Sp5NQLapGaNn69Y/FDS0SKaATkC2FvNw5HPwv0/RqvIDVE9ALml5EjgA
7b9t2bB0nhFQQMd5xVQGaeU/khVoiQGCUEDZIjQzfIrxP0KfAcvl6lBAThLr
kORV3b9S9PalkFxRQJDzP9mGW/S/imtMJynMUUDaJgkIJbStv00whNVCNFJA
e7qZrdOz2z9wwBcdI6VSQElL6PzwPPI/H56NkYQOU0C2mbN1f8nxP/WdY6zT
dVNAc10RGDul5T8raZVg6eVTQDLq0vKfOeY/7IGpQYBOVEDmZmu+8djyPw1m
Gbzdv1RAuJhYJ5528D9WbOncKC9VQNN+hEDkaeM/KsCbKvWWVUCa/zZArW7j
P17fqRGIB1ZAWk9df87J9T8dTJolnHBWQOIFtgmseeo/PITm0nbiVkCOZeg+
0tfRP4PekiY/UldA4g+GR9lkrb9VhiGniLpXQBBs/vf686O/h/kLwZgrWECW
uLNWOIPdP0W62AcqlVhAwlNJ+roM8T8+GeT4//9YQG5nSAAts/A/uezKRQ==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$5966#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 100.}, {-1.4495384698453284`, 
               1.4965340254159316`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD4Aieunb0yLPkXRMWw0
Ffo/hI0Dub7C4z8FZS60Bi4LQAtU2rHuQ/M/aslGZ8wwFED8MXnRqHXXP8qC
eNpvqRpA3cFmNppg5D8VebNxPtcgQDBcsz2JS/U/IB09Xc4dJEAb9VAX1a+i
PykcpROTqidAHHkkQE8x979wLA79xCYrQBeAXoJx4dO/EKmJTQBnLkCMZ2A5
8CztP1jAcTS49jBAixgBLW7v7j9V4qf19JsyQO1sSptXKOI/8YxeUOg4NEDH
c9TGj3v2PwxlhBD2+DVAIqor77Nx3j9VczOECJs3QD5TMwtmJOW/Hq9RXTVg
OUABx7aw41jyv4Vz8M8YHTtA5T7xNNZ0oT8Zbhj2ALw8QOAfFbKy1+Y/LZav
gQN+PkBkM9UIkX/zPzj6Z2AFEUBAzuZXyu9j8D8ZwK8ylvRAQAFR4KY6ne8/
Scq3UQLUQUApmEJKK/fkP49vhMpwpEJAigDL4hAB7z+Vqwh2bIZDQEcm4Gs9
2fI/soJRe2pZREBpNoq/10jZPx6eWs1DKEVARlJFcNf8w79KUBtSqghGQM5h
kSiiDvC/jZ2gMBPaRkCWm98xDNrvv4+B3UEJvUdARQWQk07D8L/hqdqf2ptI
QCjBqvnNKPG/SW2cV65rSUBTSR/VgJLWv3HHFUIPTUpAMRieT8KGvD+wvFOG
ch9LQPmHECEYIM8/PvZRF7HtS0BBAr/PbevgP4zGB9t8zUxA2jOIqc3x9z/w
MYL4Sp5NQLapGaNn69Y/FDS0SKaATkC2FvNw5HPwv0/RqvIDVE9ALml5EjgA
7b9t2bB0nhFQQMd5xVQGaeU/khVoiQGCUEDZIjQzfIrxP0KfAcvl6lBAThLr
kORV3b9S9PalkFxRQJDzP9mGW/S/imtMJynMUUDaJgkIJbStv00whNVCNFJA
e7qZrdOz2z9wwBcdI6VSQElL6PzwPPI/H56NkYQOU0C2mbN1f8nxP/WdY6zT
dVNAc10RGDul5T8raZVg6eVTQDLq0vKfOeY/7IGpQYBOVEDmZmu+8djyPw1m
Gbzdv1RAuJhYJ5528D9WbOncKC9VQNN+hEDkaeM/KsCbKvWWVUCa/zZArW7j
P17fqRGIB1ZAWk9df87J9T8dTJolnHBWQOIFtgmseeo/PITm0nbiVkCOZeg+
0tfRP4PekiY/UldA4g+GR9lkrb9VhiGniLpXQBBs/vf686O/h/kLwZgrWECW
uLNWOIPdP0W62AcqlVhAwlNJ+roM8T8+GeT4//9YQG5nSAAts/A/uezKRQ==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$5966#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 100.}, {-1.4495384698453284`, 
               1.4965340254159316`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 100.}}, {
   5, 7, 2, {1419}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
    False}, CompressedData["
1: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
n7+JN+L/AOQCXjU=
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2AMTGDi7gNFit7Zt27Zt27Zt27Zt27Zt2+72O/c2M+cPJPPMmyR+g7YV
2gQMECDAqH8D/P8KTBCCE4qwRCAy0YhJHOKTiKSkIDXpyEgWspOLvBSgMMUo
SRnKU4mq1KA29WhIE5rTirZ0oDPd6Ekf+jOIoYxgNOOYyBSmM4u5LGAxy1jJ
Gtazia3sYDf7OMgRjnOKs1zgMte4yR3u84invOA17/jIF77ziz8EssH/EoyQ
hCE8kYhKDGITj4QkITmpSEsGMpONnOQhP4UoSglKU46KVKE6tahLAxrTjJb8
34G3pxNd6UFv+jGQIQxnFGOZwGSmMZM5zGcRS1nBataxkS1sZxd7OcBhjnGS
M5znEle5wW3u8ZAnPOcVb/nAZ77xk/8IGChAgH8ISghCE46IRCE6sYhLAhKT
jJSkIT2ZyEoOcpOPghShOKUoSwUqU42a1KE+jWhKC1rTjo50oTu96MsABjOM
kYxhPJOYygxmM4+FLGE5q1jLBjazjZ3sYT+HOMoJTnOOi1zhOre4ywMe84yX
vOE9n/jKD34H+ht/YIIQnFCEJQKRiUZM4hCfRCQlBalJR0aykJ1c5KUAhSlG
ScpQnkpUpQa1qUdDmtCcVrSlA53pRk/60J9BDGUEoxnHRKYwnVnMZQGLWcZK
1rCeTWxlB7vZx0GOcJxTnOUCl7nGTe5wn0c85QWvecdHvvCdX/wh0D/6Jxgh
CUN4IhGVGMQmHglJQnJSkZYMZCYbOclDfgpRlBKUphwVqUJ1alGXBjSmGS1p
Q3s60ZUe9KYfAxnCcEYxlglMZhozmcN8FrGUFaxmHRvZwnZ2sZcDHOYYJznD
eS5xlRvc5h4PecJzXvGWD3zmGz/5j4Dm1T8EJQShCUdEohCdWMQlAYlJRkrS
kJ5MZCUHuclHQYpQnFKUpQKVqUZN6lCfRjSlBa1pR0e60J1e9GUAgxnGSMYw
nklMZQazmcdClrCcVaxlA5vZxk72sJ9DHOUEpznHRa5wnVvc5QGPecZL3vCe
T3zlB7///Tv4AxOE4IQiLBGITDRiEof4JCIpKUhNOjKShezkIi8FKEwxSlKG
8lSiKjWoTT0a0oTmtKItHehMN3rSh/4MYigjGM04JjKF6cxiLgtYzDJWsob1
bGIrO9jNPg5yhOOc4iwXuMw1bnKH+zziKS94zTs+8oXv/OIPgYLqn2CEJAzh
iURUYhCbeCQkCclJRVoykJls5CQP+SlEUUpQmnJUpArVqUVdGtCYZrSkDe3p
RFd60Jt+DGQIwxnFWCYwmWnMZA7zWcRSVrCadWxkC9vZxV4OcJhjnOQM57nE
VW5wm3s85AnPecVbPvCZb/zkPwIG0z9BCUFowhGRKEQnFnFJQGKSkZI0pCcT
WclBbvJRkCIUpxRlqUBlqlGTOtSnEU1pQWva0ZEudKcXfRnAYIYxkjGMZxJT
mcFs5rGQJSxnFWvZwGa2sZM97OcQRznBac5xkStc5xZ3ecBjnvGSN7znE1/5
we9gfy/9gQlCcEIRlghEJhoxiUN8EpGUFKQmHRnJQnZykZcCFKYYJSlDeSpR
lRrUph4NaUJzWtGWDnSmGz3pQ38GMZQRjGYcE5nCdGYxlwUsZhkrWcN6NrGV
HexmHwc5wnFOcZYLXOYaN7nDfR7xlBe85h0f+cJ3fvGHQCH0TzBCEobwRCIq
MYhNPBKShOSkIi0ZyEw2cpKH/BSiKCUoTTkqUoXq1KIuDWhMM1rShvZ0ois9
6E0/BjKE4YxiLBOYzDRmMof5LGIpK1jNOjayhe3sYi8HOMwxTnKG81ziKje4
zT0e8oTnvOItH/jMN37yHwFD6p+ghCA04YhIFKITi7gkIDHJSEka0pOJrOQg
N/koSBGKU4qyVKAy1ahJHerTiKa0oDXt6EgXutOLvgxgMMMYyRjGM4mpzGA2
81jIEpazirVsYDPb2Mke9nOIo5zgNOe4yBWuc4u7POAxz3jJG97zia/84HfI
vw/+wAQhOKEISwQiE42YxCE+iUhKClKTjoxkITu5yEsBClOMkpShPJWoSg1q
U4+GNKE5rWhLBzrTjZ70oT+DGMoIRjOOiUxhOrOYywIWs4yVrGE9m9jKDnaz
j4Mc4TinOMsFLnONm9zhPo94ygte846PfOE7v/hDoND6JxghCUN4IhGVGMQm
HglJQnJSkZYMZCYbOclDfgpRlBKUphwVqUJ1alGXBjSmGS1pQ3s60ZUe9KYf
AxnCcEYxlglMZhozmcN8FrGUFaxmHRvZwnZ2sZcDHOYYJznDeS5xlRvc5h4P
ecJzXvGWD3zmGz/5j4Bh9E9QQhCacEQkCtGJRVwSkJhkpCQN6clEVnKQm3wU
pAjFKUVZKlCZatSkDvVpRFNa0Jp2dKQL3elFXwYwmGGMZAzjmcRUZjCbeSxk
CctZxVo2sJlt7GQP+znEUU5wmnNc5ArXucVdHvCYZ7zkDe/5xFd+8DvM38++
wAQhOKEISwQiE42YxCE+iUhKClKTjoxkITu5yEsBClOMkpShPJWoSg1qU4+G
NKE5rWhLBzrTjZ70oT+DGMoIRjOOiUxhOrOYywIWs4yVrGE9m9jKDnazj4Mc
4TinOMsFLnONm9zhPo94ygte846PfOE7v/hDoHD6JxghCUN4IhGVGMQmHglJ
QnJSkZYMZCYbOclDfgpRlBKUphwVqUJ1alGXBjSmGS1pQ3s60ZUe9KYfAxnC
cEYxlglMZhozmcN8/gdRHudO
    "], CompressedData["
1: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
JylWgJ7tatRkPGnLk1nuf7lKhdP+YjW6bIWwJCJ9rODcAu75IGly9C4V2snM
Oo3rmVDQ5SJ34vUC0qUIvq8wpsLqb4nRj17foMqktk0pdQGFneTv2JtRYX31
nJJAhT6evWo9HVC4gN8yUmNEttYbMkUljEfFoZx6x47V9AV8I/M0ekqPCpdf
FH97sCsb6zLLuhreLGBts2pPiRoVLn3JahY4jihxbq9shfICFt0J7qk+TYW8
e519cm/L8Mozdc+FSRJWLlnvCWOjgpcUD+zJrUGq6qrNew0S1ogn/jEjLkE+
qX+s5kYTyht8Ls85Mo8CRrT/fc5YAoIam/s7gVY8M/T3oKXxLO5NLXuYaL8E
cYHhvZrV7ZhXo81DazuNONOgckxyCfz35ND5nOvCbMUWH6LWJLI+3KiNHKMA
v8H7tBiXHuxh7WXu3UvEL/lFe3M/UsB0b/09Vu8+POXzg+59/iiy54nf55Sn
QHruwcyztwfQmdv5833dYSSf267vXk3e8sZnk6v8BJy7Zx3D1DqAJzfuhbho
ksGwU7VfbJ6A/mnEBkfmbnxeViAq37IIDUcTY8Y+DOFbBsVsUddW1CUepydq
LEI96XLiNuZh7FNOO+fgWIfcIW2rn2oWoFKYTZPGaBiNmEYf82eWYJtJNYvW
xQWQE05Uq/40jFIxkkeE/DKRcESrli6fBEQZSbrgpGFksR548O6AHw68PuHg
KbXlXWze7JWxW+sVdc7aXI4D8qZOiODNeZiiVVpq8RxGhbDjsvkTOVD/OPFH
jMocVNG5cgtcH8aTTtlxRxOLIE6NYyb43CyoPuDOZdraZ/+GXwDXRhnspn9z
n4tlBnqylFeskoYwk5FfLJtSBbwXp2Q/EKegKrKUKHN2CPOb8xVvjtfCuZFU
jrbKSTCl+3rPp4iAAjwE2pKZevBsOVxglzYBpOt3lBmAgNxNDr8KjzaCVtjX
kbJoIiyqeYo0PRlEOX31sIH4RmhlPdE/HzYO7P17FjvMBlCl0dEvMaARetbv
McxFjIElv+OJmvv9yNayl3bXWgP4+t4rCk4chZP7Iz297vbhb9Zzy5Or9SDy
QlN+2noEeji/ItfeXtwd1fa35XAdXBktYndVHIZMkyOHzfq7UfGjQthGezV8
GeDQPn5kq+8ErAs5l3dhqLeVnMalSiBlztR82U0At6hfPwm1nXh5lUfzn3cZ
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
Gvu7bxYlZKV/ySZWwfX8nlvc94lIYHKr6Dw+i1c47/l2HOgA1of59pX353Gc
5vCcLesMyuU0stJtDEDZvw8/jG4v4A+2WmJQ+RROCX914ns7Cg8M7ILH+RaR
eZrw7BftJEblPT3BKjMN63vIyWsOLKFYtu3N0oUxlFYN1Xh7Zh5oHiuv+tUs
Ic0nrSNnDAiYRrxqbce6BFpvu1ZaPpCw1U8956z9EG6ZjXH+mtjl9g9e5DcO
LaNH089Abss+zLs647tfbw0OPabR0jJbRsEo3keLVzrwz209r5RrGxBlm2e2
VLyM/HGqAo3fGpH2zqWabwGbYOpqqPB+bhk7oy+RIn9UIFNcktV/SlsQvFd/
zIR6BXcU8urvhecg217SOG/+Fkjys1bFMa5gr1pZ/mSpH4pWJ9E1N23BLHkF
LRvDCtpr/JUu1v4HawFKDZreW/Dp3JvGEbIVPOqfavLCoQjGP7lUmm9vwvz+
V7ce7nJy/U8PX7apGvAzjhQ6yrIJNUo1f3vjljHptIl2sUUz/Cp6pW84uw6z
CuIzZw2WMfm/ssv80AGWlK2S/jZr4CrzOuTZrWU0OtnZyl7fBYUxjnQb/qtw
70z++Idjyzj2O/RepHQv5NBX3wv+uwJvGn0X/wyTUIbjxavbYf2gW8SRbfB7
GerfuUjuxJMw4sexN48WB+DkRc5Tzz1J8OE/podFZiQ8+2vpsxrFEHg2l0Sb
mC+BgcHE7RPXSOjX2PCngGoYnl/0tQlSXNztubnvwqtLGOmrdpuXbATWr+m3
tF9YAJ+yEOlZuyX0/Fb7L8WeAMu9f2WPnSUCL2NIatD+JdwzcGHiTucoRPhn
yNFfnQZLXS9JadtF3Gpin6EiHwfaQtPbkvzjUO/b5jW+vIBGf1/1N26MA8NT
I9evN0fgRK9+9Se9BWxkeF9+qHoCDs7Ft7hbDoDdgojLWvM8ug7Ke8QZT0Lu
OdlTcxWdkGCrJXr9+jxW97bZHZybBPIjO7zvaZrh/hN2kVNhRLSIPxNXIjMF
TevZc6dDK+G5Mf2jl5REzPfkcsqymYIoR+Frx57nwj5UbwnqnsVojrGjff5T
IBFeFbFoGAw0pOOFDjYzGHTEpEL6xxQcdqjWPkcRg/wHbvjrn5vGPXyfdhRM
pyDh4F+q91SILscfD8XXTeKBUKWwHeEpSOa97Xvhbjku/6JZc7acwD4qHGEf
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

    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.767010768856017*^9, 3.767010789420725*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"69648ca2-a597-4846-849c-b04025386540"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"xp", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767010770839799*^9, 3.767010782314826*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2b07b597-c13b-480b-86eb-b037b006a3d3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Nq6wXLpgW/oY/A/rM8cD
       "]]},
     Annotation[#, "Charting`Private`Tag$6020#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {-1.53927263593592, 1.536281076390973}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7670107827374153`*^9, 3.767010791104381*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"2d219cc8-c208-4ddb-b915-3c908d8d811d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"xp", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01", ",", "10", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"t", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.01", ",", "10", ",", "0.005"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.767010803937758*^9, 3.7670108276655207`*^9}, {
  3.767011025380701*^9, 3.7670110277778397`*^9}, {3.767011588026363*^9, 
  3.7670115904953938`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"17ce1c7e-bb03-4d5d-b6b1-3d5c88e336ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data0", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"input", "\[Rule]", "output"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7670108305141277`*^9, 3.767010854213835*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"414c1f9a-e5e2-4988-b55e-5e0ecfdbd38e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"data0", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7670108557246857`*^9, 3.767010860543108*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"b6513e09-1261-4355-b338-7ec7d8a564f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6.6`", "\[Rule]", "0.5972185231190492`"}], ",", 
   RowBox[{"3.2199999999999998`", "\[Rule]", "1.2731977013620117`"}], ",", 
   RowBox[{"3.98`", "\[Rule]", "0.8598775262489845`"}], ",", 
   RowBox[{"8.94`", "\[Rule]", "0.9191318551407852`"}], ",", 
   RowBox[{"7.295`", "\[Rule]", "1.1105552271956605`"}], ",", 
   RowBox[{"0.74`", "\[Rule]", "0.17101885242587594`"}], ",", 
   RowBox[{"7.575`", "\[Rule]", "1.3168469102481037`"}], ",", 
   RowBox[{"4.185`", "\[Rule]", "0.7346922100246226`"}], ",", 
   RowBox[{"5.725`", "\[Rule]", "0.3095452223418439`"}], ",", 
   RowBox[{"3.05`", "\[Rule]", "1.308912417184017`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.767010860914239*^9, 3.767011032069235*^9, 
  3.767011594274132*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"201f596f-8191-4747-b1ec-720bed410345"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "data0", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data0", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"data0", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"s", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"0.8", "s"}], "]"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{"0.8", "s"}], "]"}], "+", "1"}], ";;"}], "]"}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7670109003766613`*^9, 3.767010906604067*^9}, {
  3.767011439578114*^9, 3.767011479001358*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"ceb5501c-02fa-4f00-936a-cb4309932e66"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", 
     RowBox[{"32", ",", "Tanh", ",", "16", ",", "Tanh", ",", "1"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"net2", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{"{", 
    RowBox[{"32", ",", "Tanh", ",", "16", ",", "Tanh", ",", "1"}], "}"}], 
   "]"}], 
  RowBox[{"(*", 
   RowBox[{"32", ",", "Tanh", ",", "4", ",", "Tanh", ",", 
    RowBox[{"1", " ", "is", " ", "pretty", " ", "good"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvXC+9FkGwTeO1+3/XADRhk71d0D032jWxyCav1fz
LYjWu2H4DkSzFTF9AdFi5y99BdEz7hb9A9H/thwC0x4ZzCyMQPpC/HF2ED1h
gbEwiO7PcwfTB14KKIFovjlWYPqy4W1DEP3rnIAJiK7ed8ACRG94ou0AosXd
1NxBdKjxcy8Q/d0rzB9Ef8sNB9Pdl31CQHRXiT+YDtr5OgbMTw2MBatTP50E
ov2eTEgF0Rq8YVkg2u1vNJjm7/2XD6JXfOUpANEBy+6XgOg3rN/BtKjOrUoQ
zaMiXAWiA+9cqgPRuo6s9SBaxHtDC4hOrT8DpiXsX3eB6EUMxyeB6LyJe2eA
6Pe7lswE0QDfLpPY
  "],
 CellLabel->
  "In[175]:=",ExpressionUUID->"e81c9228-9613-4a8f-9fd4-5a57f1d96b1c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, NeuralNetworks`SizeT}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> NeuralNetworks`SizeT, "$InputDimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{16, 32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 16}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"tensor\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.767010917793211*^9, 3.767010928032504*^9}, 
   3.767010981021702*^9, {3.767011050691166*^9, 3.767011070203005*^9}, {
   3.767011148196319*^9, 3.767011183459054*^9}, {3.7670112224041433`*^9, 
   3.767011243978393*^9}, 3.76701127985116*^9, 3.767011349727282*^9, 
   3.767011385681333*^9, 3.767011426714402*^9, 3.7670115143452587`*^9, 
   3.76701163739544*^9, 3.767011738896904*^9, {3.7670117905919523`*^9, 
   3.767011838127348*^9}, {3.7670118783709707`*^9, 3.7670119277346697`*^9}, 
   3.7670119631670017`*^9, 3.767012002878973*^9, 3.767012075034894*^9, {
   3.767012120930936*^9, 3.7670121409171047`*^9}, 3.7670121793907547`*^9, 
   3.767012225166073*^9, 3.767012264007381*^9, 3.7670123055048447`*^9, 
   3.767012344548064*^9, 3.767012390870084*^9, 3.767012440945551*^9, 
   3.767012502746578*^9, 3.767012557760497*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"1a844485-7f70-4c04-969b-e69d38ee85bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedData", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net2", ",", "training"}], "]"}]}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"91c8250e-c95f-4556-b404-5a9ab4ad6757"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{32, 1}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{32}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 32}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{16}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {16}, "$OutputSize" -> 16, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 16}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 16, "$InputDimensions" -> {16}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.767011996469728*^9, 3.7670120383129177`*^9, {3.7670121084673767`*^9, 
   3.7670121390612373`*^9}, 3.767012174532463*^9, 3.76701221230827*^9, 
   3.7670122589023743`*^9, 3.7670122939402323`*^9, 3.767012338515929*^9, 
   3.767012379111641*^9, 3.767012422471623*^9, 3.76701247601556*^9, 
   3.767012543175641*^9, 3.767012661974592*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"db5b20f2-93bd-4ba3-a72b-64a2c4d398eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"trainedData", "/@", 
         RowBox[{"validation", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "-", 
        RowBox[{"validation", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ")"}], "*", 
      RowBox[{"100", "/", 
       RowBox[{"validation", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "\[Rule]", "0.03"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.767010982144135*^9, 3.7670110137806587`*^9}, {
  3.767011148384612*^9, 3.76701117096487*^9}, {3.767011286667897*^9, 
  3.767011342032147*^9}, {3.767011576781735*^9, 3.767011582365632*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"4393f672-c369-4b2c-904b-7847b424dcc9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJw9WHlczdn7v7Zkq6tQmnBpQw2lkGzvksoStxRpve377XbXEC5DIkuWslTT
tSSjYUIoS92RskxTiTJSXFmasZUYVJbv/F495+cfr6fzOedZ3u/n/Zxzx4Yk
eIb35nA4O3txOP/3f8+/9rn95IdrLBzfl9EfsNd5W33B+2HqHlMbp9Yfuj+n
dwetczG4LK136fnetD4MgaKRG8pz2mndEA9aj2zvt/QZ2cYo6RBEfGseQt/z
cDiv+mKeQcvcHnsc1n+RTXyc0Z/WTRE1KqmoQ9qHbHPk7FE0207pRfZ4yL/Z
pwuu9iV7Iuofl2Td6atNthV0i47P2gJ23iRopze/1F3RSfFY45SLe6k2n31v
Azv9U//csuKQPQV2xqOdh+R+pu9t4Whq9uebS1xat0N7/4FZd8v0yJ6KTcd/
fjhuMrOnwdRulqpJoU/2dJzTXNvSP5TVxx6+3C/qpXxmz8ARsxF5Dh2NZDtg
9amtUcO/sXxnQrczPjVv8jiyZ2HNj17yIDOW/2xEPGuy4Bu8pv1zIBu21jRq
x0uy5+LKoFRly6ousoFIA+M/tYq+99hK4NnFa/Zeae9o3RF2ITEbyiwoPqUj
Dto/x5Uqxg8nXDs36KGhO/FB6QTpnbzbg7b3o3jmYV1p68u/p5F/5TyYX3h9
9kYXq78zsgbwzcpfEz5KZ5T3zshYxxlK++fjoInlquFOlL9yPs4eePV8wKwv
tN8FPPn2CotBg2jdBUM9rq8o+v96uUJPpZJPDPpG/l0x4KV8aGEMw9cN81bm
zFddpvOUbjggufir3HYArS9Axq8LDucnkK1cABH3Jd9cn+W3EAuu36/6bMzi
Wwj9j+6/X1R8ovgW4XqRZeUih8G0vghG9o33s+pYvyxGW69D52uFFI9yMd7k
r7M61UTfc9xhHHDsl3FPWX3dMTT0979HrCG8OEvQYjnZ+GI+w2cJCqYf6vP2
Lct/KUqdTZUewWz/UpQk7/HXGczw5eOfBfbK5FTiK/g4Ol28e3Q39YOSjx2x
WpkunpSvmo+6DFnfXOve6NnvAbuUin4b31N94AGOpWRqbBLz54HUyyXJ5W8G
0n4PVB6pbn3m+5T8e6It7/0MqRH1FzwxOEZ190II44MnHE6/t71yvKNHH9Se
cNr26cVVC8KTswwrYjsM/Ka+ov3L8BiBjecTP5D/ZYjR6gzceKKhx1Yvw/IZ
QWFz8nWoPl4w7VL9YriY+feCi8mFem1HhpcXOma4KReGvKD9Xiit7Kz7/S/G
H294c3pPuxVEegZv1Kw62q0wIL1SemN2mJ3pLzfpe7U3Iu56OrTWMP1cDo7t
tDLpMMIPy1G4ygpGf7P6L4dOQsWYryfpPPVyXIxOkbs9YfxfgaSfV7sO06J1
rACvPNisfDrlp1yBqKtvn55oI/1Rr0Br2fjvg80Z/j7wf8otT15D/QwfOCiG
xNr9yfz7IPzm6LG6fv9S/j7IebHbdOj6btq/EuIXF6MlifQ9VqLZchBf9Jbw
UK7E9qxxCHBg/lfizOrSiU4vWf18kfCyNPfIPVqHL7Q+haWZfye+KH1RtTgl
0OYd8UvtC/GOtpexXSx/P3gIUx111zD++WHslyk3Z1kyPfPDXf+pm3xjKT61
H2oNunyNcphe+qPjzXD/77OIb/jP9usI7GemRf79EdbnN/UDZqv9MW3xQFuN
gvV/AI4+L/LPzmX7AzCOs0Zo1cT0LgDHRzgFDLUmvVUH4GC00bdnZWyeBSLZ
Z3j9wr0ULwKx+/O5TGM3xt9ADJetN9uXxvgTiNfrOpP/NWT6FIQfuQ/vSSaw
+gUhv3tEovc4ln8QKrsnCHfsZfULQn+TI+WfU5k+CHB3vKubrOJGT3/xBLAP
7S3bG056CgF4VZvqN22leScQ4MJxF8NSN9bfArzLM1BwzClelQAjd2Z3XbvH
8hVAWVf984Ea6ieNANF1q727M9n8D8bTG4b7VULSS14wmq6rnsy8R/cFBMM2
NX/eowlNPbYgGDPbPzTZrKHzlcFYPbkoYrziH/IfDO4JE5/YPsQPdTC0yq5f
HllLeGuCMd/Wvturi9U/BNu53GE53qTHvBBU7zertepL+CIE08sKwiUzqB6C
EFwaZe6y24PlH4KxT0pXmGV9Jf8hcPD+4+X6IoZXCLr0eAle/sx/CBaOnbjz
nhm7P4Tiy5mMmMuLqB68UKS0RRQXx9N5CIXH4Jh57jGUjyAUabsO/HblG81H
ZSjqqnZNndZF8atCMdPqoJN7G9VbHYqV/KlH3cpovyYUlk0ZjUVg+YfB9dCU
wpZjxA9eGFTj8h7kz2Z6FIZzv2dHpGtRPoIwBBzue+1pNON3GIT9be8+UtN5
qjBU+pb/ILrJ8A/DtohxwefHUP9pwvCt0r4q8BHjXzj8Jtyx0rpA/cMLh65h
Cb9qCdPjcLxtqDvBD6B6C8KRsecnQeVbxu9wZDq/aMnOq+rhryocrkZDzlVu
ZfMmHNvCy+aUJ5M/TTha5tv2l4xk/RsB/R2RwdZziL+8CJy7/aL63v4n5D8C
x/TPnr2Wdp/8R+CM9MyHPg/ZfSACkR78zPs1pKeqCCw6/pW/ehPLPwJLJ6eV
vPdi/iPwvfpw9dhWNr8jMWFnjc/sNtJTXiT0bnJGbzNi+EdiXj+38ZODSZ8F
kUj/W2h6W/9dT77KSMQt7+LcGqRF9Y/E2YhS6ZbtbF5F4nvi5e9r8gk/TST8
PS81zveifDlR2OIin7/iCcM/Cvsud7kUN7B5GoVgzhtxiYbqJYhCQ8XMmpuF
7L4UBbvpvV13TiJbFYVvLdxMlf9b8h+FunwHzhZtOk8TBf/mrg5tY4qXE417
/4ZtCGzXJf/RmJqq31zfSPEiGrurXi/b1k3fC6KhqB1q8c6O7g/KaAz0PWm5
9BbzH42ZOvePeEbQe0UdDdt6VweP32h+aaJhk6Qv2mjC/Megevmxh92VrP9j
cNK98o+Jq+l8xKAx7cGzIX8QPwUxuKOxbns6ic3XGJw9tjEtfS/hq4rBTNW+
ZuksNi9jMK1uyj5xFemTJgYli5I3e+xh75FY7N687kLDbwz/WOhtTVjNN6Pv
EYvPDp51v+q0Ev6xuKFMTjdXEd+UsXC+LftlWiedp4rFbYt1ySsNSW/UsWjJ
yVe/zyY+aWJxQrls35Rh7L0Th3O1rjOVAR/Jfxw2b77iXFFF+CEOwjOOG/w2
k94I4uC1655jVDzVSxmHgfcFfP4l0htVHB4bGh0yf07xqOOw/9PAv45akl5o
4tC4PNXxQya7f8RD4q1Xun8l4ceLx8RJY3S7drB5Hg+NvO9sZ2+mv/EI3dz0
e+5Zpr/x0B59X9fKiOUfj8gTe7Y4nmfzLh4x9ietTcaQPmniURYWrDr0mN0/
hPAuy372UxfTXyGm3anb72tA+gEh5jacDj1oTXokEOKqm322C5f0WymEqXjw
zA3vqN9VQvzo5r/wZMVdwl+I0l1rfISNzL8QLioTsxlBxA9OAtKFIz7P9qin
/BPQAZ3J62Z97OlvJEBXXLp2zxO67woSEP1q8/EZ+4kPygT45RXnlqVqUf4J
WGK19kXNVKq3OgFmtYYFvfpQfTQJuGdhKfPIHoAe/yJEnR5VZ/qa3otcEXxC
nJ6X/sv4IIJNt822vGqqh7UIu18Z+2w/30L8EGGSNRzHtNzpiZcvwpXNtUtO
VTK+iHD3G+9k5k7io0iEBkl91V85xHelCNfSBrrZOJG+pItQ8P3miC1OLB8R
LON3zHrVh96LhSI4XW1rbglj/BYhwGrP0JsTya4VIf5kxxTuMqqXRoSRXtE1
rneJL+3/xVuU8/XgT+z+mIisAt0qv63EZ24i+gjOGd8aS/jwEvGj3Mbo5pm2
Hts6EWkRwmsxKdTvSMTcjbsnexwnfeYn4snOxjeN40jPBIlwu//MWjiS8Bcl
oix51I2SKcQnZSK2nR6sl9lE/EtPROjrpxs/tlG9VYkIP3Nwwndt8leYiOCL
JTbvxjB8E2GfMrEwYxX1R20irq/TuW7bTfzUJGL6iW7HTelUz/ZE5C/xmeN7
jPFfjHCdxhtTp1B+XDFMHr+O/UdI+sYTY+e27gzTAqqvtRj5r6625ISSDTEu
5/+K91+pfnwxiupH2getp/gFYmz+FJw8u/N5z/kiMfZf9DZUW9N7UymGuXie
jl0u9Wu6GPzTBTPWZRPeKjEeP/z5hmAC6VWhGEHGD4Y0WVE+ajHsE1KHB+we
SfmLke5gJzlfR/qiEUPt06rVnMXwF2O9dujgVU1MfyWQ8panVxcTXlwJTqRu
LSsto/rwJJiz4MmjO+2El7UE19//IHetZ/NJghRx08dbS+h8vgS+yc58w1WU
j0CC0333eFqMJVskQaeBzmIZew8qJYj7eotnbEd2ugT6Ge65A9aTfqgkCC/2
0/b+ifSlUIKDEx3PGPtQf6kluFpVEbvgB+JDrQS2joG3pbepnzQSNIb+Edq0
mvS5XYKW2E0ftFvZ/U+KGWlC5118qidXiq1nfrh+5AnNa54UFo1XLV7cofug
tRTPth968FhKeEOKtTM+jpqpR3rBl2Lb3qU7jP+ldYEU+pMebtHOofqKpChw
bG+VprHfa6Q4fPFBxamnxO90KUycFo16VMP4L0WJ4ZB9vbNe9ehLoRTccTrv
z0ax+7UUT6Zm2rmHkF0rBR7PL1+66Q3hL0WzQ5/+nBjCu/2/83YH3LmVQvly
ZDhcMey1aQbt58rQ5rpB/+2mC5S/DAv1arPWjKB4rWVwf/8lIVLD3nsyiMJP
RAxopn7gy+A1QdG+/hr9XiGQQTC6QOvrHwx/GR7w8tvmH62j/pdhpMByXud2
Oi9dBs6twiHcenoPqWS4lXlYaGtJeBXKsKY+iuP1mParZcisHtLHgN2Pa2XQ
nT2p1e8vqr9GhqHlAzJ8vVn+MuwRn8otyNaQ/smx1SH3h+PVxBeuHPfDzOrV
H9h9SA7V5CbxIE+yreXQFBcfSx/Gfm+QI6ZovQ+/iuLly5EWpW3wupDutwI5
3twXVlzzpHklkqPUq9lGJGLvWzlGvzN5FWPL8JdjbUNeTRzzr5LD5NKhP73N
Wf/L0bDgFo9TTPvVclR/6vvt4S7iS60cK1acuFJrxOatHD7Fc89cKqb82uXQ
y325Y10n+/1HgQk3L5Tbb6V5wVXA1KakghdC5/EU8NHOOhbqRPcnawXa3oas
atVi+q+A+l7MQ8UIqi9fgX+WztriqkfrAgVmXp0o7iyifEQKuPq/6X1qKOO/
ArHZBtbTumh+pCsQdvjBJ69vNF9VCvzdGbr/UTvhW6hA01ffP2/b0/lqBQIX
pphNSqF61yqQNGu8qMWK8V+BvKiGBVkpLH8Fhts4Klf6sd+fkhBpcTDC/iX5
4yZhG39+yeok+p6XhLPpvi7n2fvFOgnpgRv8PIqpXkjC1/QhXy9raVH+SbBe
1cvJTZ/pXxKOVCyKXxtE+0VJODZ2zpxeE9j8S4LmhvTuoAEs/yTY9DueusCG
9EeVhLchh3UEDVSvwiTYPZqyIcOd5oM6CQcqf7mzfBXhXZsEIx+jswWP2Xsj
CRkf4nwq/rsP/A8UWAW2
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -4.59422935357741},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{-4.605170185988091, 
        FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox["5", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.007333185232471, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.007333185232471, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 398.}, {-Log[
        Rational[512, 5]], 
      Log[10]}}, {{0, 398.}, {-4.628886712605407, 2.302585092994046}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.76701115667275*^9, 3.767011171458235*^9}, 
   3.767011224539282*^9, {3.767011282095717*^9, 3.767011310265514*^9}, 
   3.767011351856392*^9, 3.767011387135048*^9, 3.7670114288993473`*^9, 
   3.767011582802055*^9, 3.767011652269843*^9, 3.7670118924055433`*^9, 
   3.767011998993614*^9, 3.76701206706533*^9, 3.767012115184477*^9, 
   3.767012176023575*^9, 3.767012221594811*^9, 3.76701226036487*^9, 
   3.767012295487309*^9, 3.767012340310663*^9, 3.767012385299531*^9, 
   3.767012435251781*^9, 3.767012478323658*^9, 3.767012545946434*^9, 
   3.767012681589143*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"83e7abe7-9218-4393-aa42-5fcccb1e6b28"]
}, Open  ]]
},
WindowSize->{1918, 1002},
WindowMargins->{{1, Automatic}, {2, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1450, 39, 39, "Input",ExpressionUUID->"72ccc838-ee4e-4b96-aac3-3ace0da2351c"],
Cell[2033, 63, 74039, 1264, 86, "Output",ExpressionUUID->"69648ca2-a597-4846-849c-b04025386540"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76109, 1332, 315, 7, 39, "Input",ExpressionUUID->"2b07b597-c13b-480b-86eb-b037b006a3d3"],
Cell[76427, 1341, 38232, 644, 284, "Output",ExpressionUUID->"2d219cc8-c208-4ddb-b915-3c908d8d811d"]
}, Open  ]],
Cell[114674, 1988, 711, 19, 69, "Input",ExpressionUUID->"17ce1c7e-bb03-4d5d-b6b1-3d5c88e336ea"],
Cell[115388, 2009, 334, 7, 39, "Input",ExpressionUUID->"414c1f9a-e5e2-4988-b55e-5e0ecfdbd38e"],
Cell[CellGroupData[{
Cell[115747, 2020, 232, 4, 39, "Input",ExpressionUUID->"b6513e09-1261-4355-b338-7ec7d8a564f3"],
Cell[115982, 2026, 858, 15, 44, "Output",ExpressionUUID->"201f596f-8191-4747-b1ec-720bed410345"]
}, Open  ]],
Cell[116855, 2044, 1412, 43, 127, "Input",ExpressionUUID->"ceb5501c-02fa-4f00-936a-cb4309932e66"],
Cell[CellGroupData[{
Cell[118292, 2091, 1038, 26, 69, "Input",ExpressionUUID->"e81c9228-9613-4a8f-9fd4-5a57f1d96b1c"],
Cell[119333, 2119, 28242, 574, 96, "Output",ExpressionUUID->"1a844485-7f70-4c04-969b-e69d38ee85bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147612, 2698, 211, 5, 39, "Input",ExpressionUUID->"91c8250e-c95f-4556-b404-5a9ab4ad6757"],
Cell[147826, 2705, 26609, 543, 96, "Output",ExpressionUUID->"db5b20f2-93bd-4ba3-a72b-64a2c4d398eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174472, 3253, 1382, 35, 127, "Input",ExpressionUUID->"4393f672-c369-4b2c-904b-7847b424dcc9"],
Cell[175857, 3290, 19520, 381, 305, "Output",ExpressionUUID->"83e7abe7-9218-4393-aa42-5fcccb1e6b28"]
}, Open  ]]
}
]
*)

