(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199349,       4006]
NotebookOptionsPosition[    196991,       3960]
NotebookOutlinePosition[    197325,       3975]
CellTagsIndexPosition[    197282,       3972]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Import Iris Data", "Subsubsection",
 CellChangeTimes->{{3.7639939025500927`*^9, 
  3.7639939114540787`*^9}},ExpressionUUID->"1fc5c2cf-c15b-4837-8d0b-\
8a1fe8f97cdd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "url", "=", 
   "\"\<https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", 
    RowBox[{"Import", "[", "url", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"names", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{"'", 
       RowBox[{"class", "'"}]}]}], "}"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataset", "]"}], "\[IndentingNewLine]", 
 RowBox[{"dataset", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "5"}], "]"}], "]"}], "//", "Tally"}]}], "Input",
 CellChangeTimes->{{3.7639914908152437`*^9, 3.763991502610077*^9}, {
  3.763993918261599*^9, 3.763993927171213*^9}, {3.763994151631565*^9, 
  3.763994161810441*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"71b8a3d6-d499-4a78-9b8a-c56b35ad0618"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"150", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.763994162217145*^9}},
 CellLabel->
  "Out[263]=",ExpressionUUID->"e8d947b4-c9fd-4b45-962d-fb31fdc6a1ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.7`", ",", "3.2`", ",", "1.3`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.6`", ",", "3.1`", ",", "1.5`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.`", ",", "3.6`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.7639941622192593`*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"c093cb84-0de2-43b6-ad39-36e2c0bd464f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Iris-setosa\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-versicolor\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-virginica\"\>", ",", "50"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.763994162221134*^9}},
 CellLabel->
  "Out[265]=",ExpressionUUID->"3c69ab91-ab5c-4e3e-bb0b-0fe26c558618"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.763991510520833*^9, 3.763991535855422*^9}, 
   3.7639939167002153`*^9},ExpressionUUID->"601a0666-e551-4eab-9195-\
5b0149c1b361"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iris Data Subset", "Subsubsection",
 CellChangeTimes->{{3.763992550078946*^9, 
  3.763992558473377*^9}},ExpressionUUID->"ae0cbe4b-4453-42d9-a501-\
76edc0409770"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sepalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sepalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"class", "=", 
    RowBox[{
     RowBox[{"dataset", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "5"}], "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Iris-setosa\>\"", "\[Rule]", "1"}], ",", " ", 
       RowBox[{"\"\<Iris-versicolor\>\"", "\[Rule]", "2"}], ",", " ", 
       RowBox[{"\"\<Iris-virginica\>\"", "\[Rule]", "3"}]}], "}"}]}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset1", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"sepalWidth", ",", "petalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"FindClusters", "[", 
     RowBox[{"subset1", ",", 
      RowBox[{"Method", "->", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset2", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"sepalLength", ",", "sepalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c2", "=", 
    RowBox[{"FindClusters", "[", 
     RowBox[{"subset2", ",", 
      RowBox[{"Method", "->", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset3", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"petalLength", ",", "petalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c3", "=", 
    RowBox[{"FindClusters", "[", 
     RowBox[{"subset3", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset4", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"petalLength", ",", "class"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c4", "=", 
   RowBox[{"FindClusters", "[", "subset4", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.763992572321846*^9, 3.7639926682288*^9}, {
  3.763992741461824*^9, 3.763992937695015*^9}, {3.763993939182761*^9, 
  3.763993940038288*^9}, {3.763994003255328*^9, 3.763994003850746*^9}, {
  3.763994092087641*^9, 3.763994132162019*^9}, {3.763994169385898*^9, 
  3.7639942350498857`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"47bf8347-d83c-4420-9e8c-5d07fefb33a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", "c1", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c2", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c3", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c4", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.763992671825335*^9, 3.763992673479703*^9}, {
  3.763992850808432*^9, 3.763992855225669*^9}, {3.763992919535843*^9, 
  3.763992921547175*^9}, {3.763994136086574*^9, 3.763994138083211*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"bbb0f038-255e-4c96-a3d4-442fc0479c5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQE8DrNmgsBJewifA86H0Jxw/tkzIMCBxkfoNwYD
fij/JpTP7QChL8P5qOrZcZi/E2o/L5p6bhzu3YnBR3cPzL8w96SBAR9OPrp9
qO65ieF/iH4uB4g9Dwi4F90/CPfh8i+h+EA3D3t4cqK5hwdn+ON370mM8MRl
PkT+MTx8Uf3LgRH+uPyLnh5g4Q3jAwAvHiYH
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{4., 0.2}, {4.4, 0.4}, {4.1, 0.1}, {4.2, 0.2}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVNFNw1AMdNu0BIq6AzMwQN4MbNBK8Nt5YKby1UVAoApEVEHi3D35XkKf
FEXOO9vns5273f7hcW5m27+nez/1Z57u+3NsXp67c538+4m29eereT10p6bt
uFVhO+5zsG+Sx/luPM9iwL8N9hXxjlsyv+OMeH/n/I6fFfHgr/HBP8bXeEvJ
Vw3836mHx2mLeoFXPZzHR8EH+cEHeOXnfj/0j/2oyBf6gq/qjfrABzb6o3o4
bs177T/wWn/Uu2I+rVfvMY/KV/Wa0nNc39y/qfmMOMzfWeqzFOO3vI9zmPGI
q/2L/hVtf98KH+yfXeQX589SnL9FivsNnWuZ5w3rQX+AV/+4/1bYsX8t9Qbf
//epbcb5raTemvMZ9+fMepQf6tP/V6z3JPOK/+SaemIfpvjGeyNe/aO+ub/j
eud5VX74rvOB+sF/qv+/xD0p8w==
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{2.3, 1.3}, {2.2, 1.5}, {2.3, 1.3}, {2.2, 
        1.5}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{2., 4.4}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1UsENwjAMjPhQaAq0Ke2bBfiwQGZgBCT4Mg/MBDtBYp8jO2Apii4+X+xL
Dpf7+bpwzh2/K+23HGN0OXx8PlIExk18v1IMfL6KxB/4vGHeyBj1+3jKsRU+
4Vb4wMTvGS/lfuhDj/aOeUHqgdEv4d7gmfHuT39lfrp34vON5IF1fSt59Kf9
8aZ+XfUPP9Cv9Yd0bH82X94H+tY/7Xeo3g/1hKfqP2i94i/m+z2PF77WL3nr
r31Pm4e/et7yP6APvz+ji+J4
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{5.7, 4.4}, {5.2, 4.1}, {5.5, 4.2}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{4.5, 2.3}, {4.9, 2.4}, {5., 2.}, {5., 2.3}, {5.1, 2.5}, {
        4.9, 2.5}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVEkOwjAMrFgLXCG06SLxBj7QN3DijARX3gNvgj9BiceRJ62IVFmut/HY
yeFyP10nWZadv18vw6m756M/K5El6VX3fvUn74K/626/MxHdi74QP6f68XdK
0dcivfxfiv9W6sxF7iVvLv6F+gfdUbxXfLAjPvjtNb+1z7Qe+kU9xg9/toMv
i89T/Yr4ifYgC+rHiZwp38E+TXTuD/ksn7uRepu//KEe+ocOfOCD+bZ2p3jQ
H/yh2/5TPsb2aXi+NeGJ88G+2v1qyb9J9sv270fuy1znzf0hHnh5f5CP8YX4
VvnEfbT76mi/2oQvy79X/oIe7z/4RzzPF3htvZrsTdLf8PxifvQH/MPz22g+
+x4xvvhe8X6znfcH87N8MF98v+P7MDy/gvDH9+0DmKTQ0g==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{6., 2.2}, {6.2, 2.2}, {6.3, 2.3}, {6., 2.2}}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{7.2, 3.6}, {7.7, 3.8}, {7.9, 3.8}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{4.2437499999999995`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{4.3, 7.9}, {0, 4.4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+xnzQSBk/bo/LNnQOALnM8ABj9wqjcGg99Q
/k24PET8MkH9qPI7MdRD6J849O+E0h/hfIi9n3GYfxPNf5juhfkH3f3o8rjM
h/A/YIQPRPwB1L5/OP2Hyr9JMPzw68flPkR4E4oP9PDEnz52Ekw/MHlYeOLi
o/sHIv8YLfww4w9/eiGcngEXQnYw
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFUsENwjAMjHgjSNKKPwvwYYBkho5QCb7MAzPBLiAQAvGB5Hqu6jbCUmQ5
F5/PdtbtodnNjDGb30n+ck7m4z7bM5hsPsK/wumYrJIY3kbkPQLyvMK94OQH
z1veE99mW0p93NtRPfhr0HoRz4UPdVyxH9z3fBqnHvDcRv3qeVAP8u5dvivq
AV790beQ+tRDfuC1zFPnMyZOfcN9OrW/vr/pfp2qr/+LFZz7G+6/jOt5Tevh
fD9dXKt56Xgl+r7eYRbc
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{3.3, 1.}, {3.5, 1.}, {3.5, 1.}, {3.7, 1.}, {3.3, 1.}, {3., 
        1.1}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQbQwGwg5nz4DAH3sGMBBxgIj/tk8DAxEHCP0PyheD
q4eok0Tji8P5MP0Qcxmg5orCzYPZB5OHUAjzZ80EAWG4PIyP6l4JNPuFMfSj
uw8i/hPqPgk096D7TxjDP+juh/Eh6hD+gamH6QcALnSSOQ==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQESDhCaxWHWTBAQdzh7BgQYHIzBQBwqzuiQBgYI
9RBaDK4eIi8C1ccMpUWh4kxQdWIYfFT9mHx0+2H6YfIw+yDqRDH0w+Rh7oPp
h/kX3T0w/0H46OoR/gEAd4V4EA==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{6.6, 2.1}, {6.7, 2.2}, {6.9, 2.3}, {6.7, 2.}, {6.4, 
        2.}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+wZwOCDPTr/7BkQ+ALnQ+gfONUbg8FvnPKE
9KPLo/NnzQSBnzj1Q+Q/ornnM07z0P1HyD/o+gnJo9PYw+cfTv+h8wmFH6n6
CZmH3b+fcYYfofAlJE+Ijz3+/xEdHqSmRwAXHOB5
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQffYMCAg5MEAAlEbwZ80EAWE0eQE4Pw0McOtHNx+i
ngunfmMw4EczjwfNPAE0eQE0eXT7Efoh/hHE6V6Ie9DNx+0+CB93+KCHH7r7
IPoF0dQLosmjmy+C030QCuFfiH/40MznxekfiHpC5uOOX3T3Yw9P9PBBV49u
H3p6Q6Qf9PRAiI8e3hCKA6d7AWvyh1E=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQESDhCawyENDETg/FkzQUAcTV4MzjcGA3R5KTgf
QguhqZckoB+3eyDqRdHMF0Pji5Ct/+wZEEC4H+J/aZzmQ9SLoakXJmAeujy6
+xH+h7hXGKd+4uJDAk2/JE796OGFXR49ftDdj+4edPeL4tSP3X7c6RE9/CB8
hHoIjR5f6OahuwchDwD5eZS1
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763992673784834*^9, {3.76399276806087*^9, 3.763992787282262*^9}, 
   3.763992859006778*^9, {3.763992922589653*^9, 3.7639929411478167`*^9}, 
   3.763994007091297*^9, 3.7639941384537163`*^9, {3.763994205228484*^9, 
   3.763994237318416*^9}},
 CellLabel->
  "Out[335]=",ExpressionUUID->"d8883af6-c6c5-465b-91a4-795e98bf3382"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geomdata", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
     "sepalLength", ",", "sepalWidth", ",", "petalLength", ",", 
      "petalWidth"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mldata", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"geomdata", "\[Rule]", "class"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.763994594940748*^9, 3.763994770210722*^9}, {
  3.763994816525187*^9, 3.763994818882337*^9}, {3.763994905249887*^9, 
  3.7639949253590384`*^9}, {3.763994964709261*^9, 3.76399497607052*^9}, {
  3.763995911395741*^9, 3.763995912016489*^9}, {3.7639959487089033`*^9, 
  3.763995948868157*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"3fa50c06-8f77-451c-a78f-9a84539acb7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "mldata", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "90"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"90", ";;", "150"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"training", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<GradientBoostedTrees\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7639949357078733`*^9, 3.763994944968656*^9}, {
  3.763994979787269*^9, 3.763994999810773*^9}, {3.763995926564404*^9, 
  3.763995945199004*^9}, {3.763996081802479*^9, 3.763996083901497*^9}, {
  3.763996169401744*^9, 3.76399620315101*^9}, {3.7639962927207108`*^9, 
  3.7639962986980124`*^9}},
 CellLabel->
  "In[472]:=",ExpressionUUID->"08e1afed-b233-4a36-ba80-f85c96e22fce"],

Cell[BoxData["150"], "Output",
 CellChangeTimes->{{3.763994630200466*^9, 3.763994636481986*^9}, {
   3.763994672878401*^9, 3.76399477052827*^9}, 3.763994822783307*^9, {
   3.763994982351242*^9, 3.763995000196327*^9}, {3.763995916039283*^9, 
   3.763995951369611*^9}, 3.763996084259302*^9, {3.76399617622545*^9, 
   3.7639962038299417`*^9}, 3.763996299299633*^9},
 CellLabel->
  "Out[472]=",ExpressionUUID->"f3f7c964-4b18-49f4-adc9-065a8916ad8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["90", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 90, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 90, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.790000000000002, 3.0522222222222233`, 
                    3.6955555555555546`, 1.172222222222222}, "Method" -> 
                   "Naive", "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.790000000000002, 3.0522222222222233`, 
                    3.6955555555555546`, 1.172222222222222}, 
                   "StandardDeviation" -> {0.8163672920662266, 
                    0.448758231810046, 1.7631355346598458`, 
                    0.7582183470006483}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5212812413694299, 0.3782529449565857}, {
                   0.2764808715135485, 
                   0.9226601097740532}, {-0.578198550924975, 
                   0.036151284689160776`}, {-0.5634808167024979, 
                   0.06569715426656851}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.790000000000002, 3.0522222222222233`, 
                    3.6955555555555546`, 1.172222222222222}, 
                    "StandardDeviation" -> {0.8163672920662266, 
                    0.448758231810046, 1.7631355346598458`, 
                    0.7582183470006483}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 2, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.008568, "MaxTrainingMemory" -> 64160, 
                  "DataMemory" -> 3192, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2019, 4, 11, 14, 31, 39.320348`8.347192331370653}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.790000000000002, 3.0522222222222233`, 
              3.6955555555555546`, 1.172222222222222}, 
             "StandardDeviation" -> {0.8163672920662266, 0.448758231810046, 
              1.7631355346598458`, 0.7582183470006483}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 8415957471436239695]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {1.9777777777777779`}, 
             "StandardDeviation" -> {0.8296957645597542}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1498057195963834616]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 7357403114269404207]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (1.9777777777777779` + 
       0.8296957645597542 #& ), 
      "ProcessorFunction" -> (-2.383738548824832 + 1.2052610640125554` #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-1.1784774848122765`, 1.2320446432128342`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["Trees" -> {
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.6301321983337402, 
            0.19599021971225739`}], "LeafValues" -> 
          RawArray["Real32",{-0.2356954962015152, 0.00535671878606081, 
            0.24640893936157227`, 0.03749701380729675}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.6301321983337402, 
            0.19599021971225739`}], "LeafValues" -> 
          RawArray["Real32",{-0.18855640292167664`, 0.004285371862351894, 
            0.19712714850902557`, 0.029997607693076134`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.5980507135391235, 
            1.0517878532409668`}], "LeafValues" -> 
          RawArray["Real32",{-0.15084512531757355`, 0.0044282181188464165`, 
            0.14167174696922302`, 0.1627155989408493}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.6301321983337402, 
            0.19599021971225739`}], "LeafValues" -> 
          RawArray["Real32",{-0.12067610025405884`, 0.002542654285207391, 
            0.12824329733848572`, 0.015512204729020596`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.5980507135391235, 
            0.992200493812561}], "LeafValues" -> 
          RawArray["Real32",{-0.09654088318347931, 0.0010461495257914066`, 
            0.10592972487211227`, 0.09107910096645355}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.7064434289932251, 0.6301321983337402, 
            0.19599021971225739`}], "LeafValues" -> 
          RawArray["Real32",{-0.07723270356655121, 0.0018248934065923095`, 
            0.08364292234182358, 0.006804750766605139}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5980507135391235, -0.7064434289932251, 
            0.992200493812561}], "LeafValues" -> 
          RawArray["Real32",{-0.061786163598299026`, 
            0.07089662551879883, -0.0005398843786679208, 
            0.05715920031070709}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5980507135391235, -0.7064434289932251, 
            1.0517878532409668`}], "LeafValues" -> 
          RawArray["Real32",{-0.04942893236875534, 
            0.04413313418626785, -0.00043190785800106823`, 
            0.05915047600865364}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6301321983337402, -0.7064434289932251, 
            0.19599021971225739`}], "LeafValues" -> 
          RawArray["Real32",{-0.03954314440488815, 0.04460897669196129, 
            0.0016542732482776046`, -0.0005656552384607494}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.711484968662262, -0.7064434289932251, 
            0.07349633425474167}], "LeafValues" -> 
          RawArray["Real32",{-0.03163451701402664, 0.037479467689991, 
            0.00986915361136198, -0.010503175668418407`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.6301321983337402, -0.4506262242794037, -1.1601805686950684`}], 
          "LeafValues" -> 
          RawArray["Real32",{0.005740784574300051, 
            0.029271185398101807`, -0.025307610630989075`, \
-0.015921777114272118`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.711484968662262, -0.7064434289932251, 
            0.07349633425474167}], "LeafValues" -> 
          RawArray["Real32",{-0.02073344960808754, 0.024652235209941864`, 
            0.00724203372374177, -0.007867502048611641}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.2344677895307541, -0.22778907418251038`, -0.7064434289932251}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.01658676005899906, 0.02395286224782467, 
            0.008344796486198902, -0.0043396372348070145`}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 2, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.6301321983337402, -0.4506262242794037, -0.5389730930328369}], 
          "LeafValues" -> 
          RawArray["Real32",{0.0031919076573103666`, 
            0.016415966674685478`, -0.013007307425141335`, \
-0.010839478112757206`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.711484968662262, 9.999999682655225*^-21, 
            0.10257966071367264`}], "LeafValues" -> 
          RawArray["Real32",{-0.006778146140277386, 
            0.013791735284030437`, -0.012294904328882694`, 
            0.006636375095695257}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.2344677895307541, 
            0.6859657764434814, -0.7064434289932251}], "LeafValues" -> 
          RawArray["Real32",{-0.008632862009108067, 0.015302015468478203`, 
            0.001503493869677186, -0.0030666927341371775`}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.7682021260261536, 9.999999682655225*^-21, 
            0.2577478885650635}], "LeafValues" -> 
          RawArray["Real32",{-0.004701516125351191, 
            0.010336974635720253`, -0.008579299785196781, 
            0.0033313389867544174`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.7682021260261536, 9.999999682655225*^-21, 
            0.10257966071367264`}], "LeafValues" -> 
          RawArray["Real32",{-0.0036144584883004427`, 
            0.008269580081105232, -0.006863439455628395, 
            0.0028877011500298977`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 4, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.7620202898979187, 
            0.10257966071367264`, -0.9064547419548035}], "LeafValues" -> 
          RawArray["Real32",{0.009760797023773193, -0.003909390885382891, 
            0.0036669897381216288`, -0.007972716353833675, \
-0.002890906063839793}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 1, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.7682021260261536, 
            0.07349633425474167, -0.1676306426525116, -1.216301679611206}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.003009538631886244, 
            0.005967587698251009, -0.00819477066397667, 
            0.005543335806578398, -0.0038803014904260635`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {4, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.3184840977191925, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{0.0076151276007294655`, -0.0059721083380281925`, 
            0.0019489993574097753`, -0.0019732972141355276`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 1, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.7682021260261536, 
            0.07349633425474167, -0.1676306426525116, -1.216301679611206}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0018025077879428864`, 
            0.0044798944145441055`, -0.006803120020776987, 
            0.0043609486892819405`, -0.003039801260456443}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {4, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.3184840977191925, 
            0.08759646117687225}], "LeafValues" -> 
          RawArray["Real32",{0.005959332920610905, -0.0014176450204104185`, 
            0.0012857316760346293`, -0.005515282042324543}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 
            0.2344677895307541, -0.22778907418251038`, -0.9064547419548035}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.005056612193584442, -0.004463940393179655, 
            0.011291364207863808`, -0.0010098732309415936`, \
-0.0006496612331829965}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 1, 1, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.3184840977191925, 
            0.992200493812561, -0.17149144411087036`, -1.0844135284423828`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0015196372987702489`, 
            0.009447182528674603, -0.0034286738373339176`, \
-0.006724946666508913, 0.002254535909742117}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, -3}, {4, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.9383535385131836, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.008377866819500923, 0.0045082964934408665`, 
            0.005413435399532318, -0.0024687161203473806`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.498244047164917, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{0.005977601278573275, 
            0.003625977784395218, -0.0037205407861620188`, \
-0.002148460363969207}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 
            0.2344677895307541, -0.22778907418251038`, -0.9064547419548035}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0041649420745670795`, -0.003731821198016405, 
            0.00836313609033823, -0.0005284269573166966, 
            0.00041274260729551315`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.007802031468600035, 0.004170689731836319, 
            0.0035205604508519173`, -0.0016515706665813923`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.4278993010520935, 
            0.8249192237854004, -0.7839608192443848}], "LeafValues" -> 
          RawArray["Real32",{
            0.006182264070957899, -0.00033577054273337126`, \
-0.00563617842271924, -0.0011624773032963276`, 0.0022702228743582964`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.498244047164917, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{0.004945811349898577, 
            0.0026073188055306673`, -0.0031616901978850365`, \
-0.0014002304524183273`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.008061902597546577, 0.003920434974133968, 
            0.003121498739346862, -0.001001848140731454}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 3, 4, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.4278993010520935, 
            0.8939084410667419, -0.9064547419548035}], "LeafValues" -> 
          RawArray["Real32",{
            0.00524950074031949, -0.0005691804690286517, \
-0.004766837228089571, -0.0009062596363946795, 0.0016169319860637188`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 0.2344677895307541, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.003537168027833104, -0.003432965138927102, 
            0.007243333850055933, 0.0009075888665392995}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.0071149952709674835`, 0.003803444094955921, 
            0.002617722377181053, -0.0010359815787523985`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.4278993010520935, 
            0.8249192237854004, -0.7839608192443848}], "LeafValues" -> 
          RawArray["Real32",{
            0.005462524946779013, -0.00014569249469786882`, \
-0.005148851778358221, -0.0009655203903093934, 0.0018835958326235414`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 1, 4, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.5634718537330627, 
            0.10257966071367264`, -1.216301679611206}], "LeafValues" -> 
          RawArray["Real32",{0.004370019771158695, -0.0003254768089391291, 
            0.0015129406237974763`, -0.007548321038484573, 
            0.001002190518192947}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 0.2344677895307541, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.003009953536093235, -0.0035548319574445486`, 
            0.006919487379491329, 0.000780792033765465}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 1, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.7682021260261536, 
            0.07349633425474167, -0.1676306426525116, -1.216301679611206}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.00021702689991798252`, 
            0.0029319319874048233`, -0.007211722433567047, 
            0.0036643140483647585`, -0.00125970714725554}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {4, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 0.2344677895307541, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.002422504359856248, -0.0031656345818191767`, 
            0.005764859262853861, 0.0007597948424518108}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 1, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.8249192237854004, -0.6734633445739746, -0.17149144411087036`, \
-0.9064547419548035}], "LeafValues" -> 
          RawArray["Real32",{-0.007153769489377737, 
            0.003169342875480652, -0.00006885395850986242, 
            0.003513163421303034, -0.0013028006069362164`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {4, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 4, 1, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 
            0.498244047164917, -0.17149144411087036`, -0.9064547419548035}], 
          "LeafValues" -> 
          RawArray["Real32",{
            0.004707592539489269, -0.00005508316826308146, \
-0.003435980761423707, 0.0031422562897205353`, -0.0013735905522480607`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.006523605436086655, 0.0030746052507311106`, 
            0.002565280767157674, -0.0007677615503780544}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.4278993010520935, 
            0.8249192237854004, -0.9064547419548035}], "LeafValues" -> 
          RawArray["Real32",{
            0.004814842715859413, -0.00012578777386806905`, \
-0.0049359723925590515`, -0.0010729391360655427`, 0.0016802891623228788`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, -0.4506262242794037, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{
            0.004661988001316786, -0.0030676061287522316`, \
-0.0020554205402731895`, 0.00010476283205207437`}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21, 0.44072234630584717`}], "LeafValues" -> 
          RawArray["Real32",{-0.006914002355188131, 
            0.0030816339422017336`, -0.0016020440962165594`, 
            0.0035411445423960686`, 0.0006246169796213508}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {4, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.4278993010520935, 
            0.8249192237854004, -1.216301679611206}], "LeafValues" -> 
          RawArray["Real32",{0.00413878820836544, 
            0.00008030530443647876, -0.004382070619612932, \
-0.0008928805473260581, 0.0015129047678783536`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{1, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6859657764434814, 0.2344677895307541, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.001889954088255763, -0.0029078146908432245`, 
            0.005037157796323299, 0.000585707020945847}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {3, -3}, {-1, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 2, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.8249192237854004, -0.6734633445739746, 
            9.999999682655225*^-21}], "LeafValues" -> 
          RawArray["Real32",{-0.0061551658436656, 0.002989507280290127, 
            0.002664941130205989, -0.0009855226380750537}], "Children" -> 
          RawArray["Integer16",{{2, -2}, {-1, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{2, 1, 4, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.8963004350662231, 0.5634718537330627, 
            0.10257966071367264`, -1.216301679611206}], "LeafValues" -> 
          RawArray["Real32",{0.0043203216046094894`, 0.00008237571455538273, 
            0.0014884151751175523`, -0.008084412664175034, 
            0.0011053656926378608`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]]}, "ClassNumber" -> 1, "IterationsNumber" -> 
      50, "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["DensifyNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 7861921941792256146, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], 
      "DistributionData" -> {NormalDistribution, {0.11023102537522145`}}, 
      "Method" -> "GradientBoostedTrees", "Options" -> 
      Association[
       "BoostingMethod" -> 
        Association["Value" -> "Gradient", "Options" -> Association[]], 
        MaxTrainingRounds -> 
        Association["Value" -> 50, "Options" -> Association[]], 
        "LeavesNumber" -> 
        Association["Value" -> 110, "Options" -> Association[]], 
        "LearningRate" -> 
        Association["Value" -> 0.2, "Options" -> Association[]], 
        ValidationSet -> 
        Association["Value" -> Automatic, "Options" -> Association[]], 
        "MaxBinNumber" -> 
        Association["Value" -> 255, "Options" -> Association[]], 
        "ThreadNumber" -> 
        Association["Value" -> 4, "Options" -> Association[]], "MaxDepth" -> 
        Association["Value" -> 6, "Options" -> Association[]], "LeafSize" -> 
        Association["Value" -> 15, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFrequency" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "MinGainToSplit" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], "LossFunction" -> 
        Association[
         "Value" -> "MeanSquaredError", "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.001921967241799792, 0.34563801883437595`], 
         "StandardDeviation" -> 
         PlusMinus[0.3139421721280307, 0.08301281012457809], "EvaluationTime" -> 
         0.00016152777777777777`, "TestSize" -> 54, "TrainingSize" -> 72, 
         "TrainingTime" -> 0.04787274999999999, "TrainingMemory" -> 410274., 
         "ModelMemory" -> 110332., "ExperimentCount" -> 3, "ModelUtility" -> 
         1.3067586455596842`, "MeanCrossEntropyHistory" -> {
           PlusMinus[0., 0.13334710034691077`], 
           PlusMinus[0.9963289286494518, 2.180144227758373], 
           PlusMinus[0., 0.13786030402851132`]}, "StandardDeviationHistory" -> {
           PlusMinus[0.29685381756491713`, 0.15150796502228087`], 
           PlusMinus[0.3378194967352153, 0.12740872106618603`], 
           PlusMinus[0.29740427434425454`, 0.15087936467880728`]}, 
         "Configuration" -> {
          "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
           MaxTrainingRounds -> 50, "LeavesNumber" -> 110, "LearningRate" -> 
           0.2, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
           "ThreadNumber" -> 4, "MaxDepth" -> 6, "LeafSize" -> 15, 
           "FeatureFraction" -> 1, "BaggingFraction" -> 1, "BaggingFrequency" -> 
           0, "MinGainToSplit" -> 0, "L1Regularization" -> 0, 
           "L2Regularization" -> 0, "LossFunction" -> "MeanSquaredError"}, 
         "FinalTrainingSize" -> 90], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 3], 
          TypeSystem`Vector[TypeSystem`AnyType, 17], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 170132410987854]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 500], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.7750000000000003`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01057375, 
              "TrainingMemory" -> 59402., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646585168226, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6639790813171028, 0.09999238830023457], 
              "StandardDeviation" -> 
              PlusMinus[0.5218225170543688, 0.05795270252963435], 
              "EvaluationTime" -> 0.00015759259259259258`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.03271033333333333, 
              "TrainingMemory" -> 386986.6666666666, "ModelMemory" -> 109776.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.8097705742117443, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6580954954933401, 0.13451640667425135`], 
                PlusMinus[0.6711759747821477, 0.14877390005663024`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5197509930185331, 0.08116993602894233], 
                PlusMinus[0.5239706196177911, 0.08265663520391599]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015759259259259258`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.5218225170543688, 0.05795270252963435], 
             "TrainingMemory" -> 386986.6666666666, "TrainingTime" -> 
             0.040013049999999994`], "Index" -> 1], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 250], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 3], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.1390766155531815`, 1868.9954070088], 
              "StandardDeviation" -> 
              PlusMinus[0.4657064340720899, 0.07750257140003923], 
              "EvaluationTime" -> 0.00004208125000000001, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0345495, 
              "TrainingMemory" -> 389400., "ModelMemory" -> 109776., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.8976226326034219, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[14.219379393503635`, 6.8012114939227], 
                PlusMinus[1.125400921190797, 0.21893829035679793`], 
                PlusMinus[5614.64710586782, 1491.0339721416503`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.350623820216254, 0.06746479362809123], 
                PlusMinus[0.4684633850475943, 0.034643555396784986`], 
                PlusMinus[0.6000493735532805, 0.07644730553435956]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.007981240966233163, 15.519300163810952`], 
              "StandardDeviation" -> 
              PlusMinus[0.3266429975374934, 0.09952800663949989], 
              "EvaluationTime" -> 0.00015898148148148146`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.05503433333333333, 
              "TrainingMemory" -> 561389.3333333333, "ModelMemory" -> 
              116570.66666666666`, "ExperimentCount" -> 2, "ModelUtility" -> 
              1.24641135986692, "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.4322917205442094], 
                PlusMinus[31.026559558845033`, 26.949620300124604`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.2958721558272768, 0.1526749583145996], 
                PlusMinus[0.3469047052939476, 0.1238899693578215]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015898148148148146`, "ModelMemory" -> 
             116570.66666666666`, "StandardDeviation" -> 
             PlusMinus[0.3266429975374934, 0.09952800663949989], 
             "TrainingMemory" -> 561389.3333333333, "TrainingTime" -> 
             0.0840804], "Index" -> 2], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 6], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.728125*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01017325, 
              "TrainingMemory" -> 59374., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646585411396, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.0023107100588427585`, 0.11519675425860447`], 
              "StandardDeviation" -> 
              PlusMinus[0.33591891023499537`, 0.09301193992279211], 
              "EvaluationTime" -> 0.00016166666666666665`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.05468533333333332, 
              "TrainingMemory" -> 448349.3333333333, "ModelMemory" -> 
              112058.66666666666`, "ExperimentCount" -> 2, "ModelUtility" -> 
              1.2183814318472634`, "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.09326872226429853], 
                PlusMinus[0.13736907955186606`, 0.7130566769638813]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.3105991638139661, 0.1381844136230221], 
                PlusMinus[0.35482259706230224`, 0.1193995365152723]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00016166666666666665`, "ModelMemory" -> 
             112058.66666666666`, "StandardDeviation" -> 
             PlusMinus[0.33591891023499537`, 0.09301193992279211], 
             "TrainingMemory" -> 448349.3333333333, "TrainingTime" -> 
             0.059390049999999986`], "Index" -> 3], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.490625*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0101605, 
              "TrainingMemory" -> 59378., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646586643463, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.219522774122112, 0.06410638002298306], 
              "StandardDeviation" -> 
              PlusMinus[0.8285492303783123, 0.04931175904810117], 
              "EvaluationTime" -> 0.00001298148148148148, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010311333333333332`, 
              "TrainingMemory" -> 63816., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.5151925516352044, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.219522774122112, 0.09066011206314628], 
                PlusMinus[1.219522774122112, 0.09066011206314628]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8285492303783123, 0.06973735843029887], 
                PlusMinus[0.8285492303783123, 0.06973735843029887]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00001298148148148148, "ModelMemory" -> 
             20528., "StandardDeviation" -> 
             PlusMinus[0.8285492303783123, 0.04931175904810117], 
             "TrainingMemory" -> 63816., "TrainingTime" -> 
             0.019440699999999998`], "Index" -> 4], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.02], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.509375*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010391, 
              "TrainingMemory" -> 59634., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646586546195, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.3022449838517019, 0.09207818511439148], 
              "StandardDeviation" -> 
              PlusMinus[0.4262497410493886, 0.06741461682351849], 
              "EvaluationTime" -> 0.00015787037037037034`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.034372, 
              "TrainingMemory" -> 423861.3333333333, "ModelMemory" -> 109776.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.9822836299145217, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.28359762946106887`, 0.06767760780692592], 
                PlusMinus[0.41824467172329804`, 0.1687970286213206]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.4087615393389909, 0.0931515766950245], 
                PlusMinus[0.443044836991139, 0.09128698800253292]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015787037037037034`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.4262497410493886, 0.06741461682351849], 
             "TrainingMemory" -> 423861.3333333333, "TrainingTime" -> 
             0.041325799999999996`], "Index" -> 5], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 3], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.978125*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00998775, 
              "TrainingMemory" -> 59950., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646584114485, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6639790813171028, 0.09999238830023457], 
              "StandardDeviation" -> 
              PlusMinus[0.5218225170543688, 0.05795270252963435], 
              "EvaluationTime" -> 0.00015766666666666666`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.031625999999999994`, 
              "TrainingMemory" -> 376192., "ModelMemory" -> 109776., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.8097705741517612, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6580954954933401, 0.13451640667425135`], 
                PlusMinus[0.6711759747821477, 0.14877390005663024`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5197509930185331, 0.08116993602894233], 
                PlusMinus[0.5239706196177911, 0.08265663520391599]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015766666666666666`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.5218225170543688, 0.05795270252963435], 
             "TrainingMemory" -> 376192., "TrainingTime" -> 
             0.038451149999999996`], "Index" -> 6], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.690625*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010006000000000001`, 
              "TrainingMemory" -> 59854., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646585605933, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6678489120045857, 0.05339731548727548], 
              "StandardDeviation" -> 
              PlusMinus[0.5236334703138414, 0.049722581395709266`], 
              "EvaluationTime" -> 0.00015587037037037037`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.031205333333333335`, 
              "TrainingMemory" -> 384426.6666666666, "ModelMemory" -> 109776.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.809520275404524, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6662612673176616, 0.07737247150987682], 
                PlusMinus[0.6692905494657837, 0.07372891487001584]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5230654718057344, 0.07071193787745275], 
                PlusMinus[0.5241888561471503, 0.06992243448126362]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015587037037037037`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.5236334703138414, 0.049722581395709266`], 
             "TrainingMemory" -> 384426.6666666666, "TrainingTime" -> 
             0.0380908], "Index" -> 7], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.5375000000000004`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01017275, 
              "TrainingMemory" -> 59374., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646586400292, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.001921967241799792, 0.34563801883437595`], 
              "StandardDeviation" -> 
              PlusMinus[0.3139421721280307, 0.08301281012457809], 
              "EvaluationTime" -> 0.00016152777777777777`, "TestSize" -> 54, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.04787274999999999, 
              "TrainingMemory" -> 410274., "ModelMemory" -> 110332., 
              "ExperimentCount" -> 3, "ModelUtility" -> 1.3067586455596842`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.13334710034691077`], 
                PlusMinus[0.9963289286494518, 2.180144227758373], 
                PlusMinus[0., 0.13786030402851132`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.29685381756491713`, 0.15150796502228087`], 
                PlusMinus[0.3378194967352153, 0.12740872106618603`], 
                PlusMinus[0.29740427434425454`, 0.15087936467880728`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00016152777777777777`, "ModelMemory" -> 
             110332., "StandardDeviation" -> 
             PlusMinus[0.3139421721280307, 0.08301281012457809], 
             "TrainingMemory" -> 410274., "TrainingTime" -> 
             0.05325822499999999], "Index" -> 8], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 13], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.490625*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.009972, 
              "TrainingMemory" -> 59618., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646586643463, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.219522774122112, 0.06410638002298306], 
              "StandardDeviation" -> 
              PlusMinus[0.8285492303783123, 0.04931175904810117], 
              "EvaluationTime" -> 9.87037037037037*^-6, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010086, 
              "TrainingMemory" -> 63858.666666666664`, "ModelMemory" -> 
              20528., "ExperimentCount" -> 2, "ModelUtility" -> 
              0.5151925532380256, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.219522774122112, 0.09066011206314628], 
                PlusMinus[1.219522774122112, 0.09066011206314628]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8285492303783123, 0.06973735843029887], 
                PlusMinus[0.8285492303783123, 0.06973735843029887]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 9.87037037037037*^-6, "ModelMemory" -> 20528.,
              "StandardDeviation" -> 
             PlusMinus[0.8285492303783123, 0.04931175904810117], 
             "TrainingMemory" -> 63858.666666666664`, "TrainingTime" -> 
             0.0190494], "Index" -> 9], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2990056155861065`, 0.01685507377917081], 
              "StandardDeviation" -> 
              PlusMinus[0.8289400765066617, 0.018491917030229427`], 
              "EvaluationTime" -> 3.6156250000000002`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010185999999999999`, 
              "TrainingMemory" -> 59374., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5187646585995007, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049], 
                PlusMinus[1.2887660418201181`, 0.0261652764260887], 
                PlusMinus[1.290875595145369, 0.025916161431559722`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085], 
                PlusMinus[0.8316604708735472, 0.03155809325495255], 
                PlusMinus[0.8310085005422639, 0.03153529231315594]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.008481975067668844, 1.575149181610687], 
              "StandardDeviation" -> 
              PlusMinus[0.3267471046272601, 0.09779297328840834], 
              "EvaluationTime" -> 0.0001610555555555555, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.045203, 
              "TrainingMemory" -> 473770.6666666666, "ModelMemory" -> 
              112666.66666666666`, "ExperimentCount" -> 2, "ModelUtility" -> 
              1.2472857372006674`, "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.21713650207037952`], 
                PlusMinus[3.1203043747013153`, 4.159027029846146]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.30147946538752807`, 0.14657368595948583`], 
                PlusMinus[0.34525899178337055`, 0.12545819147466794`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001610555555555555, "ModelMemory" -> 
             112666.66666666666`, "StandardDeviation" -> 
             PlusMinus[0.3267471046272601, 0.09779297328840834], 
             "TrainingMemory" -> 473770.6666666666, "TrainingTime" -> 
             0.0508687], "Index" -> 10], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.004], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3147937314915137`, 0.03415915491961346], 
              "StandardDeviation" -> 
              PlusMinus[0.8239672393016222, 0.045465089936465274`], 
              "EvaluationTime" -> 3.675*^-6, "TestSize" -> 80, "TrainingSize" -> 
              10, "TrainingTime" -> 0.009105, "TrainingMemory" -> 60328, 
              "ModelMemory" -> 20528, "ExperimentCount" -> 1, "ModelUtility" -> 
              0.5185019962103175, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3147937314915137`, 0.02415417008326049]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8239672393016222, 0.03214867340133085]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.219522774122112, 0.06410638002298306], 
              "StandardDeviation" -> 
              PlusMinus[0.8285492303783123, 0.04931175904810117], 
              "EvaluationTime" -> 0.000010407407407407405`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010408666666666667`, 
              "TrainingMemory" -> 63842.666666666664`, "ModelMemory" -> 
              20528., "ExperimentCount" -> 2, "ModelUtility" -> 
              0.5151925529613481, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.219522774122112, 0.09066011206314628], 
                PlusMinus[1.219522774122112, 0.09066011206314628]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8285492303783123, 0.06973735843029887], 
                PlusMinus[0.8285492303783123, 0.06973735843029887]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000010407407407407405`, "ModelMemory" -> 
             20528., "StandardDeviation" -> 
             PlusMinus[0.8285492303783123, 0.04931175904810117], 
             "TrainingMemory" -> 63842.666666666664`, "TrainingTime" -> 
             0.0184728], "Index" -> 11]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["GradientBoostedTrees"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 11], 
        Association["ID" -> 170128116020558]], "MaxTrainingSize" -> 90, 
      "LastReportingTime" -> 3.763981901482014`16.328222515683137*^9, 
      "PreprocessorEvaluationTime" -> 4.53662109375`3.*^-6, 
      "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.7999999999999999, 
          "ElapsedTimes" -> 0.9496899999999999, "ExperimentCounts" -> 31], 
         Association[
         "TrainingSizes" -> 72, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          1.008124, "ExperimentCounts" -> 23]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[170136705955150]], "ID" -> 
         170141000922446]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{6., 2.7, 5.1, 1.6}}, "ID" -> 1638824798713428667]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.508473, "MaxTrainingMemory" -> 1079344, 
      "DataMemory" -> 19488, "FunctionMemory" -> 368672, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2019, 4, 11, 14, 31, 41.804722`8.373800317711922}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.763994630200466*^9, 3.763994636481986*^9}, {
   3.763994672878401*^9, 3.76399477052827*^9}, 3.763994822783307*^9, {
   3.763994982351242*^9, 3.763995000196327*^9}, {3.763995916039283*^9, 
   3.763995951369611*^9}, 3.763996084259302*^9, {3.76399617622545*^9, 
   3.7639962038299417`*^9}, 3.763996301828148*^9},
 CellLabel->
  "Out[475]=",ExpressionUUID->"d3d8eca8-f347-44b9-bbd8-4465b77ec697"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pm1", "=", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"p", ",", "validation"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pm1", "[", "\"\<ComparisonPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p", ",", "validation", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.76399479857661*^9, {3.7639960383992558`*^9, 3.763996064389244*^9}, {
   3.763996107382895*^9, 3.763996107675482*^9}},
 CellLabel->
  "In[476]:=",ExpressionUUID->"dd89c216-b16e-4964-b6c0-decfc22faafd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCwBWJGIGYC4o1/5QXuP/hvzwABDmrcO2R5frM7QLgcDl9m
1duqLWRwgMl/6q5VOboNIc92TyYs//N7qP4P9ld0N6W7n+OAy+/cqu3YKI5Q
z+O5as7pNQj1B2aW7A8MQaj/1Cm+LGEDQj26e2Rn3vO9Eo5wT9ANPsX94cxw
ec+kQMnCPia4fE6PhfkhxQ9w+zRPimyItkToR3fP4S2FWduN2eHyx56dfzDx
HsJ95ms6C9aGIfTfXVPzO6wQIe/WecK+YRciPJtPd9j9tUHYbzKh6f/b3Qj7
0O1H9z8f7wMtnSNscPt0RO7kansgzNepnTfhyUoEXzmY98vu/wh+xdJlEU9Y
cMcvOr9f0aHWQxnhP3T3vkp/GN3+BhHe6O6/UtG+avVsRHgs+RetmMCGMO9l
RqrI3y8I9RdWr/pUaY6QX/tl8paVwbjjZ0KMb8gyA9z+aTI/84RDCBHe6P5H
tz9PbNu/pWII+65wzk1li0G4H93+qvBpH1f9Rdh3eGn8r9OSCPtO7diuxl/M
DDcPXb/+6fk9dxgR6g1DZvlFP0S4Ly100veEDoT5BXrlxotEEe7je/ouJqAA
If9KxsTjxE2E+QCe1QLb
          "]]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9924002294427334`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9924002294427334`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9924002294427334`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9975817033568033`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9975817033568033`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9975817033568033`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.078686218697266, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.078686218697266`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.078686218697266, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9642432070554543`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9642432070554543`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9642432070554543`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9984661752595805, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9984661752595805`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9984661752595805, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.100722131848423, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.100722131848423`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.100722131848423, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.886477002283496, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.886477002283496`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.886477002283496, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.0411715466936755`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.0411715466936755`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.0411715466936755`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9611218429501998`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9611218429501998`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9611218429501998`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9975817033568033`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9975817033568033`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9975817033568033`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0428854068333195`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0428854068333195`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0428854068333195`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.4178450186400733`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.4178450186400733`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.4178450186400733`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.3195516565286067`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.3195516565286067`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.3195516565286067`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.0082418591562385`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.0082418591562385`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.0082418591562385`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.028006911882717, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.028006911882717`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.028006911882717, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.900252181620631, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.900252181620631`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.900252181620631, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.1086766780325403`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.1086766780325403`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.1086766780325403`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0423229972853068`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0423229972853068`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0423229972853068`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.055341686956679, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.055341686956679`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.055341686956679, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.983032464173975, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.983032464173975`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.983032464173975, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.014889950060678, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.014889950060678`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.014889950060678, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9916906347684802, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9916906347684802`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9916906347684802, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9611218429501998`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9611218429501998`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9611218429501998`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.845787367784971, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.845787367784971`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.845787367784971, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.955119542254816, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.955119542254816`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.955119542254816, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9789777421172614`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9789777421172614`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9789777421172614`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9999351056369015`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9999351056369015`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9999351056369015`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9386943304947106`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9386943304947106`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9386943304947106`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9975817033568033`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9975817033568033`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9975817033568033`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9975817033568033`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9975817033568033`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9975817033568033`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0172281060405974`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0172281060405974`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0172281060405974`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9916906347684802, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9916906347684802`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9916906347684802, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.4904925516284395`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.4904925516284395`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.4904925516284395`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.076011020907666, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.076011020907666`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.076011020907666, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0031130415153076`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0031130415153076`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0031130415153076`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9986558340417818, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9986558340417818`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9986558340417818, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0270880659422588`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0270880659422588`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0270880659422588`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0408510310795323`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0408510310795323`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0408510310795323`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9493773739866675`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9493773739866675`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9493773739866675`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9975817033568033`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9975817033568033`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9975817033568033`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.0044030129824653`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.0044030129824653`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.0044030129824653`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9386943304947106`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9386943304947106`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9386943304947106`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9986558340417818, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9986558340417818`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9986558340417818, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.011058797771333, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.011058797771333`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.011058797771333, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{3.044934076170856, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"3.044934076170856`", ",", "3.`"}], "}"}]], 
         Annotation[#, {3.044934076170856, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9988612054830215`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9988612054830215`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9988612054830215`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.0062980442256595`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.0062980442256595`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.0062980442256595`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.431181242448564, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.431181242448564`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.431181242448564, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.9898431835047474, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.9898431835047474`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.9898431835047474, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.0004544728405553`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.0004544728405553`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.0004544728405553`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.992518717806217, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.992518717806217`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.992518717806217, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.9415912000210254`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.9415912000210254`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.9415912000210254`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0105632801767612`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0105632801767612`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0105632801767612`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.929840780296792, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.929840780296792`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.929840780296792, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{0.995334759733763, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"0.995334759733763`", ",", "1.`"}], "}"}]], 
         Annotation[#, {0.995334759733763, 1.}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxXss1AEcAPDjzvn1m63dVTKvUZdlNDcbeYYsFHd/nOiSdtI5hTntlCzL
Y6prXnnbRcgmwmW3IdPF6di6alKNcguNP6zj8sjrTq76w/f7x2cf50QxL8mc
QqFw/vn/F6uBn7qIxaC95fW9qRou/sBdsdh2HveLatcnJeDNRbWrM1l4Oplp
+NyKE8QJ8hVtCQ6kNroWD+GsGN6c+sIvmEe1aqCkLMNTXqcZQtYK7Gw9O1yp
x71cLEPPdKzCxHw15U3WGtxi3KTfD/4Nk6FzWo0RZ/t467Wj6/DRy8yx9MIN
eFqr2go7tQnziW8CneUW/ESYXc1Q4y3p+QTt0Tac8Sle7c83wKRIxV1nGuGr
z0qs73zHpTZznQWyHTjtZFNebPIf2Kab3SBm78Ll/HNSchF/K3/XfaPPBCfb
6qK7/CjBe3PIKYm6FmeO5yhUO7jSQ/jVFGcGRySZ7FkqvC+cRk89Zg5bDXMm
VgvwkAORIwkLePxO8eP94VT4UoWP9Y8W3NdU+6KOoMG71AB2uQh/OlM5Jn6P
u0ezY8vcLGCZxDt/XIovpCxrtpdwe4PemBhFhz0SmiMVCtxFogxiHbaEaY6O
dpOZuKrR81DGFC7sL9o460vAulxuTlgNznMYcXI14o28vM6oi/tgftcHi5U4
nEnYCarj8UJlD2NagF87rrslFuGeuzEhFRJ8pN1tYrIEv0vL9sgpw30Eo1Kn
cvz5wSv+16vw0tyaJoMM58eYpTq04YxurlrVjmvIegdRBx445P1RLsePuKV5
Bffg2nv9pfO9eNUsfUH6EqfXNMvGB/DBZf3aTSV+OzKAYzuIe7Y+bH09hOso
k6bEYfwvfrcmBw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$827042#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0.8955815784169422, 0.8955815784169422}, 
     PlotRange -> {{0.8839015087783577, 3.2199154364952496`}, {
      0.8839015087783577, 3.2199154364952496`}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, Axes -> {False, False},
      AxesLabel -> {None, None}, 
     AxesOrigin -> {0.8955815784169422, 0.8955815784169422}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.8839015087783577, 3.2199154364952496`}, {
      0.8839015087783577, 3.2199154364952496`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.2`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.763994800442896*^9, 3.763994824705349*^9}, {
   3.763994987838048*^9, 3.7639950050462103`*^9}, {3.763995920847015*^9, 
   3.76399595716881*^9}, {3.763996044705618*^9, 3.763996108532799*^9}, 
   3.76399618182275*^9, 3.763996236643734*^9, 3.7639963036046886`*^9},
 CellLabel->
  "Out[477]=",ExpressionUUID->"76d2bcd7-302f-4947-a07c-e8d794e83b13"],

Cell[BoxData["0.20244934525426103`"], "Output",
 CellChangeTimes->{{3.763994800442896*^9, 3.763994824705349*^9}, {
   3.763994987838048*^9, 3.7639950050462103`*^9}, {3.763995920847015*^9, 
   3.76399595716881*^9}, {3.763996044705618*^9, 3.763996108532799*^9}, 
   3.76399618182275*^9, 3.763996236643734*^9, 3.7639963038565474`*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"77dff43d-f6db-4a83-9b6e-9547450277e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cf", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"mldata", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<DecisionTree\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76399630607793*^9, 3.763996337700274*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"6c974c7e-9e6d-4d45-9248-a7adcb78a2b5"],

Cell[CellGroupData[{

Cell[BoxData["cf"], "Input",
 CellChangeTimes->{{3.76399636550454*^9, 3.763996365700482*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"960f54ee-eb20-4a5e-beab-35bcbb863e9f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["150", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 150, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 150, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, "Method" -> "Naive", "VectorLength" -> 
                   4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, 
                   "StandardDeviation" -> {0.8253012917851231, 
                    0.4321465800705415, 1.758529183405524, 
                    0.7606126185881729}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5223716204076705, 
                   0.37231836334997126`, -0.7210168090620369}, {
                   0.2633549153139372, 0.9255564941472941, 
                   0.24203287721394565`}, {-0.5812540055976437, 
                   0.02109477684124081, 
                   0.14089225848755418`}, {-0.5656110498826449, 
                   0.06541576907892117, 0.6338014033558252}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, 
                    "StandardDeviation" -> {0.8253012917851231, 
                    0.4321465800705415, 1.758529183405524, 
                    0.7606126185881729}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 3, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.007817, "MaxTrainingMemory" -> 66792, 
                  "DataMemory" -> 5240, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2019, 4, 11, 14, 32, 18.682259`8.024004372842452}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
              1.1986666666666668`}, 
             "StandardDeviation" -> {0.8253012917851231, 0.4321465800705415, 
              1.758529183405524, 0.7606126185881729}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 6654647874488532094]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[1 -> 1, 2 -> 2, 3 -> 3]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 3093787484439440027, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 8486076504316548574]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       1 -> 0.33333333333333337`, 2 -> 0.33333333333333337`, 3 -> 
        0.33333333333333337`]], "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association["Tree" -> MachineLearning`DecisionTree[
        Association[
        "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 4, 4, 4}], 
         "NumericalThresholds" -> 
         RawArray["Real32",{-0.1249575987458229, 0.5921615362167358, 
           0.7058929204940796, -0.7870848178863525, 0.5276448726654053, 
           0.6591178178787231}], "NominalSplits" -> {}, "Children" -> 
         RawArray["Integer16",{{-4, -5}, {5, 6}, {-6, -7}, {-1, 2}, {-2, 1}, {
           3, -3}}], "LeafValues" -> 
         RawArray["UnsignedInteger8",{{51, 1, 1}, {1, 46, 1}, {1, 1, 44}, {1, 
           1, 4}, {1, 2, 1}, {1, 4, 2}, {1, 2, 4}}], "RootIndex" -> 4, 
         "NominalDimension" -> 0]], "Processor" -> 
      MachineLearning`MLProcessor["Values", 
        Association[
        "Info" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
      "DecisionTree", "Options" -> 
      Association[
       "DistributionSmoothing" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.16455699329441234`, 0.03451721407331369], "Accuracy" -> 
         PlusMinus[0.9310006242901019, 0.014257954995387404`], 
         "EvaluationTime" -> 0.000011397101449275361`, "TestSize" -> 660, 
         "TrainingSize" -> 120, "TrainingTime" -> 0.005915869565217391, 
         "TrainingMemory" -> 81901.91304347826, "ModelMemory" -> 5480., 
         "ExperimentCount" -> 22, "ModelUtility" -> 2.5192027144753606`, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[0.40285835089120975`, 0.16525007306542217`], 
           PlusMinus[0.14927562268082106`, 0.05175890795999629], 
           PlusMinus[0.2211441089024448, 0.11833770318041224`], 
           PlusMinus[0.5055173719657572, 0.20385993955782752`], 
           PlusMinus[0.2848834800597358, 0.12840989390776908`], 
           PlusMinus[0.23668552391985354`, 0.11839250756514179`], 
           PlusMinus[0.22156587405597036`, 0.06125382211169948], 
           PlusMinus[0.6711685272501782, 0.24363557002580769`], 
           PlusMinus[0.1363473034980158, 0.03714301823835254], 
           PlusMinus[0.2038600434316414, 0.11791365233240958`], 
           PlusMinus[0.23589262119376228`, 0.1166757759026358], 
           PlusMinus[0.17720892526651955`, 0.06288966871102324], 
           PlusMinus[0.2291400730169245, 0.1209823715153176], 
           PlusMinus[0.27993342881110317`, 0.12884222550073027`], 
           PlusMinus[0.3854940995897119, 0.16792520600656605`], 
           PlusMinus[0.5571546386717945, 0.22371419700636358`], 
           PlusMinus[0.13079299518512974`, 0.04838648910088515], 
           PlusMinus[0.3045633145874037, 0.12750224379517536`], 
           PlusMinus[0.20755235905049327`, 0.11860379765925577`], 
           PlusMinus[0.2198182460445978, 0.11966733217653887`], 
           PlusMinus[0.10228570792113902`, 0.028646123696700228`], 
           PlusMinus[0.23996953385088018`, 0.11732103799823423`]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.8817204301075263, 0.0635844392535679], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.8494623655913973, 0.06906714064924106], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.8172043010752682, 0.07369141435942854], 
           PlusMinus[0.9784946236559133, 0.03818779506247919], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.8817204301075263, 0.0635844392535679], 
           PlusMinus[0.8494623655913973, 0.06906714064924106], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9784946236559133, 0.03818779506247919], 
           PlusMinus[0.9139784946236553, 0.05699611867029939]}, 
         "Configuration" -> {
          "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
           1}, "FinalTrainingSize" -> 150], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 22], 
          TypeSystem`Vector[TypeSystem`AnyType, 22], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 220555327042932]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8610874898673163, 0.03295627150428083], "Accuracy" -> 
              PlusMinus[0.6492540441663136, 0.030323809521890444`], 
              "EvaluationTime" -> 0.000011433543365455891`, "TestSize" -> 
              2514, "TrainingSize" -> 8, "TrainingTime" -> 
              0.004339526315789473, "TrainingMemory" -> 63173.05263157895, 
              "ModelMemory" -> 5480., "ExperimentCount" -> 18, "ModelUtility" -> 
              0.4978151175864825, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7746242817958197, 0.045189445938727896`], 
                PlusMinus[0.9536231639834548, 0.04517677043921669], 
                PlusMinus[1.1328659824413059`, 0.07122016121549832], 
                PlusMinus[0.8000357734414243, 0.049732629350667114`], 
                PlusMinus[0.9835483367220189, 0.06234157686571179], 
                PlusMinus[1.1140326144843238`, 0.0651436488803107], 
                PlusMinus[0.9920450787748197, 0.06301250055211835], 
                PlusMinus[0.6689240775005207, 0.03645236850759513], 
                PlusMinus[0.8109006401781532, 0.041266491927760815`], 
                PlusMinus[0.9950447777375573, 0.059368435394298764`], 
                PlusMinus[0.8838730389837679, 0.044436919221790355`], 
                PlusMinus[0.9282749964027168, 0.05374664537378336], 
                PlusMinus[0.9563046217306242, 0.041397442412445105`], 
                PlusMinus[0.7979119947218957, 0.048939742514739315`], 
                PlusMinus[0.9199336039669981, 0.04935669663513039], 
                PlusMinus[0.6767106979846349, 0.04292785581135651], 
                PlusMinus[0.909080111748978, 0.057093371241904146`], 
                PlusMinus[0.7897063917373985, 0.0560527178555431]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7706308740736917, 0.03567664654728762], 
                PlusMinus[0.3912918185083438, 0.040668605833524794`], 
                PlusMinus[0.5330223437952398, 0.04173051957257874], 
                PlusMinus[0.7130268414420721, 0.03831165932227933], 
                PlusMinus[0.643601924827031, 0.04040436746201151], 
                PlusMinus[0.5327586759812906, 0.04178643939205782], 
                PlusMinus[0.5886746816055146, 0.04133954307393295], 
                PlusMinus[0.8386948349946374, 0.03155398482421879], 
                PlusMinus[0.6188342856229784, 0.040575678819511025`], 
                PlusMinus[0.5394806616927685, 0.04187700933010458], 
                PlusMinus[0.6241197181981641, 0.040696101189748535`], 
                PlusMinus[0.48355378905716545`, 0.041806020534550466`], 
                PlusMinus[0.4977501845965463, 0.041949380531306986`], 
                PlusMinus[0.7130268414420721, 0.03831165932227933], 
                PlusMinus[0.6314698711507241, 0.04051210143399547], 
                PlusMinus[0.8241192953320469, 0.032610640419717306`], 
                PlusMinus[0.7098077277438967, 0.038285189892490065`], 
                PlusMinus[0.726072607260727, 0.04492656379348899]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.30756997595268154`, 0.02299131240435418], 
              "Accuracy" -> 
              PlusMinus[0.9132911949974724, 0.012018878905057345`], 
              "EvaluationTime" -> 8.056746031746034*^-6, "TestSize" -> 2400, 
              "TrainingSize" -> 30, "TrainingTime" -> 0.0046976190476190486`, 
              "TrainingMemory" -> 66543.61904761904, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 20, "ModelUtility" -> 1.3836884869563657`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.32625159506780826`, 0.04518590956156841], 
                PlusMinus[0.36636916201414194`, 0.04332647850334214], 
                PlusMinus[0.3542436302774158, 0.04952856634154407], 
                PlusMinus[0.42211825880266063`, 0.05343250683106002], 
                PlusMinus[0.23656007558687767`, 0.026689803945128047`], 
                PlusMinus[0.416894990792793, 0.05855755693098316], 
                PlusMinus[0.5161306199859671, 0.053549127428310486`], 
                PlusMinus[0.5285424279753941, 0.07559966743212052], 
                PlusMinus[0.3555719574441812, 0.046679338235608006`], 
                PlusMinus[0.24453882375421124`, 0.026169807246431885`], 
                PlusMinus[0.3662928361009388, 0.05846613642759455], 
                PlusMinus[0.32273634497264264`, 0.02417591813846924], 
                PlusMinus[0.5235547081595143, 0.07391379092339752], 
                PlusMinus[0.4348881876932952, 0.05561137896135653], 
                PlusMinus[0.4553182694476759, 0.06532087206937984], 
                PlusMinus[0.3658956025871946, 0.05786423840955262], 
                PlusMinus[0.3686974191342599, 0.04911641834212173], 
                PlusMinus[0.23302399726188008`, 0.02657380826863526], 
                PlusMinus[0.2386427493182574, 0.02632832696467754], 
                PlusMinus[0.25805902486683874`, 0.026705129640452272`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9358853730296833, 0.02355118340063414], 
                PlusMinus[0.915116109442017, 0.02689128977600363], 
                PlusMinus[0.932405163514746, 0.024476732475102788`], 
                PlusMinus[0.8685427499420469, 0.031755893658256935`], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.900516832950064, 0.028497933191560694`], 
                PlusMinus[0.7512724341396163, 0.04002040873520434], 
                PlusMinus[0.8577190122515019, 0.03291006514143704], 
                PlusMinus[0.9381388089620436, 0.02337859943410783], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9156957228493909, 0.02642305083407257], 
                PlusMinus[0.9401055302414073, 0.02363573407328251], 
                PlusMinus[0.8501126156122835, 0.032430998114043465`], 
                PlusMinus[0.8735944261366001, 0.031086978825108864`], 
                PlusMinus[0.8682134778304331, 0.03205561055540743], 
                PlusMinus[0.915116109442017, 0.02689128977600363], 
                PlusMinus[0.928398531976959, 0.024850848985631915`], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9327455281830938, 0.02477046704272069]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.16455699329441234`, 0.03451721407331369], 
              "Accuracy" -> 
              PlusMinus[0.9310006242901019, 0.014257954995387404`], 
              "EvaluationTime" -> 0.000011397101449275361`, "TestSize" -> 660,
               "TrainingSize" -> 120, "TrainingTime" -> 0.005915869565217391, 
              "TrainingMemory" -> 81901.91304347826, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 22, "ModelUtility" -> 2.5192027144753606`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.40285835089120975`, 0.16525007306542217`], 
                PlusMinus[0.14927562268082106`, 0.05175890795999629], 
                PlusMinus[0.2211441089024448, 0.11833770318041224`], 
                PlusMinus[0.5055173719657572, 0.20385993955782752`], 
                PlusMinus[0.2848834800597358, 0.12840989390776908`], 
                PlusMinus[0.23668552391985354`, 0.11839250756514179`], 
                PlusMinus[0.22156587405597036`, 0.06125382211169948], 
                PlusMinus[0.6711685272501782, 0.24363557002580769`], 
                PlusMinus[0.1363473034980158, 0.03714301823835254], 
                PlusMinus[0.2038600434316414, 0.11791365233240958`], 
                PlusMinus[0.23589262119376228`, 0.1166757759026358], 
                PlusMinus[0.17720892526651955`, 0.06288966871102324], 
                PlusMinus[0.2291400730169245, 0.1209823715153176], 
                PlusMinus[0.27993342881110317`, 0.12884222550073027`], 
                PlusMinus[0.3854940995897119, 0.16792520600656605`], 
                PlusMinus[0.5571546386717945, 0.22371419700636358`], 
                PlusMinus[0.13079299518512974`, 0.04838648910088515], 
                PlusMinus[0.3045633145874037, 0.12750224379517536`], 
                PlusMinus[0.20755235905049327`, 0.11860379765925577`], 
                PlusMinus[0.2198182460445978, 0.11966733217653887`], 
                PlusMinus[0.10228570792113902`, 0.028646123696700228`], 
                PlusMinus[0.23996953385088018`, 0.11732103799823423`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8817204301075263, 0.0635844392535679], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.8494623655913973, 0.06906714064924106], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.8172043010752682, 0.07369141435942854], 
                PlusMinus[0.9784946236559133, 0.03818779506247919], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.8817204301075263, 0.0635844392535679], 
                PlusMinus[0.8494623655913973, 0.06906714064924106], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9784946236559133, 0.03818779506247919], 
                PlusMinus[0.9139784946236553, 0.05699611867029939]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011397101449275361`, "MeanCrossEntropy" -> 
             PlusMinus[0.16455699329441234`, 0.03451721407331369], 
             "ModelMemory" -> 5480., "TrainingMemory" -> 81901.91304347826, 
             "TrainingTime" -> 0.011734363272311211`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {
              TypeSystem`Atom[Integer]}], 2]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            3], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 220551032075636]], "MaxTrainingSize" -> 150, 
      "LastReportingTime" -> 3.763981939948395`16.32822252012145*^9, 
      "PreprocessorEvaluationTime" -> 3.3974609375`3.*^-6, 
      "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 8, "TimeBudgets" -> 0.32000000000000006`, 
          "ElapsedTimes" -> 0.40194799999999997`, "ExperimentCounts" -> 18], 
         Association[
         "TrainingSizes" -> 30, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.39448300000000003`, "ExperimentCounts" -> 20], 
         Association[
         "TrainingSizes" -> 120, "TimeBudgets" -> 0.5, "ElapsedTimes" -> 
          0.507036, "ExperimentCounts" -> 22]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[220559622010228]], "ID" -> 
         220563916977524]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{5.8, 2.7, 5.1, 1.9}}, "ID" -> 4654099653526711133]], 
        
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 1.482598, "MaxTrainingMemory" -> 664952, "DataMemory" -> 
      32488, "FunctionMemory" -> 127064, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2019, 4, 11, 14, 32, 20.142874`8.056696419797985},
         "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.763996366073897*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"c74392af-3afc-444a-a0b4-e2c8ece5bbdb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1918, 1003},
WindowMargins->{{1, Automatic}, {1, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 57, "Subsubsection",ExpressionUUID->"1fc5c2cf-c15b-4837-8d0b-8a1fe8f97cdd"],
Cell[CellGroupData[{
Cell[776, 29, 1368, 40, 185, "Input",ExpressionUUID->"71b8a3d6-d499-4a78-9b8a-c56b35ad0618"],
Cell[2147, 71, 277, 7, 44, "Output",ExpressionUUID->"e8d947b4-c9fd-4b45-962d-fb31fdc6a1ff"],
Cell[2427, 80, 905, 27, 44, "Output",ExpressionUUID->"c093cb84-0de2-43b6-ad39-36e2c0bd464f"],
Cell[3335, 109, 496, 13, 44, "Output",ExpressionUUID->"3c69ab91-ab5c-4e3e-bb0b-0fe26c558618"]
}, Open  ]],
Cell[3846, 125, 177, 3, 39, "Input",ExpressionUUID->"601a0666-e551-4eab-9195-5b0149c1b361"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4060, 133, 167, 3, 57, "Subsubsection",ExpressionUUID->"ae0cbe4b-4453-42d9-a501-76edc0409770"],
Cell[4230, 138, 3086, 93, 533, "Input",ExpressionUUID->"47bf8347-d83c-4420-9e8c-5d07fefb33a4"],
Cell[CellGroupData[{
Cell[7341, 235, 533, 11, 39, "Input",ExpressionUUID->"bbb0f038-255e-4c96-a3d4-442fc0479c5e"],
Cell[7877, 248, 10470, 240, 173, "Output",ExpressionUUID->"d8883af6-c6c5-465b-91a4-795e98bf3382"]
}, Open  ]],
Cell[18362, 491, 843, 20, 98, "Input",ExpressionUUID->"3fa50c06-8f77-451c-a78f-9a84539acb7d"],
Cell[CellGroupData[{
Cell[19230, 515, 1058, 28, 127, "Input",ExpressionUUID->"08e1afed-b233-4a36-ba80-f85c96e22fce"],
Cell[20291, 545, 445, 7, 44, "Output",ExpressionUUID->"f3f7c964-4b18-49f4-adc9-065a8916ad8b"],
Cell[20739, 554, 99263, 1814, 86, "Output",ExpressionUUID->"d3d8eca8-f347-44b9-bbd8-4465b77ec697"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120039, 2373, 606, 13, 98, "Input",ExpressionUUID->"dd89c216-b16e-4964-b6c0-decfc22faafd"],
Cell[120648, 2388, 33566, 778, 469, "Output",ExpressionUUID->"76d2bcd7-302f-4947-a07c-e8d794e83b13"],
Cell[154217, 3168, 414, 6, 44, "Output",ExpressionUUID->"77dff43d-f6db-4a83-9b6e-9547450277e7"]
}, Open  ]],
Cell[154646, 3177, 341, 9, 39, "Input",ExpressionUUID->"6c974c7e-9e6d-4d45-9248-a7adcb78a2b5"],
Cell[CellGroupData[{
Cell[155012, 3190, 176, 3, 39, "Input",ExpressionUUID->"960f54ee-eb20-4a5e-beab-35bcbb863e9f"],
Cell[155191, 3195, 41772, 761, 86, "Output",ExpressionUUID->"c74392af-3afc-444a-a0b4-e2c8ece5bbdb"]
}, Open  ]]
}, Open  ]]
}
]
*)

