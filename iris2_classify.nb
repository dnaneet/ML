(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    389382,       7515]
NotebookOptionsPosition[    385235,       7436]
NotebookOutlinePosition[    385569,       7451]
CellTagsIndexPosition[    385526,       7448]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Import Iris Data", "Subsubsection",
 CellChangeTimes->{{3.7639939025500927`*^9, 
  3.7639939114540787`*^9}},ExpressionUUID->"1fc5c2cf-c15b-4837-8d0b-\
8a1fe8f97cdd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "url", "=", 
   "\"\<https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataset", "=", 
    RowBox[{"Import", "[", "url", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"names", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{"'", 
       RowBox[{"class", "'"}]}]}], "}"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "dataset", "]"}], "\[IndentingNewLine]", 
 RowBox[{"dataset", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataset", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "5"}], "]"}], "]"}], "//", "Tally"}]}], "Input",
 CellChangeTimes->{{3.7639914908152437`*^9, 3.763991502610077*^9}, {
  3.763993918261599*^9, 3.763993927171213*^9}, {3.763994151631565*^9, 
  3.763994161810441*^9}, {3.764673869412169*^9, 3.764673872743616*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"71b8a3d6-d499-4a78-9b8a-c56b35ad0618"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"150", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.763994162217145*^9}, 3.764673955492159*^9, 3.764674063882687*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"c79da7b3-eb9c-4ac8-aa32-3922bdb8ad81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.7`", ",", "3.2`", ",", "1.3`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.6`", ",", "3.1`", ",", "1.5`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.`", ",", "3.6`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.763994162217145*^9}, 3.764673955492159*^9, 3.764674063885387*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4bf2bb21-7a5e-47ed-bbd0-332dab3bb224"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Iris-setosa\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-versicolor\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-virginica\"\>", ",", "50"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763991504592951*^9, 3.763993927915464*^9, {3.7639941571816998`*^9, 
   3.763994162217145*^9}, 3.764673955492159*^9, 3.764674063887273*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b6990f9e-5d13-4374-a466-75864da26336"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.763991510520833*^9, 3.763991535855422*^9}, 
   3.7639939167002153`*^9},ExpressionUUID->"601a0666-e551-4eab-9195-\
5b0149c1b361"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iris Data Subset", "Subsubsection",
 CellChangeTimes->{{3.763992550078946*^9, 
  3.763992558473377*^9}},ExpressionUUID->"ae0cbe4b-4453-42d9-a501-\
76edc0409770"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sepalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sepalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"class", "=", 
   RowBox[{
    RowBox[{"dataset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "5"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Iris-setosa\>\"", "\[Rule]", "\"\<setosa\>\""}], ",", " ", 
      
      RowBox[{"\"\<Iris-versicolor\>\"", "\[Rule]", "\"\<versicolor\>\""}], 
      ",", " ", 
      RowBox[{"\"\<Iris-virginica\>\"", "\[Rule]", "\"\<virginica\>\""}]}], 
     "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.763992572321846*^9, 3.7639926682288*^9}, {
  3.763992741461824*^9, 3.763992937695015*^9}, {3.763993939182761*^9, 
  3.763993940038288*^9}, {3.763994003255328*^9, 3.763994003850746*^9}, {
  3.763994092087641*^9, 3.763994132162019*^9}, {3.763994169385898*^9, 
  3.7639942350498857`*^9}, {3.764674067044373*^9, 3.7646740837258387`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"47bf8347-d83c-4420-9e8c-5d07fefb33a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Split data into training and validation for classification", \
"Subsubsection",
 CellChangeTimes->{{3.764675454604539*^9, 
  3.7646754669126987`*^9}},ExpressionUUID->"664936a7-46d4-4feb-866b-\
479142bb7d04"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"geomdata", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
     "sepalLength", ",", "sepalWidth", ",", "petalLength", ",", 
      "petalWidth"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mldata", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"geomdata", "\[Rule]", "class"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "mldata", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "120"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"120", ";;", "150"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7646741712635927`*^9, 3.7646741883626223`*^9}, {
  3.764674265653249*^9, 3.7646742673218803`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"85a559f5-8158-48ab-8559-82ee73dbc02f"],

Cell[BoxData["150"], "Output",
 CellChangeTimes->{3.764674192977762*^9, 3.764674267810617*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"c7ff8cbd-ce21-429e-bd91-5b38b98d1f02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Subsubsection",
 CellChangeTimes->{{3.7646754724828997`*^9, 
  3.764675479368135*^9}},ExpressionUUID->"657d2135-1245-42c6-a3ec-\
bfcf37992fd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ciris", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"training", ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.76467412141471*^9, 3.764674122952112*^9}, {
   3.7646741684524*^9, 3.764674250104493*^9}, 
   3.7646754698011503`*^9},ExpressionUUID->"ceadf055-ac36-4570-834d-\
b5546f58920e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 120, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 120, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, "Method" -> 
                   "Naive", "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, 
                   "StandardDeviation" -> {0.8328227602557406, 
                    0.43546829837416184`, 1.798114560372118, 
                    0.7695665266166976}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5161172917542027, 0.4038358881539434}, {
                   0.2780327925815185, 
                   0.9128812287241621}, {-0.5799358869098153, 
                   0.025688057700654646`}, {-0.5656810713429923, 
                   0.05389398272114962}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, 
                    "StandardDeviation" -> {0.8328227602557406, 
                    0.43546829837416184`, 1.798114560372118, 
                    0.7695665266166976}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 2, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.009693, "MaxTrainingMemory" -> 65440, 
                  "DataMemory" -> 3960, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2019, 4, 19, 10, 51, 10.804984`7.786199114549706}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.787500000000001, 3.1108333333333333`, 
              3.594166666666667, 1.1291666666666669`}, 
             "StandardDeviation" -> {0.8328227602557406, 0.43546829837416184`,
               1.798114560372118, 0.7695665266166976}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3469640861300586857]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "setosa" -> 1, "versicolor" -> 2, "virginica" -> 3]}, 
             "MissingCode" -> 0, "Version" -> {11.3, 0}, "ID" -> 
             8632914170514506599, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5976834071906370717]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "setosa" -> 0.3821138211382114, "versicolor" -> 0.3089430894308943, 
        "virginica" -> 0.3089430894308943]], "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> "Quality", 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association["LogProbabilitiesFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{-5.791790962219238, 
             6.989780902862549, -17.8476505279541, -16.106576919555664`}, {
             1.9422460794448853`, 
             2.13541316986084, -14.56447982788086, -11.663370132446289`}}], 
           "Biases" -> 
           RawArray["Real32",{10.630792617797852`, 19.24622917175293}]], 
         "Parameters" -> 
         Association[
          "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 4, 
           "$InputDimensions" -> {4}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], "Processor" -> 
      MachineLearning`MLProcessor["FirstValues", 
        Association[
        "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
         "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "LogisticRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0.001, "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "LBFGS", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.08463999837741062, 0.15342055126952983`], "Accuracy" -> 
         PlusMinus[0.9386216535899196, 0.03251481527909005], "EvaluationTime" -> 
         0.000012642857142857137`, "TestSize" -> 144, "TrainingSize" -> 96, 
         "TrainingTime" -> 0.023777571428571426`, "TrainingMemory" -> 
         81817.14285714286, "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
         "ModelUtility" -> 32.47781345443033, "MeanCrossEntropyHistory" -> {
           PlusMinus[0.15791018305628843`, 0.10494763389957125`], 
           PlusMinus[0.06535735247284061, 0.03763012036826288], 
           PlusMinus[0.7434093632974382, 0.4016382274285051], 
           PlusMinus[0.9307714289167957, 0.6174102309808362], 
           PlusMinus[0.0796285151070963, 0.035587225474362966`], 
           PlusMinus[0.2618782693331403, 0.1958946040077143]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.9334033399150394, 0.060076315658761814`], 
           PlusMinus[0.9734033399150395, 0.047140990819063804`], 
           PlusMinus[0.8534033399150396, 0.07745285713637329], 
           PlusMinus[0.8534033399150396, 0.07745285713637329], 
           PlusMinus[0.9734033399150395, 0.047140990819063804`], 
           PlusMinus[0.9334033399150394, 0.060076315658761814`]}, 
         "Configuration" -> {
          "LogisticRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.001, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 120], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 6], 
          TypeSystem`Vector[TypeSystem`AnyType, 6], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 249773990235556]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0984130956623905`, 0.005792435051277585], 
              "Accuracy" -> 
              PlusMinus[0.7458087261174344, 0.06033621262575093], 
              "EvaluationTime" -> 0.000042046349206349205`, "TestSize" -> 205,
               "TrainingSize" -> 15, "TrainingTime" -> 0.007961, 
              "TrainingMemory" -> 63570.666666666664`, "ModelMemory" -> 8824.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.35725635955058344`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[1.09839918109688, 0.00818336724414245], 
                PlusMinus[1.0984270671594747`, 0.008200091316362667]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                PlusMinus[0.6864859752264957, 0.046649320013173276`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0974940003840405`, 0.014624560924562808`], 
              "Accuracy" -> PlusMinus[0.777679565967586, 0.04498678634177316],
               "EvaluationTime" -> 0.00004634722222222221, "TestSize" -> 120, 
              "TrainingSize" -> 96, "TrainingTime" -> 0.0080215, 
              "TrainingMemory" -> 73162.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.356706390281892, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.097550721176311, 0.032704533985117044`], 
                PlusMinus[1.0975399800299015`, 0.03270389346993801], 
                PlusMinus[1.0973816241831755`, 0.03269536803459529], 
                PlusMinus[1.0975112687392152`, 0.03270239373278863], 
                PlusMinus[1.0974864683634953`, 0.03270102503988093]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.6934033399150397, 0.09613796247840892], 
                PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00004634722222222221, "MeanCrossEntropy" -> 
             PlusMinus[1.0974940003840405`, 0.014624560924562808`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 73162.66666666666, 
             "TrainingTime" -> 0.0175868], "Index" -> 1], 
         Association[
          "Value" -> "RandomForest", "Options" -> 
           Association[
            "FeatureFraction" -> Association["Value" -> Automatic], 
             "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
             Association["Value" -> Automatic], "DistributionSmoothing" -> 
             Association["Value" -> 0.5], "Implementation" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.49000752046247326`, 0.04104918168816749], 
              "Accuracy" -> PlusMinus[0.906511794028662, 0.07237168073079556],
               "EvaluationTime" -> 0.0000624, "TestSize" -> 200, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.012443, 
              "TrainingMemory" -> 276490.6666666666, "ModelMemory" -> 164112.,
               "ExperimentCount" -> 2, "ModelUtility" -> 1.7401523404416772`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.5279445811936713, 0.03592988549126172], 
                PlusMinus[0.4608815331518772, 0.03148214545928387]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8052978564146149, 0.04011600232678486], 
                PlusMinus[0.9439117178007539, 0.024385566318212912`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.2442575140230343, 0.029967862414012156`], 
              "Accuracy" -> 
              PlusMinus[0.9201673670096865, 0.030768278640629372`], 
              "EvaluationTime" -> 0.000214125, "TestSize" -> 144, 
              "TrainingSize" -> 96, "TrainingTime" -> 0.013676428571428569`, 
              "TrainingMemory" -> 328070.8571428571, "ModelMemory" -> 
              166765.7142857143, "ExperimentCount" -> 6, "ModelUtility" -> 
              6.897201804587356, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.2908592838000396, 0.10581533859783147`], 
                PlusMinus[0.2320482454437415, 0.037433337031051755`], 
                PlusMinus[0.25072668931783365`, 0.07118378073910402], 
                PlusMinus[0.3380190076094244, 0.11895272542412984`], 
                PlusMinus[0.22388896366506325`, 0.048880979611601476`], 
                PlusMinus[0.27281388890074326`, 0.07430050459349063]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000214125, "MeanCrossEntropy" -> 
             PlusMinus[0.2442575140230343, 0.029967862414012156`], 
             "ModelMemory" -> 166765.7142857143, "TrainingMemory" -> 
             328070.8571428571, "TrainingTime" -> 0.028854714285714282`], 
           "Index" -> 2], 
         Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.49851917166609794`, 0.05364051174905315], 
              "Accuracy" -> PlusMinus[0.864108779411799, 0.05590032822717871],
               "EvaluationTime" -> 9.374603174603175*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.004434, 
              "TrainingMemory" -> 63813.33333333333, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 2, "ModelUtility" -> 1.6655957908127994`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.5410517569138144, 0.05271285748126373], 
                PlusMinus[0.4614632221443068, 0.04920221356774295]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7997927095900501, 0.03986305649342362], 
                PlusMinus[0.9007503617387193, 0.030088321160355407`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.254894829427495, 0.0567567338679045], "Accuracy" -> 
              PlusMinus[0.9122716715321563, 0.029793024429179447`], 
              "EvaluationTime" -> 0.000017464285714285707`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.005769285714285714, 
              "TrainingMemory" -> 79010.28571428571, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 6, "ModelUtility" -> 6.093408282628153, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.26544063704972753`, 0.10469203075134581`], 
                PlusMinus[0.2690004324941802, 0.13275294044532227`], 
                PlusMinus[0.1830822966595096, 0.06839387952153182], 
                PlusMinus[0.2854853954915724, 0.10486540279680033`], 
                PlusMinus[0.3927719937021966, 0.1533145049377741], 
                PlusMinus[0.42201105877935113`, 0.18389177608093915`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000017464285714285707`, "MeanCrossEntropy" -> 
             PlusMinus[0.254894829427495, 0.0567567338679045], "ModelMemory" -> 
             5480., "TrainingMemory" -> 79010.28571428571, "TrainingTime" -> 
             0.011357142857142857`], "Index" -> 3], 
         Association[
          "Value" -> "NearestNeighbors", "Options" -> 
           Association[
            "NeighborsNumber" -> Association["Value" -> Automatic], 
             "DistributionSmoothing" -> Association["Value" -> 0.5], 
             "NearestMethod" -> Association["Value" -> Automatic]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.3792552605845643, 0.06587697190537979], "Accuracy" -> 
              PlusMinus[0.7976434902552608, 0.03214849566107037], 
              "EvaluationTime" -> 0.000011450793650793651`, "TestSize" -> 210,
               "TrainingSize" -> 15, "TrainingTime" -> 0.0029773333333333327`,
               "TrainingMemory" -> 54829.33333333333, "ModelMemory" -> 6424., 
              "ExperimentCount" -> 2, "ModelUtility" -> 2.8047953386911906`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.4559344859251635, 0.0627198190007857], 
                PlusMinus[0.34439426037327964`, 0.042289822249851956`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7812526847604674, 0.04109368950621036], 
                PlusMinus[0.8121953066465069, 0.03871984320913787]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.20183252835501322`, 0.03488114176074588], 
              "Accuracy" -> 
              PlusMinus[0.9259620016983546, 0.03042327225174006], 
              "EvaluationTime" -> 0.000021892857142857142`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.004942999999999999, 
              "TrainingMemory" -> 200305.14285714284`, "ModelMemory" -> 9208.,
               "ExperimentCount" -> 6, "ModelUtility" -> 9.90671278384308, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.22622792622001187`, 0.062310215488047604`], 
                PlusMinus[0.16769222830092473`, 0.03619223280080637], 
                PlusMinus[0.33739510591728755`, 0.14943979814547884`], 
                PlusMinus[0.29094772508508077`, 0.07532249475233897], 
                PlusMinus[0.18424194902691343`, 0.04766127623160648], 
                PlusMinus[0.2275685920792768, 0.06692193703241567]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000021892857142857142`, "MeanCrossEntropy" -> 
             PlusMinus[0.20183252835501322`, 0.03488114176074588], 
             "ModelMemory" -> 9208., "TrainingMemory" -> 200305.14285714284`, 
             "TrainingTime" -> 0.00890893333333333], "Index" -> 4], 
         Association[
          "Value" -> "NaiveBayes", "Options" -> 
           Association["SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.36799100588427275`, 0.08767244255609412], 
              "Accuracy" -> 
              PlusMinus[0.8715443943526486, 0.02561181662132864], 
              "EvaluationTime" -> 7.923809523809523*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.004886333333333333, 
              "TrainingMemory" -> 47397.33333333333, "ModelMemory" -> 16152., 
              "ExperimentCount" -> 2, "ModelUtility" -> 2.9061678784871354`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.4314231118766282, 0.11576253040695524`], 
                PlusMinus[0.32928490346876327`, 0.09042805019885627]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8808235332311348, 0.03242881925369866], 
                PlusMinus[0.8610475033587378, 0.03449114742447021]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.17134844451559414`, 0.06033721695038203], 
              "Accuracy" -> 
              PlusMinus[0.8836372573712382, 0.03213306868986417], 
              "EvaluationTime" -> 0.000015208333333333331`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.00489242857142857, 
              "TrainingMemory" -> 58829.71428571428, "ModelMemory" -> 18584., 
              "ExperimentCount" -> 6, "ModelUtility" -> 12.839643464244745`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.32903357946311057`, 0.17859376860428763`], 
                PlusMinus[0.1328436915626898, 0.053450241882786124`], 
                PlusMinus[0.30016676360326944`, 0.2086071255505708], 
                PlusMinus[0.4438979290990566, 0.2551802240613075], 
                PlusMinus[0.3117957563224018, 0.18765610550209158`], 
                PlusMinus[0.16110286477118788`, 0.06277278360587968]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000015208333333333331`, "MeanCrossEntropy" -> 
             PlusMinus[0.17134844451559414`, 0.06033721695038203], 
             "ModelMemory" -> 18584., "TrainingMemory" -> 58829.71428571428, 
             "TrainingTime" -> 0.010757247619047616`], "Index" -> 5], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.1830189840736721, 0.1125405396730655], "Accuracy" -> 
              PlusMinus[0.9191236362924227, 0.06469082064141339], 
              "EvaluationTime" -> 7.273015873015873*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.022832666666666668`, 
              "TrainingMemory" -> 72661.33333333333, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 10.225601017520367`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.3471859668662656, 0.11272917741511884`], 
                PlusMinus[0.14463189389833508`, 0.05451123559619447]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8277935294660336, 0.03775056633557615], 
                PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.08463999837741062, 0.15342055126952983`], 
              "Accuracy" -> 
              PlusMinus[0.9386216535899196, 0.03251481527909005], 
              "EvaluationTime" -> 0.000012642857142857137`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.023777571428571426`, 
              "TrainingMemory" -> 81817.14285714286, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 6, "ModelUtility" -> 32.47781345443033, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.15791018305628843`, 0.10494763389957125`], 
                PlusMinus[0.06535735247284061, 0.03763012036826288], 
                PlusMinus[0.7434093632974382, 0.4016382274285051], 
                PlusMinus[0.9307714289167957, 0.6174102309808362], 
                PlusMinus[0.0796285151070963, 0.035587225474362966`], 
                PlusMinus[0.2618782693331403, 0.1958946040077143]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000012642857142857137`, "MeanCrossEntropy" -> 
             PlusMinus[0.08463999837741062, 0.15342055126952983`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 81817.14285714286, 
             "TrainingTime" -> 0.05136575238095238], "Index" -> 6], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.27074759248028707`, 0.08572935824912634], 
              "Accuracy" -> 
              PlusMinus[0.9176725595458546, 0.06920001746512462], 
              "EvaluationTime" -> 7.111111111111111*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.022239, 
              "TrainingMemory" -> 72773.33333333333, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 5.211507744761069, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.2981313191768322, 0.12271620515305717`], 
                PlusMinus[0.24858684650662213`, 0.11039459961762833`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.818432277437096, 0.03849308763321103], 
                PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.07770202631505357, 0.6717556702787831], "Accuracy" -> 
              PlusMinus[0.9386216535899196, 0.03251481527909005], 
              "EvaluationTime" -> 0.000011672619047619046`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.022836285714285715`, 
              "TrainingMemory" -> 81755.42857142857, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 6, "ModelUtility" -> 9.605887534042953, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.15819333978083547`, 0.10790108692319679`], 
                PlusMinus[0.06559658701023834, 0.03796743896676141], 
                PlusMinus[2.2316485323925574`, 1.2392969348841918`], 
                PlusMinus[4.145152399898731, 2.9001807245022238`], 
                PlusMinus[0.07557620551596139, 0.03534311470762335], 
                PlusMinus[0.803774772402412, 0.7473482426787853]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011672619047619046`, "MeanCrossEntropy" -> 
             PlusMinus[0.07770202631505357, 0.6717556702787831], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 81755.42857142857, 
             "TrainingTime" -> 0.049642542857142855`], "Index" -> 7], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0985425938424118`, 0.005787846012784084], 
              "Accuracy" -> 
              PlusMinus[0.7422771768159798, 0.06259041963133685], 
              "EvaluationTime" -> 7.298412698412698*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.007618666666666667, 
              "TrainingMemory" -> 63549.33333333333, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.35717283379043535`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.0985413579777341`, 0.008185233844319994], 
                PlusMinus[1.098543829716932, 0.008185266438988481]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0983118268304066`, 0.014644152158367264`], 
              "Accuracy" -> PlusMinus[0.777679565967586, 0.04498678634177316],
               "EvaluationTime" -> 0.000012305555555555554`, "TestSize" -> 
              120, "TrainingSize" -> 96, "TrainingTime" -> 
              0.007691499999999999, "TrainingMemory" -> 72778.66666666667, 
              "ModelMemory" -> 8824., "ExperimentCount" -> 5, "ModelUtility" -> 
              0.35617425311164497`, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.09831750265965, 0.03274562541425693], 
                PlusMinus[1.0983164276432218`, 0.03274556682718328], 
                PlusMinus[1.0983005803571464`, 0.03274471235582584], 
                PlusMinus[1.098313551808163, 0.03274541222497537], 
                PlusMinus[1.0983110722881348`, 0.032745278196301325`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.6934033399150397, 0.09613796247840892], 
                PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000012305555555555554`, "MeanCrossEntropy" -> 
             PlusMinus[1.0983118268304066`, 0.014644152158367264`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 72778.66666666667, 
             "TrainingTime" -> 0.016848466666666666`], "Index" -> 8], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0971036456529317`, 0.0057761647200319614`], 
              "Accuracy" -> 
              PlusMinus[0.7422771768159798, 0.06259041963133685], 
              "EvaluationTime" -> 6.993650793650793*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.0077406666666666665`, 
              "TrainingMemory" -> 64232., "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.35811091042738097`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.0969806148517822`, 0.008165350524023467], 
                PlusMinus[1.097226768430939, 0.008168402129649258]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0894230780895524`, 0.014443043548636148`], 
              "Accuracy" -> PlusMinus[0.777679565967586, 0.04498678634177316],
               "EvaluationTime" -> 0.000011791666666666668`, "TestSize" -> 
              120, "TrainingSize" -> 96, "TrainingTime" -> 0.0089115, 
              "TrainingMemory" -> 76678.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.3620210601916591, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.0899865915102787`, 0.03232222686557933], 
                PlusMinus[1.0898800605734955`, 0.032310437910885614`], 
                PlusMinus[1.0883081722409607`, 0.032227184653801595`], 
                PlusMinus[1.0895976387893833`, 0.03230005244891964], 
                PlusMinus[1.0893491170664151`, 0.0322835501871499]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.6934033399150397, 0.09613796247840892], 
                PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011791666666666668`, "MeanCrossEntropy" -> 
             PlusMinus[1.0894230780895524`, 0.014443043548636148`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 76678.66666666666, 
             "TrainingTime" -> 0.018434466666666663`], "Index" -> 9], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.23737105871312028`, 0.09265298311103515], 
              "Accuracy" -> 
              PlusMinus[0.9176725595458546, 0.06920001746512462], 
              "EvaluationTime" -> 7.149206349206348*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.02313533333333333, 
              "TrainingMemory" -> 72741.33333333333, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 6.59600244626611, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.3205067643206394, 0.11935484085747529`], 
                PlusMinus[0.19617606813302763`, 0.08401724729600465]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.818432277437096, 0.03849308763321103], 
                PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.07904448355670345, 0.371765412518328], "Accuracy" -> 
              PlusMinus[0.9386216535899196, 0.03251481527909005], 
              "EvaluationTime" -> 0.000011869047619047619`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.023483857142857143`, 
              "TrainingMemory" -> 81832., "ModelMemory" -> 8824., 
              "ExperimentCount" -> 6, "ModelUtility" -> 18.356507616382682`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.15811611544850848`, 0.10759865397565095`], 
                PlusMinus[0.06552483632955247, 0.03791076407249097], 
                PlusMinus[1.448080453009479, 0.8000515988017022], 
                PlusMinus[2.274824526733202, 1.607000576001376], 
                PlusMinus[0.07596561288656797, 0.035372078004040824`], 
                PlusMinus[0.5436981505742084, 0.47624736311686794`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011869047619047619`, "MeanCrossEntropy" -> 
             PlusMinus[0.07904448355670345, 0.371765412518328], "ModelMemory" -> 
             8824., "TrainingMemory" -> 81832., "TrainingTime" -> 
             0.051315961904761904`], "Index" -> 10], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.0985571590100267`, 0.005787981527216761], 
              "Accuracy" -> 
              PlusMinus[0.29490885204096734`, 0.031161465403895663`], 
              "EvaluationTime" -> 0.000015123809523809524`, "TestSize" -> 210,
               "TrainingSize" -> 15, "TrainingTime" -> 0.008905333333333333, 
              "TrainingMemory" -> 59704., "ModelMemory" -> 20240., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.35716323152022905`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.0985571590100267`, 0.008185441974554883], 
                PlusMinus[1.0985571590100267`, 0.008185441974554883]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.29490885204096734`, 0.04406896699760924], 
                PlusMinus[0.29490885204096734`, 0.04406896699760924]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.4085698206253161, 0.032604393977145485`], 
              "Accuracy" -> 
              PlusMinus[0.8965986149404397, 0.033897852151787054`], 
              "EvaluationTime" -> 0.00044080357142857137`, "TestSize" -> 144, 
              "TrainingSize" -> 96, "TrainingTime" -> 0.065592, 
              "TrainingMemory" -> 1.0744891428571427`*^6, "ModelMemory" -> 
              287928., "ExperimentCount" -> 6, "ModelUtility" -> 
              2.506901176300536, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.4207581999477333, 0.07261708566780833], 
                PlusMinus[0.4427720361890039, 0.050557184171124474`], 
                PlusMinus[0.4918022839002229, 0.09690078760320021], 
                PlusMinus[0.4081229100558304, 0.06437299309941569], 
                PlusMinus[0.38379036923269233`, 0.05438377134603095], 
                PlusMinus[0.3474685885242871, 0.061661077317934125`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00044080357142857137`, "MeanCrossEntropy" -> 
             PlusMinus[0.4085698206253161, 0.032604393977145485`], 
             "ModelMemory" -> 287928., "TrainingMemory" -> 
             1.0744891428571427`*^6, "TrainingTime" -> 0.08761573333333332], 
           "Index" -> 11], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.9792957980217835, 0.011308032724321043`], 
              "Accuracy" -> 
              PlusMinus[0.7422771768159798, 0.06259041963133685], 
              "EvaluationTime" -> 5.838095238095238*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.009638666666666667, 
              "TrainingMemory" -> 67418.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.4483277197848347, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.970160848433702, 0.010696956398137314`], 
                PlusMinus[0.98738210877448, 0.01006427190635627]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7183803251397856, 0.026418283260389475`], 
              "Accuracy" -> 
              PlusMinus[0.8138876300268391, 0.04731898485281544], 
              "EvaluationTime" -> 0.000013305555555555554`, "TestSize" -> 120,
               "TrainingSize" -> 96, "TrainingTime" -> 0.024195666666666664`, 
              "TrainingMemory" -> 89298.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 5, "ModelUtility" -> 0.8248084106381295, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7460489200022402, 0.051352982075318236`], 
                PlusMinus[0.7389042398127406, 0.04595345849281669], 
                PlusMinus[0.6632402765785593, 0.04660192657712163], 
                PlusMinus[0.7391841241772064, 0.05180785892515162], 
                PlusMinus[0.7128941946936983, 0.046184032598507015`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.6934033399150397, 0.09613796247840892], 
                PlusMinus[0.8534033399150396, 0.07745285713637329]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000013305555555555554`, "MeanCrossEntropy" -> 
             PlusMinus[0.7183803251397856, 0.026418283260389475`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 89298.66666666666, 
             "TrainingTime" -> 0.03867346666666667], "Index" -> 12], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.39876036359612504`, 0.027231706558342308`], 
              "Accuracy" -> 
              PlusMinus[0.8483042338994277, 0.03642893490379045], 
              "EvaluationTime" -> 5.974603174603175*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.021484666666666666`, 
              "TrainingMemory" -> 72618.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 2.6437474903640483`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.4101514328064392, 0.048300963290292195`], 
                PlusMinus[0.39410182776659514`, 0.03088860300313243]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.818432277437096, 0.03849308763321103], 
                PlusMinus[0.870917365622686, 0.03349124335036146]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.24044749709168772`, 0.02869770450945638], 
              "Accuracy" -> 
              PlusMinus[0.9280324914225152, 0.03192724180017606], 
              "EvaluationTime" -> 0.000011398809523809525`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.021378714285714282`, 
              "TrainingMemory" -> 81675.42857142857, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 6, "ModelUtility" -> 7.126833788039311, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.2932705290007947, 0.08330813528228093], 
                PlusMinus[0.22303707691874575`, 0.04240010344865916], 
                PlusMinus[0.20549458272307108`, 0.04912793678653851], 
                PlusMinus[0.3149472987150707, 0.06768910544836666], 
                PlusMinus[0.2115818518882012, 0.048454298725699174`], 
                PlusMinus[0.2729769227711883, 0.05083052478693025]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011398809523809525`, "MeanCrossEntropy" -> 
             PlusMinus[0.24044749709168772`, 0.02869770450945638], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 81675.42857142857, 
             "TrainingTime" -> 0.0471391238095238], "Index" -> 13], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.278858460795095, 0.0886299055653316], "Accuracy" -> 
              PlusMinus[0.9176725595458546, 0.06920001746512462], 
              "EvaluationTime" -> 6.285714285714285*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.020850333333333332`, 
              "TrainingMemory" -> 72666.66666666666, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 4.910551478997189, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.28084411195006165`, 0.12456175599408821`], 
                PlusMinus[0.27682441191474505`, 0.12607063440981361`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.818432277437096, 0.03849308763321103], 
                PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.07687288522178436, 0.9359955380107127], "Accuracy" -> 
              PlusMinus[0.9386216535899196, 0.03251481527909005], 
              "EvaluationTime" -> 0.000012166666666666665`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.023170285714285716`, 
              "TrainingMemory" -> 81812.57142857142, "ModelMemory" -> 8824., 
              "ExperimentCount" -> 6, "ModelUtility" -> 6.194158447819693, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.15831711099410029`, 0.10807175327773265`], 
                PlusMinus[0.06560976365324916, 0.037976177177284125`], 
                PlusMinus[3.2681103639003273`, 1.8174993900844665`], 
                PlusMinus[5.7301306613981025`, 3.844166388561772], 
                PlusMinus[0.07553229279961614, 0.03534113644338726], 
                PlusMinus[1.798792466312451, 1.7516820045639863`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000012166666666666665`, "MeanCrossEntropy" -> 
             PlusMinus[0.07687288522178436, 0.9359955380107127], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 81812.57142857142, 
             "TrainingTime" -> 0.0486546761904762], "Index" -> 14], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.19581408040696568`, 0.10202465004671717`], 
              "Accuracy" -> 
              PlusMinus[0.9098723663313701, 0.055770742931238904`], 
              "EvaluationTime" -> 6.39047619047619*^-6, "TestSize" -> 210, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.019846, 
              "TrainingMemory" -> 72752., "ModelMemory" -> 8824., 
              "ExperimentCount" -> 2, "ModelUtility" -> 9.23930381167653, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.376693294571764, 0.07537832818494132], 
                PlusMinus[0.1777619267441469, 0.023813140840280644`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8371846749281692, 0.03696629429895102], 
                PlusMinus[0.9411020858136574, 0.02423034068726164]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.14149170243906659`, 0.028520065042235792`], 
              "Accuracy" -> 
              PlusMinus[0.934050818729946, 0.033007017171560335`], 
              "EvaluationTime" -> 0.000011726190476190477`, "TestSize" -> 144,
               "TrainingSize" -> 96, "TrainingTime" -> 0.03229414285714286, 
              "TrainingMemory" -> 101902.85714285713`, "ModelMemory" -> 8824.,
               "ExperimentCount" -> 6, "ModelUtility" -> 19.93593728788157, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.19669869553281774`, 0.08732045342909754], 
                PlusMinus[0.09795825896168356, 0.035157797785236825`], 
                PlusMinus[0.20560211455550326`, 0.07692477127584524], 
                PlusMinus[0.20756393304481083`, 0.06877356306989446], 
                PlusMinus[0.13020270493397532`, 0.04307108040377406], 
                PlusMinus[0.17767807315490664`, 0.06251040740292012]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8934033399150396, 0.06977144394993785], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011726190476190477`, "MeanCrossEntropy" -> 
             PlusMinus[0.14149170243906659`, 0.028520065042235792`], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 101902.85714285713`, 
             "TrainingTime" -> 0.05859897142857143], "Index" -> 15], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6106084924379119, 0.03915608279366119], "Accuracy" -> 
              PlusMinus[0.7905110726510711, 0.05726837169025855], 
              "EvaluationTime" -> 6.60952380952381*^-6, "TestSize" -> 105, 
              "TrainingSize" -> 15, "TrainingTime" -> 0.017074, 
              "TrainingMemory" -> 72752, "ModelMemory" -> 8824, 
              "ExperimentCount" -> 1, "ModelUtility" -> 1.129359642879134, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6106084924379119, 0.027687531668099716`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7905110726510711, 0.040494853969693524`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.4110513877982183, 0.03945286068313066], "Accuracy" -> 
              PlusMinus[0.869196475192796, 0.04345319704055484], 
              "EvaluationTime" -> 0.000010868055555555556`, "TestSize" -> 120,
               "TrainingSize" -> 96, "TrainingTime" -> 0.019044, 
              "TrainingMemory" -> 81752., "ModelMemory" -> 8824., 
              "ExperimentCount" -> 5, "ModelUtility" -> 2.46104342305563, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.46039618776785923`, 0.07366173694962248], 
                PlusMinus[0.4459411672226184, 0.06302493608470493], 
                PlusMinus[0.3357946448591198, 0.05354270488007941], 
                PlusMinus[0.49468517859752625`, 0.07464920856608373], 
                PlusMinus[0.39088785039281493`, 0.05512669507085845]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7734033399150396, 0.08875092367994661], 
                PlusMinus[0.8534033399150396, 0.07745285713637329], 
                PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                PlusMinus[0.8134033399150394, 0.0836769727363244], 
                PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000010868055555555556`, "MeanCrossEntropy" -> 
             PlusMinus[0.4110513877982183, 0.03945286068313066], 
             "ModelMemory" -> 8824., "TrainingMemory" -> 81752., 
             "TrainingTime" -> 0.0399268], "Index" -> 16]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
             "NaiveBayes", "NearestNeighbors", "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 16], 
        Association["ID" -> 249769695268260]], "MaxTrainingSize" -> 120, 
      "LastReportingTime" -> 3.764659875933838`16.328300734456935*^9, 
      "PreprocessorEvaluationTime" -> 
      3.41845703125001707661789751568904`4.*^-6, "PreprocessorMemory" -> 
      39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 2., "ElapsedTimes" -> 
          2.1444440000000005`, "ExperimentCounts" -> 31], 
         Association[
         "TrainingSizes" -> 96, "TimeBudgets" -> 2.5, "ElapsedTimes" -> 
          2.5086619999999997`, "ExperimentCounts" -> 91]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[249778285202852]], "ID" -> 
         249782580170148]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{5., 2.3, 3.3, 1.}}, "ID" -> 3246226001810280355]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 5.684358, "MaxTrainingMemory" -> 1618600, 
      "DataMemory" -> 28496, "FunctionMemory" -> 269928, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2019, 4, 19, 10, 51, 16.44789`7.968685177651411}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7646742557976913`*^9, 3.764674276474028*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"2998f27c-c254-4039-adc2-a73fbe858671"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifier measurements", "Subsubsection",
 CellChangeTimes->{{3.764675483311494*^9, 
  3.764675489841652*^9}},ExpressionUUID->"36fb24b2-480d-4ae4-ae48-\
f612e81e30e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"ciris", ",", "validation"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.764674341196258*^9, 3.764674357484434*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"81f68373-f298-4ac4-b2e1-f6c8e80296bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             RasterBox[{{0.8564437870801482, 0.8967071593761374, 
              0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
              0.8158644505878024}, {0.47333333333333333`, 0.7727052229508918, 
              0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
             ImagePadding -> 0.2, 
             PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
             PlotRangePadding -> Automatic, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["31", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             RasterBox[{{0.8564437870801482, 0.8967071593761374, 
              0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
              0.8158644505878024}, {0.47333333333333333`, 0.7727052229508918, 
              0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
             ImagePadding -> 0.2, 
             PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
             PlotRangePadding -> Automatic, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LogisticRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["31", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "1.`15.954589770191003", "\[PlusMinus]", 
                    "2.2204460492503130808473`2.*^-16"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierMeasurementsObject[
   Association["Model" -> ClassifierFunction[
      Association[
      "ExampleNumber" -> 120, "ClassNumber" -> 3, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 120, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, "Method" -> 
                    "Naive", "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, 
                    "StandardDeviation" -> {0.8328227602557406, 
                    0.43546829837416184`, 1.798114560372118, 
                    0.7695665266166976}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> 
                   Association[
                    "Matrix" -> {{-0.5161172917542027, 0.4038358881539434}, {
                    0.2780327925815185, 
                    0.9128812287241621}, {-0.5799358869098153, 
                    0.025688057700654646`}, {-0.5656810713429923, 
                    0.05389398272114962}}, "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.787500000000001, 3.1108333333333333`, 
                    3.594166666666667, 1.1291666666666669`}, 
                    "StandardDeviation" -> {0.8328227602557406, 
                    0.43546829837416184`, 1.798114560372118, 
                    0.7695665266166976}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 2, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.009693, "MaxTrainingMemory" -> 65440, 
                    "DataMemory" -> 3960, "FunctionMemory" -> 21752, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2019, 4, 19, 10, 51, 10.804984`7.786199114549706}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
                  "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                "Method" -> "DimensionReduction", "VectorLength" -> 4, 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                7263179337424669307]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {5.787500000000001, 3.1108333333333333`, 
                 3.594166666666667, 1.1291666666666669`}, 
                "StandardDeviation" -> {0.8328227602557406, 
                 0.43546829837416184`, 1.798114560372118, 0.7695665266166976},
                 "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 3469640861300586857]], 
              MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                  Association[
                  "setosa" -> 1, "versicolor" -> 2, "virginica" -> 3]}, 
                "MissingCode" -> 0, "Version" -> {11.3, 0}, "ID" -> 
                8632914170514506599, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]]]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5976834071906370717]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
                "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]},
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
         "Marginal" -> 
         Association[
          "setosa" -> 0.3821138211382114, "versicolor" -> 0.3089430894308943, 
           "virginica" -> 0.3089430894308943]], "Prior" -> Automatic, 
       "Utility" -> 
       SparseArray[
        Automatic, {3, 4}, 0., {
         1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0,
        "TieBreaker" -> RandomChoice, "PerformanceGoal" -> "Quality", 
       "BatchProcessing" -> Automatic, "Model" -> 
       Association["LogProbabilitiesFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{-5.791790962219238, 
                6.989780902862549, -17.8476505279541, -16.106576919555664`}, {
                1.9422460794448853`, 
                2.13541316986084, -14.56447982788086, -11.663370132446289`}}],
               "Biases" -> 
              RawArray["Real32",{10.630792617797852`, 19.24622917175293}]], 
            "Parameters" -> 
            Association[
             "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 4,
               "$InputDimensions" -> {4}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
           
           Association["Version" -> "11.3.5"]], "Processor" -> 
         MachineLearning`MLProcessor["FirstValues", 
           Association[
           "Info" -> Association["Weight" -> 1, "Type" -> "NumericalVector"], 
            "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "Method" -> "LogisticRegression", "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 0.001, "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association["Value" -> "LBFGS", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[0.08463999837741062, 0.15342055126952983`], "Accuracy" -> 
            PlusMinus[0.9386216535899196, 0.03251481527909005], 
            "EvaluationTime" -> 0.000012642857142857137`, "TestSize" -> 144, 
            "TrainingSize" -> 96, "TrainingTime" -> 0.023777571428571426`, 
            "TrainingMemory" -> 81817.14285714286, "ModelMemory" -> 8824., 
            "ExperimentCount" -> 6, "ModelUtility" -> 32.47781345443033, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[0.15791018305628843`, 0.10494763389957125`], 
              PlusMinus[0.06535735247284061, 0.03763012036826288], 
              PlusMinus[0.7434093632974382, 0.4016382274285051], 
              PlusMinus[0.9307714289167957, 0.6174102309808362], 
              PlusMinus[0.0796285151070963, 0.035587225474362966`], 
              PlusMinus[0.2618782693331403, 0.1958946040077143]}, 
            "AccuracyHistory" -> {
              PlusMinus[0.9334033399150394, 0.060076315658761814`], 
              PlusMinus[0.9734033399150395, 0.047140990819063804`], 
              PlusMinus[0.8534033399150396, 0.07745285713637329], 
              PlusMinus[0.8534033399150396, 0.07745285713637329], 
              PlusMinus[0.9734033399150395, 0.047140990819063804`], 
              PlusMinus[0.9334033399150394, 0.060076315658761814`]}, 
            "Configuration" -> {
             "LogisticRegression", "L1Regularization" -> 0, 
              "L2Regularization" -> 0.001, "OptimizationMethod" -> Automatic, 
              MaxIterations -> 30}, "FinalTrainingSize" -> 120], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
             "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
             "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
             "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 6], 
             TypeSystem`Vector[TypeSystem`AnyType, 6], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 249773990235556]], "Configurations" -> 
         Dataset[
           Association[
           Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0984130956623905`, 0.005792435051277585], 
                 "Accuracy" -> 
                 PlusMinus[0.7458087261174344, 0.06033621262575093], 
                 "EvaluationTime" -> 0.000042046349206349205`, "TestSize" -> 
                 205, "TrainingSize" -> 15, "TrainingTime" -> 0.007961, 
                 "TrainingMemory" -> 63570.666666666664`, "ModelMemory" -> 
                 8824., "ExperimentCount" -> 2, "ModelUtility" -> 
                 0.35725635955058344`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.09839918109688, 0.00818336724414245], 
                   PlusMinus[1.0984270671594747`, 0.008200091316362667]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                   PlusMinus[0.6864859752264957, 0.046649320013173276`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0974940003840405`, 0.014624560924562808`], 
                 "Accuracy" -> 
                 PlusMinus[0.777679565967586, 0.04498678634177316], 
                 "EvaluationTime" -> 0.00004634722222222221, "TestSize" -> 
                 120, "TrainingSize" -> 96, "TrainingTime" -> 0.0080215, 
                 "TrainingMemory" -> 73162.66666666666, "ModelMemory" -> 
                 8824., "ExperimentCount" -> 5, "ModelUtility" -> 
                 0.356706390281892, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.097550721176311, 0.032704533985117044`], 
                   PlusMinus[1.0975399800299015`, 0.03270389346993801], 
                   PlusMinus[1.0973816241831755`, 0.03269536803459529], 
                   PlusMinus[1.0975112687392152`, 0.03270239373278863], 
                   PlusMinus[1.0974864683634953`, 0.03270102503988093]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.6934033399150397, 0.09613796247840892], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00004634722222222221, "MeanCrossEntropy" -> 
                PlusMinus[1.0974940003840405`, 0.014624560924562808`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 73162.66666666666,
                 "TrainingTime" -> 0.0175868], "Index" -> 1], 
            Association[
             "Value" -> "RandomForest", "Options" -> 
              Association[
               "FeatureFraction" -> Association["Value" -> Automatic], 
                "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
                Association["Value" -> Automatic], "DistributionSmoothing" -> 
                Association["Value" -> 0.5], "Implementation" -> 
                Association["Value" -> Automatic]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.49000752046247326`, 0.04104918168816749], 
                 "Accuracy" -> 
                 PlusMinus[0.906511794028662, 0.07237168073079556], 
                 "EvaluationTime" -> 0.0000624, "TestSize" -> 200, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.012443, 
                 "TrainingMemory" -> 276490.6666666666, "ModelMemory" -> 
                 164112., "ExperimentCount" -> 2, "ModelUtility" -> 
                 1.7401523404416772`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.5279445811936713, 0.03592988549126172], 
                   PlusMinus[0.4608815331518772, 0.03148214545928387]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8052978564146149, 0.04011600232678486], 
                   PlusMinus[0.9439117178007539, 0.024385566318212912`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.2442575140230343, 0.029967862414012156`], 
                 "Accuracy" -> 
                 PlusMinus[0.9201673670096865, 0.030768278640629372`], 
                 "EvaluationTime" -> 0.000214125, "TestSize" -> 144, 
                 "TrainingSize" -> 96, "TrainingTime" -> 
                 0.013676428571428569`, "TrainingMemory" -> 328070.8571428571,
                  "ModelMemory" -> 166765.7142857143, "ExperimentCount" -> 6, 
                 "ModelUtility" -> 6.897201804587356, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.2908592838000396, 0.10581533859783147`], 
                   PlusMinus[0.2320482454437415, 0.037433337031051755`], 
                   PlusMinus[0.25072668931783365`, 0.07118378073910402], 
                   PlusMinus[0.3380190076094244, 0.11895272542412984`], 
                   PlusMinus[0.22388896366506325`, 0.048880979611601476`], 
                   PlusMinus[0.27281388890074326`, 0.07430050459349063]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000214125, "MeanCrossEntropy" -> 
                PlusMinus[0.2442575140230343, 0.029967862414012156`], 
                "ModelMemory" -> 166765.7142857143, "TrainingMemory" -> 
                328070.8571428571, "TrainingTime" -> 0.028854714285714282`], 
              "Index" -> 2], 
            Association[
             "Value" -> "DecisionTree", "Options" -> 
              Association[
               "DistributionSmoothing" -> Association["Value" -> 1], 
                "FeatureFraction" -> Association["Value" -> 1]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.49851917166609794`, 0.05364051174905315], 
                 "Accuracy" -> 
                 PlusMinus[0.864108779411799, 0.05590032822717871], 
                 "EvaluationTime" -> 9.374603174603175*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 0.004434, 
                 "TrainingMemory" -> 63813.33333333333, "ModelMemory" -> 
                 5480., "ExperimentCount" -> 2, "ModelUtility" -> 
                 1.6655957908127994`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.5410517569138144, 0.05271285748126373], 
                   PlusMinus[0.4614632221443068, 0.04920221356774295]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7997927095900501, 0.03986305649342362], 
                   PlusMinus[0.9007503617387193, 0.030088321160355407`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.254894829427495, 0.0567567338679045], "Accuracy" -> 
                 PlusMinus[0.9122716715321563, 0.029793024429179447`], 
                 "EvaluationTime" -> 0.000017464285714285707`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.005769285714285714, "TrainingMemory" -> 79010.28571428571, 
                 "ModelMemory" -> 5480., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 6.093408282628153, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.26544063704972753`, 0.10469203075134581`], 
                   PlusMinus[0.2690004324941802, 0.13275294044532227`], 
                   PlusMinus[0.1830822966595096, 0.06839387952153182], 
                   PlusMinus[0.2854853954915724, 0.10486540279680033`], 
                   PlusMinus[0.3927719937021966, 0.1533145049377741], 
                   PlusMinus[0.42201105877935113`, 0.18389177608093915`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000017464285714285707`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.254894829427495, 0.0567567338679045], 
                "ModelMemory" -> 5480., "TrainingMemory" -> 79010.28571428571,
                 "TrainingTime" -> 0.011357142857142857`], "Index" -> 3], 
            Association[
             "Value" -> "NearestNeighbors", "Options" -> 
              Association[
               "NeighborsNumber" -> Association["Value" -> Automatic], 
                "DistributionSmoothing" -> Association["Value" -> 0.5], 
                "NearestMethod" -> Association["Value" -> Automatic]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.3792552605845643, 0.06587697190537979], 
                 "Accuracy" -> 
                 PlusMinus[0.7976434902552608, 0.03214849566107037], 
                 "EvaluationTime" -> 0.000011450793650793651`, "TestSize" -> 
                 210, "TrainingSize" -> 15, "TrainingTime" -> 
                 0.0029773333333333327`, "TrainingMemory" -> 
                 54829.33333333333, "ModelMemory" -> 6424., "ExperimentCount" -> 
                 2, "ModelUtility" -> 2.8047953386911906`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.4559344859251635, 0.0627198190007857], 
                   PlusMinus[0.34439426037327964`, 0.042289822249851956`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7812526847604674, 0.04109368950621036], 
                   PlusMinus[0.8121953066465069, 0.03871984320913787]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.20183252835501322`, 0.03488114176074588], 
                 "Accuracy" -> 
                 PlusMinus[0.9259620016983546, 0.03042327225174006], 
                 "EvaluationTime" -> 0.000021892857142857142`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.004942999999999999, "TrainingMemory" -> 
                 200305.14285714284`, "ModelMemory" -> 9208., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 9.90671278384308, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.22622792622001187`, 0.062310215488047604`], 
                   PlusMinus[0.16769222830092473`, 0.03619223280080637], 
                   PlusMinus[0.33739510591728755`, 0.14943979814547884`], 
                   PlusMinus[0.29094772508508077`, 0.07532249475233897], 
                   PlusMinus[0.18424194902691343`, 0.04766127623160648], 
                   PlusMinus[0.2275685920792768, 0.06692193703241567]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000021892857142857142`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.20183252835501322`, 0.03488114176074588], 
                "ModelMemory" -> 9208., "TrainingMemory" -> 
                200305.14285714284`, "TrainingTime" -> 0.00890893333333333], 
              "Index" -> 4], 
            Association[
             "Value" -> "NaiveBayes", "Options" -> 
              Association[
               "SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.36799100588427275`, 0.08767244255609412], 
                 "Accuracy" -> 
                 PlusMinus[0.8715443943526486, 0.02561181662132864], 
                 "EvaluationTime" -> 7.923809523809523*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.004886333333333333, "TrainingMemory" -> 47397.33333333333, 
                 "ModelMemory" -> 16152., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 2.9061678784871354`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.4314231118766282, 0.11576253040695524`], 
                   PlusMinus[0.32928490346876327`, 0.09042805019885627]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8808235332311348, 0.03242881925369866], 
                   PlusMinus[0.8610475033587378, 0.03449114742447021]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.17134844451559414`, 0.06033721695038203], 
                 "Accuracy" -> 
                 PlusMinus[0.8836372573712382, 0.03213306868986417], 
                 "EvaluationTime" -> 0.000015208333333333331`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.00489242857142857, "TrainingMemory" -> 58829.71428571428, 
                 "ModelMemory" -> 18584., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 12.839643464244745`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.32903357946311057`, 0.17859376860428763`], 
                   PlusMinus[0.1328436915626898, 0.053450241882786124`], 
                   PlusMinus[0.30016676360326944`, 0.2086071255505708], 
                   PlusMinus[0.4438979290990566, 0.2551802240613075], 
                   PlusMinus[0.3117957563224018, 0.18765610550209158`], 
                   PlusMinus[0.16110286477118788`, 0.06277278360587968]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000015208333333333331`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.17134844451559414`, 0.06033721695038203], 
                "ModelMemory" -> 18584., "TrainingMemory" -> 
                58829.71428571428, "TrainingTime" -> 0.010757247619047616`], 
              "Index" -> 5], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.1830189840736721, 0.1125405396730655], 
                 "Accuracy" -> 
                 PlusMinus[0.9191236362924227, 0.06469082064141339], 
                 "EvaluationTime" -> 7.273015873015873*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.022832666666666668`, "TrainingMemory" -> 72661.33333333333,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 10.225601017520367`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.3471859668662656, 0.11272917741511884`], 
                   PlusMinus[0.14463189389833508`, 0.05451123559619447]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8277935294660336, 0.03775056633557615], 
                   PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.08463999837741062, 0.15342055126952983`], 
                 "Accuracy" -> 
                 PlusMinus[0.9386216535899196, 0.03251481527909005], 
                 "EvaluationTime" -> 0.000012642857142857137`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.023777571428571426`, "TrainingMemory" -> 81817.14285714286,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 32.47781345443033, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.15791018305628843`, 0.10494763389957125`], 
                   PlusMinus[0.06535735247284061, 0.03763012036826288], 
                   PlusMinus[0.7434093632974382, 0.4016382274285051], 
                   PlusMinus[0.9307714289167957, 0.6174102309808362], 
                   PlusMinus[0.0796285151070963, 0.035587225474362966`], 
                   PlusMinus[0.2618782693331403, 0.1958946040077143]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000012642857142857137`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.08463999837741062, 0.15342055126952983`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81817.14285714286,
                 "TrainingTime" -> 0.05136575238095238], "Index" -> 6], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.00001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.27074759248028707`, 0.08572935824912634], 
                 "Accuracy" -> 
                 PlusMinus[0.9176725595458546, 0.06920001746512462], 
                 "EvaluationTime" -> 7.111111111111111*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 0.022239, 
                 "TrainingMemory" -> 72773.33333333333, "ModelMemory" -> 
                 8824., "ExperimentCount" -> 2, "ModelUtility" -> 
                 5.211507744761069, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.2981313191768322, 0.12271620515305717`], 
                   PlusMinus[0.24858684650662213`, 0.11039459961762833`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.818432277437096, 0.03849308763321103], 
                   PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.07770202631505357, 0.6717556702787831], 
                 "Accuracy" -> 
                 PlusMinus[0.9386216535899196, 0.03251481527909005], 
                 "EvaluationTime" -> 0.000011672619047619046`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.022836285714285715`, "TrainingMemory" -> 81755.42857142857,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 9.605887534042953, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.15819333978083547`, 0.10790108692319679`], 
                   PlusMinus[0.06559658701023834, 0.03796743896676141], 
                   PlusMinus[2.2316485323925574`, 1.2392969348841918`], 
                   PlusMinus[4.145152399898731, 2.9001807245022238`], 
                   PlusMinus[0.07557620551596139, 0.03534311470762335], 
                   PlusMinus[0.803774772402412, 0.7473482426787853]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000011672619047619046`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.07770202631505357, 0.6717556702787831], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81755.42857142857,
                 "TrainingTime" -> 0.049642542857142855`], "Index" -> 7], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0985425938424118`, 0.005787846012784084], 
                 "Accuracy" -> 
                 PlusMinus[0.7422771768159798, 0.06259041963133685], 
                 "EvaluationTime" -> 7.298412698412698*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.007618666666666667, "TrainingMemory" -> 63549.33333333333, 
                 "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 0.35717283379043535`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.0985413579777341`, 0.008185233844319994], 
                   PlusMinus[1.098543829716932, 0.008185266438988481]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                   PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0983118268304066`, 0.014644152158367264`], 
                 "Accuracy" -> 
                 PlusMinus[0.777679565967586, 0.04498678634177316], 
                 "EvaluationTime" -> 0.000012305555555555554`, "TestSize" -> 
                 120, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.007691499999999999, "TrainingMemory" -> 72778.66666666667, 
                 "ModelMemory" -> 8824., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.35617425311164497`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.09831750265965, 0.03274562541425693], 
                   PlusMinus[1.0983164276432218`, 0.03274556682718328], 
                   PlusMinus[1.0983005803571464`, 0.03274471235582584], 
                   PlusMinus[1.098313551808163, 0.03274541222497537], 
                   PlusMinus[1.0983110722881348`, 0.032745278196301325`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.6934033399150397, 0.09613796247840892], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000012305555555555554`, 
                "MeanCrossEntropy" -> 
                PlusMinus[1.0983118268304066`, 0.014644152158367264`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 72778.66666666667,
                 "TrainingTime" -> 0.016848466666666666`], "Index" -> 8], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0971036456529317`, 0.0057761647200319614`], 
                 "Accuracy" -> 
                 PlusMinus[0.7422771768159798, 0.06259041963133685], 
                 "EvaluationTime" -> 6.993650793650793*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.0077406666666666665`, "TrainingMemory" -> 64232., 
                 "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 0.35811091042738097`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.0969806148517822`, 0.008165350524023467], 
                   PlusMinus[1.097226768430939, 0.008168402129649258]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                   PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0894230780895524`, 0.014443043548636148`], 
                 "Accuracy" -> 
                 PlusMinus[0.777679565967586, 0.04498678634177316], 
                 "EvaluationTime" -> 0.000011791666666666668`, "TestSize" -> 
                 120, "TrainingSize" -> 96, "TrainingTime" -> 0.0089115, 
                 "TrainingMemory" -> 76678.66666666666, "ModelMemory" -> 
                 8824., "ExperimentCount" -> 5, "ModelUtility" -> 
                 0.3620210601916591, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.0899865915102787`, 0.03232222686557933], 
                   PlusMinus[1.0898800605734955`, 0.032310437910885614`], 
                   PlusMinus[1.0883081722409607`, 0.032227184653801595`], 
                   PlusMinus[1.0895976387893833`, 0.03230005244891964], 
                   PlusMinus[1.0893491170664151`, 0.0322835501871499]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.6934033399150397, 0.09613796247840892], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000011791666666666668`, 
                "MeanCrossEntropy" -> 
                PlusMinus[1.0894230780895524`, 0.014443043548636148`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 76678.66666666666,
                 "TrainingTime" -> 0.018434466666666663`], "Index" -> 9], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.23737105871312028`, 0.09265298311103515], 
                 "Accuracy" -> 
                 PlusMinus[0.9176725595458546, 0.06920001746512462], 
                 "EvaluationTime" -> 7.149206349206348*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 0.02313533333333333,
                  "TrainingMemory" -> 72741.33333333333, "ModelMemory" -> 
                 8824., "ExperimentCount" -> 2, "ModelUtility" -> 
                 6.59600244626611, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.3205067643206394, 0.11935484085747529`], 
                   PlusMinus[0.19617606813302763`, 0.08401724729600465]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.818432277437096, 0.03849308763321103], 
                   PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.07904448355670345, 0.371765412518328], 
                 "Accuracy" -> 
                 PlusMinus[0.9386216535899196, 0.03251481527909005], 
                 "EvaluationTime" -> 0.000011869047619047619`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.023483857142857143`, "TrainingMemory" -> 81832., 
                 "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 18.356507616382682`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.15811611544850848`, 0.10759865397565095`], 
                   PlusMinus[0.06552483632955247, 0.03791076407249097], 
                   PlusMinus[1.448080453009479, 0.8000515988017022], 
                   PlusMinus[2.274824526733202, 1.607000576001376], 
                   PlusMinus[0.07596561288656797, 0.035372078004040824`], 
                   PlusMinus[0.5436981505742084, 0.47624736311686794`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000011869047619047619`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.07904448355670345, 0.371765412518328], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81832., 
                "TrainingTime" -> 0.051315961904761904`], "Index" -> 10], 
            Association[
             "Value" -> "GradientBoostedTrees", "Options" -> 
              Association[
               "BoostingMethod" -> Association["Value" -> "Gradient"], 
                MaxTrainingRounds -> Association["Value" -> 50], 
                "LeavesNumber" -> Association["Value" -> 110], "LearningRate" -> 
                Association["Value" -> 0.04], ValidationSet -> 
                Association["Value" -> Automatic], "MaxBinNumber" -> 
                Association["Value" -> 255], "ThreadNumber" -> 
                Association["Value" -> 4], "MaxDepth" -> 
                Association["Value" -> 6], "LeafSize" -> 
                Association["Value" -> 35], "FeatureFraction" -> 
                Association["Value" -> 1], "BaggingFraction" -> 
                Association["Value" -> 1], "BaggingFrequency" -> 
                Association["Value" -> 0], "MinGainToSplit" -> 
                Association["Value" -> 0], "L1Regularization" -> 
                Association["Value" -> 0], "L2Regularization" -> 
                Association["Value" -> 0], "LossFunction" -> 
                Association["Value" -> Automatic]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.0985571590100267`, 0.005787981527216761], 
                 "Accuracy" -> 
                 PlusMinus[0.29490885204096734`, 0.031161465403895663`], 
                 "EvaluationTime" -> 0.000015123809523809524`, "TestSize" -> 
                 210, "TrainingSize" -> 15, "TrainingTime" -> 
                 0.008905333333333333, "TrainingMemory" -> 59704., 
                 "ModelMemory" -> 20240., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 0.35716323152022905`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.0985571590100267`, 0.008185441974554883], 
                   PlusMinus[1.0985571590100267`, 0.008185441974554883]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.29490885204096734`, 0.04406896699760924], 
                   PlusMinus[0.29490885204096734`, 0.04406896699760924]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.4085698206253161, 0.032604393977145485`], 
                 "Accuracy" -> 
                 PlusMinus[0.8965986149404397, 0.033897852151787054`], 
                 "EvaluationTime" -> 0.00044080357142857137`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 0.065592, 
                 "TrainingMemory" -> 1.0744891428571427`*^6, "ModelMemory" -> 
                 287928., "ExperimentCount" -> 6, "ModelUtility" -> 
                 2.506901176300536, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.4207581999477333, 0.07261708566780833], 
                   PlusMinus[0.4427720361890039, 0.050557184171124474`], 
                   PlusMinus[0.4918022839002229, 0.09690078760320021], 
                   PlusMinus[0.4081229100558304, 0.06437299309941569], 
                   PlusMinus[0.38379036923269233`, 0.05438377134603095], 
                   PlusMinus[0.3474685885242871, 0.061661077317934125`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00044080357142857137`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.4085698206253161, 0.032604393977145485`], 
                "ModelMemory" -> 287928., "TrainingMemory" -> 
                1.0744891428571427`*^6, "TrainingTime" -> 
                0.08761573333333332], "Index" -> 11], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.9792957980217835, 0.011308032724321043`], 
                 "Accuracy" -> 
                 PlusMinus[0.7422771768159798, 0.06259041963133685], 
                 "EvaluationTime" -> 5.838095238095238*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.009638666666666667, "TrainingMemory" -> 67418.66666666666, 
                 "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 0.4483277197848347, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.970160848433702, 0.010696956398137314`], 
                   PlusMinus[0.98738210877448, 0.01006427190635627]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7905110726510711, 0.040494853969693524`], 
                   PlusMinus[0.6809703475471289, 0.045653922190636534`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.7183803251397856, 0.026418283260389475`], 
                 "Accuracy" -> 
                 PlusMinus[0.8138876300268391, 0.04731898485281544], 
                 "EvaluationTime" -> 0.000013305555555555554`, "TestSize" -> 
                 120, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.024195666666666664`, "TrainingMemory" -> 89298.66666666666,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 5, 
                 "ModelUtility" -> 0.8248084106381295, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.7460489200022402, 0.051352982075318236`], 
                   PlusMinus[0.7389042398127406, 0.04595345849281669], 
                   PlusMinus[0.6632402765785593, 0.04660192657712163], 
                   PlusMinus[0.7391841241772064, 0.05180785892515162], 
                   PlusMinus[0.7128941946936983, 0.046184032598507015`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.6934033399150397, 0.09613796247840892], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000013305555555555554`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.7183803251397856, 0.026418283260389475`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 89298.66666666666,
                 "TrainingTime" -> 0.03867346666666667], "Index" -> 12], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.39876036359612504`, 0.027231706558342308`], 
                 "Accuracy" -> 
                 PlusMinus[0.8483042338994277, 0.03642893490379045], 
                 "EvaluationTime" -> 5.974603174603175*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.021484666666666666`, "TrainingMemory" -> 72618.66666666666,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 2.6437474903640483`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.4101514328064392, 0.048300963290292195`], 
                   PlusMinus[0.39410182776659514`, 0.03088860300313243]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.818432277437096, 0.03849308763321103], 
                   PlusMinus[0.870917365622686, 0.03349124335036146]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.24044749709168772`, 0.02869770450945638], 
                 "Accuracy" -> 
                 PlusMinus[0.9280324914225152, 0.03192724180017606], 
                 "EvaluationTime" -> 0.000011398809523809525`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.021378714285714282`, "TrainingMemory" -> 81675.42857142857,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 7.126833788039311, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.2932705290007947, 0.08330813528228093], 
                   PlusMinus[0.22303707691874575`, 0.04240010344865916], 
                   PlusMinus[0.20549458272307108`, 0.04912793678653851], 
                   PlusMinus[0.3149472987150707, 0.06768910544836666], 
                   PlusMinus[0.2115818518882012, 0.048454298725699174`], 
                   PlusMinus[0.2729769227711883, 0.05083052478693025]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000011398809523809525`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.24044749709168772`, 0.02869770450945638], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81675.42857142857,
                 "TrainingTime" -> 0.0471391238095238], "Index" -> 13], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.278858460795095, 0.0886299055653316], "Accuracy" -> 
                 PlusMinus[0.9176725595458546, 0.06920001746512462], 
                 "EvaluationTime" -> 6.285714285714285*^-6, "TestSize" -> 210,
                  "TrainingSize" -> 15, "TrainingTime" -> 
                 0.020850333333333332`, "TrainingMemory" -> 72666.66666666666,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 2, 
                 "ModelUtility" -> 4.910551478997189, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.28084411195006165`, 0.12456175599408821`], 
                   PlusMinus[0.27682441191474505`, 0.12607063440981361`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.818432277437096, 0.03849308763321103], 
                   PlusMinus[0.9513023689202603, 0.022407889599959065`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.07687288522178436, 0.9359955380107127], 
                 "Accuracy" -> 
                 PlusMinus[0.9386216535899196, 0.03251481527909005], 
                 "EvaluationTime" -> 0.000012166666666666665`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.023170285714285716`, "TrainingMemory" -> 81812.57142857142,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 6.194158447819693, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.15831711099410029`, 0.10807175327773265`], 
                   PlusMinus[0.06560976365324916, 0.037976177177284125`], 
                   PlusMinus[3.2681103639003273`, 1.8174993900844665`], 
                   PlusMinus[5.7301306613981025`, 3.844166388561772], 
                   PlusMinus[0.07553229279961614, 0.03534113644338726], 
                   PlusMinus[1.798792466312451, 1.7516820045639863`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000012166666666666665`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.07687288522178436, 0.9359955380107127], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81812.57142857142,
                 "TrainingTime" -> 0.0486546761904762], "Index" -> 14], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.19581408040696568`, 0.10202465004671717`], 
                 "Accuracy" -> 
                 PlusMinus[0.9098723663313701, 0.055770742931238904`], 
                 "EvaluationTime" -> 6.39047619047619*^-6, "TestSize" -> 210, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.019846, 
                 "TrainingMemory" -> 72752., "ModelMemory" -> 8824., 
                 "ExperimentCount" -> 2, "ModelUtility" -> 9.23930381167653, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.376693294571764, 0.07537832818494132], 
                   PlusMinus[0.1777619267441469, 0.023813140840280644`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8371846749281692, 0.03696629429895102], 
                   PlusMinus[0.9411020858136574, 0.02423034068726164]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.14149170243906659`, 0.028520065042235792`], 
                 "Accuracy" -> 
                 PlusMinus[0.934050818729946, 0.033007017171560335`], 
                 "EvaluationTime" -> 0.000011726190476190477`, "TestSize" -> 
                 144, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.03229414285714286, "TrainingMemory" -> 101902.85714285713`,
                  "ModelMemory" -> 8824., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 19.93593728788157, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.19669869553281774`, 0.08732045342909754], 
                   PlusMinus[0.09795825896168356, 0.035157797785236825`], 
                   PlusMinus[0.20560211455550326`, 0.07692477127584524], 
                   PlusMinus[0.20756393304481083`, 0.06877356306989446], 
                   PlusMinus[0.13020270493397532`, 0.04307108040377406], 
                   PlusMinus[0.17767807315490664`, 0.06251040740292012]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8934033399150396, 0.06977144394993785], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9734033399150395, 0.047140990819063804`], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000011726190476190477`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.14149170243906659`, 0.028520065042235792`], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 
                101902.85714285713`, "TrainingTime" -> 0.05859897142857143], 
              "Index" -> 15], 
            Association[
             "Value" -> "LogisticRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.6106084924379119, 0.03915608279366119], 
                 "Accuracy" -> 
                 PlusMinus[0.7905110726510711, 0.05726837169025855], 
                 "EvaluationTime" -> 6.60952380952381*^-6, "TestSize" -> 105, 
                 "TrainingSize" -> 15, "TrainingTime" -> 0.017074, 
                 "TrainingMemory" -> 72752, "ModelMemory" -> 8824, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 1.129359642879134, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.6106084924379119, 0.027687531668099716`]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7905110726510711, 0.040494853969693524`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.4110513877982183, 0.03945286068313066], 
                 "Accuracy" -> 
                 PlusMinus[0.869196475192796, 0.04345319704055484], 
                 "EvaluationTime" -> 0.000010868055555555556`, "TestSize" -> 
                 120, "TrainingSize" -> 96, "TrainingTime" -> 0.019044, 
                 "TrainingMemory" -> 81752., "ModelMemory" -> 8824., 
                 "ExperimentCount" -> 5, "ModelUtility" -> 2.46104342305563, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.46039618776785923`, 0.07366173694962248], 
                   PlusMinus[0.4459411672226184, 0.06302493608470493], 
                   PlusMinus[0.3357946448591198, 0.05354270488007941], 
                   PlusMinus[0.49468517859752625`, 0.07464920856608373], 
                   PlusMinus[0.39088785039281493`, 0.05512669507085845]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.7734033399150396, 0.08875092367994661], 
                   PlusMinus[0.8534033399150396, 0.07745285713637329], 
                   PlusMinus[0.9334033399150394, 0.060076315658761814`], 
                   PlusMinus[0.8134033399150394, 0.0836769727363244], 
                   PlusMinus[0.8934033399150396, 0.06977144394993785]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000010868055555555556`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.4110513877982183, 0.03945286068313066], 
                "ModelMemory" -> 8824., "TrainingMemory" -> 81752., 
                "TrainingTime" -> 0.0399268], "Index" -> 16]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration[
               "DecisionTree", "GradientBoostedTrees", "LogisticRegression", 
                "NaiveBayes", "NearestNeighbors", "RandomForest"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
               TypeSystem`AnyLength]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "TrainingSize", "TrainingTime", "TrainingMemory", 
                 "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "AccuracyHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 16], 
           Association["ID" -> 249769695268260]], "MaxTrainingSize" -> 120, 
         "LastReportingTime" -> 3.764659875933838`16.328300734456935*^9, 
         "PreprocessorEvaluationTime" -> 
         3.41845703125001707661789751568904`4.*^-6, "PreprocessorMemory" -> 
         39272, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 15, "TimeBudgets" -> 2., "ElapsedTimes" -> 
             2.1444440000000005`, "ExperimentCounts" -> 31], 
            Association[
            "TrainingSizes" -> 96, "TimeBudgets" -> 2.5, "ElapsedTimes" -> 
             2.5086619999999997`, "ExperimentCounts" -> 91]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[249778285202852]], "ID" -> 
            249782580170148]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> {{5., 2.3, 3.3, 1.}}, "ID" -> 3246226001810280355]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 5.684358, "MaxTrainingMemory" -> 
         1618600, "DataMemory" -> 28496, "FunctionMemory" -> 269928, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2019, 4, 19, 10, 51, 16.44789`7.968685177651411}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> CompressedData["
1:eJx1Um1KA0EMHetWq6Iu3e32CyqewQPMnMEjCPZvz6M38QiC/vIiiiIVpNju
ey8yWRoYQjJ5ycvH9d3q9r4XQrjavmL7Xl920qSbVo4T7JL6K0LPUmhlQH+d
lq300uPDTsbuv6S9jsg7t3/ohnEh5fkL8hjT/xtRp6b/zPKi7rPxgx6Ql/o5
ZLz4nlJ/O/yC+IL9zK0/4P/7Fz/EHVg96CP6K8YH6onFw9Z83qPqiX+OX0fN
S/3g/9zwqg9/v7M/xA2tH/mR7431p8SfsM7IxTed/SLus8MPuAvm+yC/heFh
z2z/ug/ND3Zle8rn3U+6B+hN1Hzz+xgy/of4qd1Xfg+bPfMfOX6V46/7ebL5
5/d7af1rfupP/LQH+Cfuv3T/javv9+vvq7b7+QPiFFos
       "], 
      "Output" -> {
       "versicolor", "virginica", "versicolor", "virginica", "virginica", 
        "setosa", "virginica", "setosa", "virginica", "virginica", 
        "virginica", "versicolor", "versicolor", "versicolor", "versicolor", 
        "setosa", "virginica", "versicolor", "versicolor", "virginica", 
        "versicolor", "virginica", "versicolor", "virginica", "virginica", 
        "setosa", "versicolor", "versicolor", "versicolor", "versicolor", 
        "virginica"}], 
    "Predictions" -> {
     "versicolor", "virginica", "versicolor", "virginica", "virginica", 
      "setosa", "virginica", "setosa", "virginica", "virginica", "virginica", 
      "versicolor", "versicolor", "versicolor", "versicolor", "setosa", 
      "virginica", "versicolor", "versicolor", "virginica", "versicolor", 
      "virginica", "versicolor", "virginica", "virginica", "setosa", 
      "versicolor", "versicolor", "versicolor", "versicolor", "virginica"}, 
    "LogProbabilities" -> CompressedData["
1:eJwB+QIG/SFib1JlAgAAAB8AAAADAAAAd1/XDsl9KMAcAlu+r8gAvzP7q1Qs
BiXAB/ZwsRT4QsCOJHnLodcjwELjaFeEwQm/2dON8EpJLMD/junGwXksv2W5
FYgy4CDAnlAtKna2QsDdCDHLciwiwOa4+eWqqR2/96apkSy6RMAuN4yHZE8j
wINS03zTzRC/FEmci8zcA7/rgXGtqVwkwObOMAauJE7A79N7/7YyRcAS8b0m
XV8swOOcpyXvKKe+iaMQ96TuA79kBql83lokwNTjd3NKL07AuQ1myPMLUcBu
A2Pt+lE3wEq5/P9netS91FBXinE0RMBSbbwluHYrwL0Y0xijPbK+sLSSl1E+
OMDutYHd0vcZwHkftClB2Vi/gfg+cNC8NMAwIVd3WH2tvgHFLB875CvAKkIP
ILmYN8DXr5ieS4huvzp7+VU+YBbAWf5YaFGiKsD4YAW7Ay69vmW551W+MDDA
MngfsdgXK8DP60rpxFoYvxSX+rOomCLABUr+Ksbwor945CUjEIYKwN/gbYq0
XUfAzZUfGSvRQMBydw6GaOYkwAthfMG6Wv6+leRrVmwbJcCrWu7q5jT/vhiS
qq83CSnAF31cKWonLMD17bY/A+O8vtFCoIDMuivAUqSWHiD0SsCKqU1UfyEw
wPCRDPrcgHq+00wAsR9AOcCiGHyPKWtgv8vwWNGf2hjAt3WYYqchO8DSS/RD
D3sawAiixIeQ21W/0M1kplx6J8DO8NfUco1UvzuPRMaZwBrA3nfueA9qQMAR
Qj9xMYIWwBXLcWPxiG2/2HFqnAbDQcACcegf8TYewHE8bQRjLkG/SbIL5mO/
GL/m/Gr/MokiwCXX16/chE3Anf4W954lLMDNT4s0j1++vnuLtJ2PjivAzx7E
UzzRK8AlzU9nrY9AvzpkIbNpXh7A2o9SObe1MMCmIyizYXvNvgsSABgiJinA
YOyJBBcKJMAl1Jwx1z4Mv83Z2xWQKCfAHpmHC11YO8CIQTfdfFH+v8R6825O
2sS/NdN5/Q==
     "], 
    "CountMatrix" -> {{4, 0, 0, 0}, {0, 14, 0, 0}, {0, 0, 13, 0}}, 
    "IndicesMatrix" -> {{{6, 8, 16, 26}, {}, {}, {}}, {{}, {1, 3, 12, 13, 14, 
       15, 18, 19, 21, 23, 27, 28, 29, 30}, {}, {}}, {{}, {}, {2, 4, 5, 7, 9, 
       10, 11, 17, 20, 22, 24, 25, 31}, {}}}, 
    "ExtendedClasses" -> {"setosa", "versicolor", "virginica"}, "Weights" -> 
    SparseArray[Automatic, {31}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.00006380645161290323, "SingleEvaluationTime" -> 
    0.0012545625`5., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.764674353268772*^9, 3.7646743583133087`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"6aacf7f0-7c33-4f72-84ca-27fb24e901fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"0a59893a-4b99-45f6-974d-a695e8794af8"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.764674367926075*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"8618f8f3-7bfc-4a7f-88e6-4196292e35ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"9150f509-ea42-447c-976e-84e2a4b17f7e"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {0.9151477054188749, 
   0.5042900814198371, 0.0042245583365976115`}}, {{1., 1., 1.}, {1., 0.42, 
   0.}, {1., 1., 1.}}, {{0.9164019579386888, 0.8025488808815235, 
   0.4937974192771057}, {1., 1., 1.}, {1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 
   1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["4", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "4", "\" examples of \"", "\"setosa\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{4, " examples of ", "setosa", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "versicolor", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "virginica", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"versicolor\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "versicolor"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["14", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "14", "\" examples of \"", "\"versicolor\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{14, " examples of ", "versicolor", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "virginica", " misclassified as ", 
           "versicolor"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"virginica\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "virginica"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "versicolor", " misclassified as ", 
           "virginica"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["13", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "13", "\" examples of \"", "\"virginica\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{13, " examples of ", "virginica", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" of class \"", "\"setosa\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " of class ", "setosa"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "14", "\" example\"", "\"s\"", "\" of class \"", "\"versicolor\""},
            "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{14, " example", "s", " of class ", "versicolor"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "13", "\" example\"", "\"s\"", "\" of class \"", "\"virginica\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{13, " example", "s", " of class ", "virginica"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "4", "\" example\"", "\"s\"", "\" classified as \"", "\"setosa\""},
            "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{4, " example", "s", " classified as ", "setosa"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "14", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"versicolor\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{14, " example", "s", " classified as ", "versicolor"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "13", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"virginica\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{13, " example", "s", " classified as ", "virginica"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{2.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{2.5, 
       FormBox["4", TraditionalForm]}, {1.5, 
       FormBox["14", TraditionalForm]}, {0.5, 
       FormBox["13", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["4", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["14", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["13", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.764674373841442*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c22256ce-c570-4c42-8fbe-4273a0c206c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc", "Subsubsection",
 CellChangeTimes->{{3.764675504020529*^9, 
  3.764675510345676*^9}},ExpressionUUID->"b8d3e49b-d290-4e76-a0b8-\
3e59a9ee6676"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"subset1", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"sepalWidth", ",", "petalWidth"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c1", "=", 
     RowBox[{"FindClusters", "[", 
      RowBox[{"subset1", ",", 
       RowBox[{"Method", "->", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subset2", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"sepalLength", ",", "sepalWidth"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2", "=", 
     RowBox[{"FindClusters", "[", 
      RowBox[{"subset2", ",", 
       RowBox[{"Method", "->", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subset3", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"petalLength", ",", "petalWidth"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c3", "=", 
     RowBox[{"FindClusters", "[", 
      RowBox[{"subset3", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Spectral\>\""}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subset4", "=", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"petalLength", ",", "class"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c4", "=", 
     RowBox[{"FindClusters", "[", "subset4", "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.763992572321846*^9, 3.7639926682288*^9}, {
  3.763992741461824*^9, 3.763992937695015*^9}, {3.763993939182761*^9, 
  3.763993940038288*^9}, {3.763994003255328*^9, 3.763994003850746*^9}, {
  3.763994092087641*^9, 3.763994132162019*^9}, {3.763994169385898*^9, 
  3.7639942350498857`*^9}, {3.764674067044373*^9, 
  3.7646740837258387`*^9}},ExpressionUUID->"3862f40b-b280-4e16-b13d-\
85e15448a490"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", "c1", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c2", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c3", "]"}], ",", 
   RowBox[{"ListPlot", "[", "c4", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.763992671825335*^9, 3.763992673479703*^9}, {
  3.763992850808432*^9, 3.763992855225669*^9}, {3.763992919535843*^9, 
  3.763992921547175*^9}, {3.763994136086574*^9, 3.763994138083211*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bbb0f038-255e-4c96-a3d4-442fc0479c5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQE8DrNmgsBJewifA86H0Jxw/tkzIMCBxkfoNwYD
fij/JpTP7QChL8P5qOrZcZi/E2o/L5p6bhzu3YnBR3cPzL8w96SBAR9OPrp9
qO65ieF/iH4uB4g9Dwi4F90/CPfh8i+h+EA3D3t4cqK5hwdn+ON370mM8MRl
PkT+MTx8Uf3LgRH+uPyLnh5g4Q3jAwAvHiYH
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{4., 0.2}, {4.4, 0.4}, {4.1, 0.1}, {4.2, 0.2}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVNFNw1AMdNu0BIq6AzMwQN4MbNBK8Nt5YKby1UVAoApEVEHi3D35XkKf
FEXOO9vns5273f7hcW5m27+nez/1Z57u+3NsXp67c538+4m29eereT10p6bt
uFVhO+5zsG+Sx/luPM9iwL8N9hXxjlsyv+OMeH/n/I6fFfHgr/HBP8bXeEvJ
Vw3836mHx2mLeoFXPZzHR8EH+cEHeOXnfj/0j/2oyBf6gq/qjfrABzb6o3o4
bs177T/wWn/Uu2I+rVfvMY/KV/Wa0nNc39y/qfmMOMzfWeqzFOO3vI9zmPGI
q/2L/hVtf98KH+yfXeQX589SnL9FivsNnWuZ5w3rQX+AV/+4/1bYsX8t9Qbf
//epbcb5raTemvMZ9+fMepQf6tP/V6z3JPOK/+SaemIfpvjGeyNe/aO+ub/j
eud5VX74rvOB+sF/qv+/xD0p8w==
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{2.3, 1.3}, {2.2, 1.5}, {2.3, 1.3}, {2.2, 
        1.5}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9625, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{2., 4.4}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1UsENwjAMjPhQaAq0Ke2bBfiwQGZgBCT4Mg/MBDtBYp8jO2Apii4+X+xL
Dpf7+bpwzh2/K+23HGN0OXx8PlIExk18v1IMfL6KxB/4vGHeyBj1+3jKsRU+
4Vb4wMTvGS/lfuhDj/aOeUHqgdEv4d7gmfHuT39lfrp34vON5IF1fSt59Kf9
8aZ+XfUPP9Cv9Yd0bH82X94H+tY/7Xeo3g/1hKfqP2i94i/m+z2PF77WL3nr
r31Pm4e/et7yP6APvz+ji+J4
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{5.7, 4.4}, {5.2, 4.1}, {5.5, 4.2}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{4.5, 2.3}, {4.9, 2.4}, {5., 2.}, {5., 2.3}, {5.1, 2.5}, {
        4.9, 2.5}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVEkOwjAMrFgLXCG06SLxBj7QN3DijARX3gNvgj9BiceRJ62IVFmut/HY
yeFyP10nWZadv18vw6m756M/K5El6VX3fvUn74K/626/MxHdi74QP6f68XdK
0dcivfxfiv9W6sxF7iVvLv6F+gfdUbxXfLAjPvjtNb+1z7Qe+kU9xg9/toMv
i89T/Yr4ifYgC+rHiZwp38E+TXTuD/ksn7uRepu//KEe+ocOfOCD+bZ2p3jQ
H/yh2/5TPsb2aXi+NeGJ88G+2v1qyb9J9sv270fuy1znzf0hHnh5f5CP8YX4
VvnEfbT76mi/2oQvy79X/oIe7z/4RzzPF3htvZrsTdLf8PxifvQH/MPz22g+
+x4xvvhe8X6znfcH87N8MF98v+P7MDy/gvDH9+0DmKTQ0g==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{6., 2.2}, {6.2, 2.2}, {6.3, 2.3}, {6., 2.2}}]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{7.2, 3.6}, {7.7, 3.8}, {7.9, 3.8}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{4.2437499999999995`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{4.3, 7.9}, {0, 4.4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+xnzQSBk/bo/LNnQOALnM8ABj9wqjcGg99Q
/k24PET8MkH9qPI7MdRD6J849O+E0h/hfIi9n3GYfxPNf5juhfkH3f3o8rjM
h/A/YIQPRPwB1L5/OP2Hyr9JMPzw68flPkR4E4oP9PDEnz52Ekw/MHlYeOLi
o/sHIv8YLfww4w9/eiGcngEXQnYw
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFUsENwjAMjHgjSNKKPwvwYYBkho5QCb7MAzPBLiAQAvGB5Hqu6jbCUmQ5
F5/PdtbtodnNjDGb30n+ck7m4z7bM5hsPsK/wumYrJIY3kbkPQLyvMK94OQH
z1veE99mW0p93NtRPfhr0HoRz4UPdVyxH9z3fBqnHvDcRv3qeVAP8u5dvivq
AV790beQ+tRDfuC1zFPnMyZOfcN9OrW/vr/pfp2qr/+LFZz7G+6/jOt5Tevh
fD9dXKt56Xgl+r7eYRbc
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{3.3, 1.}, {3.5, 1.}, {3.5, 1.}, {3.7, 1.}, {3.3, 1.}, {3., 
        1.1}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQbQwGwg5nz4DAH3sGMBBxgIj/tk8DAxEHCP0PyheD
q4eok0Tji8P5MP0Qcxmg5orCzYPZB5OHUAjzZ80EAWG4PIyP6l4JNPuFMfSj
uw8i/hPqPgk096D7TxjDP+juh/Eh6hD+gamH6QcALnSSOQ==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQESDhCaxWHWTBAQdzh7BgQYHIzBQBwqzuiQBgYI
9RBaDK4eIi8C1ccMpUWh4kxQdWIYfFT9mHx0+2H6YfIw+yDqRDH0w+Rh7oPp
h/kX3T0w/0H46OoR/gEAd4V4EA==
        "]]}, 
      {RGBColor[0.772079, 0.431554, 0.102387], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], 
       PointBox[{{6.6, 2.1}, {6.7, 2.2}, {6.9, 2.3}, {6.7, 2.}, {6.4, 
        2.}}]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+wZwOCDPTr/7BkQ+ALnQ+gfONUbg8FvnPKE
9KPLo/NnzQSBnzj1Q+Q/ornnM07z0P1HyD/o+gnJo9PYw+cfTv+h8wmFH6n6
CZmH3b+fcYYfofAlJE+Ijz3+/xEdHqSmRwAXHOB5
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQffYMCAg5MEAAlEbwZ80EAWE0eQE4Pw0McOtHNx+i
ngunfmMw4EczjwfNPAE0eQE0eXT7Efoh/hHE6V6Ie9DNx+0+CB93+KCHH7r7
IPoF0dQLosmjmy+C030QCuFfiH/40MznxekfiHpC5uOOX3T3Yw9P9PBBV49u
H3p6Q6Qf9PRAiI8e3hCKA6d7AWvyh1E=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQESDhCawyENDETg/FkzQUAcTV4MzjcGA3R5KTgf
QguhqZckoB+3eyDqRdHMF0Pji5Ct/+wZEEC4H+J/aZzmQ9SLoakXJmAeujy6
+xH+h7hXGKd+4uJDAk2/JE796OGFXR49ftDdj+4edPeL4tSP3X7c6RE9/CB8
hHoIjR5f6OahuwchDwD5eZS1
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.763992673784834*^9, {3.76399276806087*^9, 3.763992787282262*^9}, 
   3.763992859006778*^9, {3.763992922589653*^9, 3.7639929411478167`*^9}, 
   3.763994007091297*^9, 3.7639941384537163`*^9, {3.763994205228484*^9, 
   3.763994237318416*^9}, 3.76467400165301*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"30efb74f-95bc-49e2-810c-8de42cf77106"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"geomdata", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
     "sepalLength", ",", "sepalWidth", ",", "petalLength", ",", 
      "petalWidth"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mldata", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"geomdata", "\[Rule]", "class"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.763994594940748*^9, 3.763994770210722*^9}, {
  3.763994816525187*^9, 3.763994818882337*^9}, {3.763994905249887*^9, 
  3.7639949253590384`*^9}, {3.763994964709261*^9, 3.76399497607052*^9}, {
  3.763995911395741*^9, 3.763995912016489*^9}, {3.7639959487089033`*^9, 
  3.763995948868157*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"3fa50c06-8f77-451c-a78f-9a84539acb7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "mldata", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "90"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"90", ";;", "150"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{"training", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<GradientBoostedTrees\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7639949357078733`*^9, 3.763994944968656*^9}, {
  3.763994979787269*^9, 3.763994999810773*^9}, {3.763995926564404*^9, 
  3.763995945199004*^9}, {3.763996081802479*^9, 3.763996083901497*^9}, {
  3.763996169401744*^9, 3.76399620315101*^9}, {3.7639962927207108`*^9, 
  3.7639962986980124`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"08e1afed-b233-4a36-ba80-f85c96e22fce"],

Cell[BoxData["150"], "Output",
 CellChangeTimes->{{3.763994630200466*^9, 3.763994636481986*^9}, {
   3.763994672878401*^9, 3.76399477052827*^9}, 3.763994822783307*^9, {
   3.763994982351242*^9, 3.763995000196327*^9}, {3.763995916039283*^9, 
   3.763995951369611*^9}, 3.763996084259302*^9, {3.76399617622545*^9, 
   3.7639962038299417`*^9}, 3.763996299299633*^9, 3.764674012917898*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"bd67692d-f344-4601-83e4-32c5628a6bd9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["90", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 90, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 90, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.905555555555557, 3.072222222222223, 
                    3.825555555555554, 1.256666666666666}, "Method" -> 
                   "Naive", "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.905555555555557, 3.072222222222223, 
                    3.825555555555554, 1.256666666666666}, 
                   "StandardDeviation" -> {0.8449011922653173, 
                    0.4060727296044323, 1.7812331004179935`, 
                    0.7830212144139034}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5144721564186366, 
                   0.39206578063125774`, -0.7219022293647005}, {
                   0.2794503436639696, 0.9172948964257148, 
                   0.26187817100191574`}, {-0.5820538064934319, 
                   0.03606218107518931, 
                   0.16335119847047994`}, {-0.5643042371297184, 
                   0.05961556630142672, 0.619349158996139}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.905555555555557, 3.072222222222223, 
                    3.825555555555554, 1.256666666666666}, 
                    "StandardDeviation" -> {0.8449011922653173, 
                    0.4060727296044323, 1.7812331004179935`, 
                    0.7830212144139034}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 3, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.007581, "MaxTrainingMemory" -> 88504, 
                  "DataMemory" -> 3192, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{2019, 4, 19, 10, 46, 52.9566`8.476495069070092},
                     "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.905555555555557, 3.072222222222223, 
              3.825555555555554, 1.256666666666666}, 
             "StandardDeviation" -> {0.8449011922653173, 0.4060727296044323, 
              1.7812331004179935`, 0.7830212144139034}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 8415957471436239695]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {2.033333333333333}, 
             "StandardDeviation" -> {0.8359957469322974}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1498057195963834616]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 7357403114269404207]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (2.033333333333333 + 
       0.8359957469322974 #& ), 
      "ProcessorFunction" -> (-2.4322292796281433` + 1.1961783342433492` #& ),
       "Name" -> "value", 
      "Quantiles" -> {-1.236050945384794, 1.1563057231019043`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["Trees" -> {
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8811023831367493}], "LeafValues" -> 
          RawArray["Real32",{-0.04944206401705742, -0.0015949291409924626`, 
            0.03429041802883148, 0.04625220224261284, 0.04625220224261284}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 1, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.5260312557220459, -0.894253134727478}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.04746435582637787, -0.0015311072347685695`, 
            0.03273940086364746, 0.04458156228065491, 
            0.04440213739871979, -0.04746435582637787}], "Children" -> 
          RawArray["Integer16",{{5, 2}, {-2, 3}, {-3, 
            4}, {-4, -5}, {-1, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.28931719064712524`, -1.0397698879241943`, 0.8854591846466064}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.045565780252218246`, 0.004964550957083702, 
            0.03612396866083145, 0.04309666156768799, -0.0016101747751235962`,
             0.042625296860933304`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, 
            5}, {-2, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 3, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.7435548305511475, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.04374315217137337, -0.001580782001838088, 
            0.0301898792386055, 0.04125526174902916, 
            0.040918298065662384`, -0.0014054561033844948`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.28931719064712524`, -1.0397698879241943`, 0.8854591846466064}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.04199342429637909, 0.004647653084248304, 
            0.03315526247024536, 0.03997936099767685, -0.0015516882995143533`,
             0.03928213566541672}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, 
            5}, {-2, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.040313687175512314`, -0.001620798953808844, 
            0.027740463614463806`, 0.03828074410557747, 
            0.03773518279194832, -0.0012871703365817666`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.5260312557220459, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0387011393904686, -0.0015559670282527804`, 
            0.026567941531538963`, 0.03682008385658264, 
            0.03619498014450073, -0.00123568344861269}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.28931719064712524`, -1.0397698879241943`, 0.8854591846466064}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.03715309500694275, 0.004260330926626921, 
            0.029125994071364403`, 0.0357983224093914, -0.001498445519246161, 
            0.034751009196043015`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, 
            5}, {-2, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.035666972398757935`, -0.001587357954122126, 
            0.024426668882369995`, 0.03414205461740494, 
            0.0333954356610775, -0.0011263183550909162`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 3, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.7435548305511475, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.03424029052257538, -0.001523863640613854, 
            0.023361390456557274`, 0.03288855403661728, 
            0.03201180323958397, -0.0010812656255438924`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.28931719064712524`, -1.0397698879241943`, 0.8854591846466064}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.03287068009376526, 0.003923513926565647, 
            0.025559427216649055`, 
            0.03207949921488762, -0.0014447738649323583`, 
            0.03074098937213421}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, 
            5}, {-2, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.03155585378408432, -0.0015482724411413074`, 
            0.021495262160897255`, 0.03046276606619358, 
            0.029554609209299088`, -0.0009802239947021008}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 2, 2, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.1915365755558014, -1.0397698879241943`, 0.5260312557220459}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.030293619260191917`, 0.003696826985105872, 
            0.030240613967180252`, 
            0.024479486048221588`, -0.001389316632412374, 
            0.028405943885445595`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {
            5, -4}, {-2, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.5260312557220459, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02908187359571457, -0.0015663993544876575`, 
            0.019671062007546425`, 0.02824792079627514, 
            0.027229947969317436`, -0.0008854423649609089}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.027918599545955658`, -0.001503743464127183, 
            0.018830006942152977`, 0.02712775208055973, 
            0.02620788663625717, -0.0008500246913172305}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 1, 2, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.28931719064712524`, -1.0397698879241943`, 0.8854591846466064}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.026801856234669685`, 0.0034342098515480757`, 
            0.020331252366304398`, 
            0.026721181347966194`, -0.0013367903884500265`, 
            0.025125524029135704`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {-3, 
            5}, {-2, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 4, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.7577487230300903, 0.5260312557220459, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02572978101670742, -0.0015173486899584532`, 
            0.017258331179618835`, 0.025278015062212944`, 
            0.02407682314515114, -0.0007625520811416209}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.5023277997970581, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0247005894780159, -0.001456654747016728, 
            0.01654990389943123, 0.02422342449426651, 
            0.023193858563899994`, -0.0007320500444620848}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {5, 3}, {-3, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 4, 2, 1, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{-0.6038264036178589, 0.6300382614135742, 
            0.1915365755558014, -0.3024679720401764, 0.5260312557220459}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02371256612241268, 0.002741730771958828, 
            0.02452232502400875, 
            0.018610898405313492`, -0.0015523075126111507`, 
            0.022247856482863426`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {4, 3}, {
            5, -4}, {-2, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 4, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.7577487230300903, 0.5260312557220459, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.022764062508940697`, 
            0.015119768679141998`, -0.0014126347377896309`, 
            0.022506725043058395`, 
            0.021345343440771103`, -0.0006836160901002586}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {-2, 
            4}, {-4, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.021853500977158546`, 
            0.014460253529250622`, -0.0013561294181272388`, 
            0.02158600278198719, 
            0.020576326176524162`, -0.0006562714115716517}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {-2, 
            4}, {-4, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 4, 1, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.7577487230300903, 0.5260312557220459, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.02097936160862446, 
            0.01382968109101057, -0.0013018841855227947`, 
            0.020865047350525856`, 
            0.019664224237203598`, -0.0006300205714069307}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {-2, 
            4}, {-4, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.020140185952186584`, 
            0.02243891730904579, -0.0008370158611796796, 0.008690265007317066,
             0.01928136684000492, 0.01961250975728035}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.01933457888662815, 
            0.012491319328546524`, -0.0012163282372057438`, 
            0.01927168481051922, 
            0.01826466992497444, -0.0005713391583412886}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {-2, 
            4}, {-4, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.018561195582151413`, 
            0.020931227132678032`, -0.0007713937666267157, 0.0076722945086658,
             0.017773771658539772`, 0.018151894211769104`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 4, 2}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, 0.8854591846466064, -0.7935086488723755}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.017818747088313103`, 
            0.011314800009131432`, -0.0011368193663656712`, 
            0.017807183787226677`, 
            0.016895361244678497`, -0.0005176297854632139}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {-2, 
            4}, {-4, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.01710599847137928, 
            0.019535299390554428`, -0.0007109164725989103, 
            0.006748155690729618, 0.016381796449422836`, 
            0.016803361475467682`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, -0.30098605155944824`, 0.9681183099746704}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.016421757638454437`, 
            0.010235986672341824`, -0.0006824798765592277, 
            0.01517027523368597, 0.016798503696918488`, 
            0.015643330290913582`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.015764886513352394`, 
            0.018259860575199127`, -0.0006551806582137942, 
            0.0058812894858419895`, 0.015090889297425747`, 
            0.015580807812511921`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.015134292654693127`, 
            0.01752946525812149, -0.0006289734737947583, 0.005646037869155407,
             0.0144872535020113, 0.014957575127482414`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, -0.30098605155944824`, 0.9681183099746704}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.014528920873999596`, 
            0.008690103888511658, -0.0006038144929334521, 
            0.013263165019452572`, 0.015394707210361958`, 
            0.013834470883011818`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.013947763480246067`, 
            0.016402287408709526`, -0.0005796619225293398, 
            0.004881031811237335, 0.013341011479496956`, 
            0.013881009072065353`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, -0.30098605155944824`, 0.9681183099746704}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.013389852829277515`, 
            0.007826833054423332, -0.0005564754246734083, 0.0121395792812109, 
            0.014456778764724731`, 0.012747451663017273`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.012854259461164474`, 
            0.015359189361333847`, -0.0005342164076864719, 
            0.004183290526270866, 0.012282821349799633`, 
            0.012889474630355835`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.012340089306235313`, 
            0.014744821935892105`, -0.000512847735080868, 
            0.004015958867967129, 0.01179150864481926, 0.01237389538437128}], 
          "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, -0.30098605155944824`, 0.9681183099746704}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.011846485547721386`, 
            0.00657705357298255, -0.0004923338419757783, 
            0.010570851154625416`, 0.013312410563230515`, 
            0.011274579912424088`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.011372625827789307`, 
            0.01382348220795393, -0.0004726405022665858, 
            0.0033997995778918266`, 0.01085139811038971, 
            0.01150174904614687}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 3, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.5023277997970581, -0.6038264036178589, 
            0.6874139308929443, -0.30098605155944824`, 0.9681183099746704}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.010917720384895802`, 
            0.005888486281037331, -0.00045373488683253527`, 
            0.00965312123298645, 0.012532148510217667`, 0.0103895403444767}], 
          "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {-2, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, 0.4067094922065735, 0.11919642984867096`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.010481012053787708`, 
            0.006013126578181982, -0.0005814289906993508, 
            0.010755089111626148`, -0.0028969156555831432`, 
            0.002934735734015703}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.010061771608889103`, 
            0.012720435857772827`, -0.00042385482811369, 
            0.0025404510088264942`, 0.009553192183375359, 
            0.010268374346196651`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, 9.999999682655225*^-21, 
            0.8558365702629089}], "LeafValues" -> 
          RawArray["Real32",{-0.009659300558269024, 0.0053801266476511955`, 
            0.0011831782758235931`, 
            0.012072427198290825`, -0.001827166066505015, 
            0.009040409699082375}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 
            5}, {-3, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 3, 4}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, 0.4067094922065735, 0.11919642984867096`}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.009272929280996323, 
            0.005164921283721924, -0.0005607569473795593, 
            0.009574404917657375, -0.0027079370338469744`, 
            0.002763469237834215}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.1915365755558014, 9.999999682655225*^-21, 0.7996957302093506}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.008902011439204216, 0.011109343729913235`, 
            0.0011202902533113956`, 
            0.005727652460336685, -0.0017160873394459486`, 
            0.008043495938181877}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {
            5, -4}, {-3, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, -0.3024679720401764, 0.8558365702629089}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.008545931428670883, 0.0045447032898664474`, 
            0.00171322887763381, 
            0.010831326246261597`, -0.0012099515879526734`, 
            0.008015247993171215}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 
            5}, {-3, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5023277997970581, -0.6038264036178589, -0.30098605155944824`, 
            0.8558365702629089, 0.40767425298690796`}], "LeafValues" -> 
          RawArray["Real32",{-0.00820409320294857, 
            0.01117525715380907, -0.0003646703262347728, 0.001278021722100675,
             0.007837055251002312, 0.008335405960679054}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, -3}, {5, 
            4}, {-4, -5}, {-2, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 2, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, -0.30098605155944824`, 0.2382868528366089}],
           "LeafValues" -> 
          RawArray["Real32",{-0.007875930517911911, 
            0.004029016476124525, -0.000596179103013128, 
            0.008242842741310596, -0.002009468385949731, 
            0.0028310497291386127`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.1915365755558014, 0.7996957302093506, 0.4067094922065735}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.00756089249625802, 0.009812717325985432, 
            0.0005588337662629783, 0.004613756202161312, 
            0.006738648749887943, -0.002452319487929344}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {
            4, -4}, {-2, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 1, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.28931719064712524`, -0.3024679720401764, 0.8558365702629089}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0072584571316838264`, 0.003505055094137788, 
            0.0016131034353747964`, 
            0.0095367431640625, -0.0011259950697422028`, 
            0.006815242115408182}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 4}, {-2, 
            5}, {-3, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{3, 3, 2, 1, 3}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{
            0.5751321315765381, -0.6038264036178589, -0.30098605155944824`, 
            0.8811023831367493, 0.294427752494812}], "LeafValues" -> 
          RawArray["Real32",{-0.006968118716031313, 
            0.008316358551383018, -0.0005496478988789022, \
-0.0032654416281729937`, 0.004807175602763891, 0.0042421347461640835`}], 
          "Children" -> 
          RawArray["Integer16",{{2, 4}, {-1, 3}, {
            5, -4}, {-2, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]], 
        MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{4, 3, 2, 3, 1}], 
          "NumericalThresholds" -> 
          RawArray["Real32",{0.6300382614135742, -0.6038264036178589, 
            0.1915365755558014, 0.7996957302093506, 9.999999682655225*^-21}], 
          "LeafValues" -> 
          RawArray["Real32",{-0.0066893938928842545`, 0.008865260519087315, 
            0.0010168368462473154`, 0.003934865817427635, 
            0.005956027656793594, -0.0015285842819139361`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {-1, 5}, {
            4, -4}, {-2, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0]]}, 
      "ClassNumber" -> 1, "IterationsNumber" -> 50, "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["DensifyNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3772424293826570758, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], 
      "DistributionData" -> {NormalDistribution, {0.18309870798952083`}}, 
      "Method" -> "GradientBoostedTrees", "Options" -> 
      Association[
       "BoostingMethod" -> 
        Association["Value" -> "Gradient", "Options" -> Association[]], 
        MaxTrainingRounds -> 
        Association["Value" -> 50, "Options" -> Association[]], 
        "LeavesNumber" -> 
        Association["Value" -> 6, "Options" -> Association[]], "LearningRate" -> 
        Association["Value" -> 0.04, "Options" -> Association[]], 
        ValidationSet -> 
        Association["Value" -> Automatic, "Options" -> Association[]], 
        "MaxBinNumber" -> 
        Association["Value" -> 255, "Options" -> Association[]], 
        "ThreadNumber" -> 
        Association["Value" -> 4, "Options" -> Association[]], "MaxDepth" -> 
        Association["Value" -> 6, "Options" -> Association[]], "LeafSize" -> 
        Association["Value" -> 7, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "BaggingFrequency" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "MinGainToSplit" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], "LossFunction" -> 
        Association[
         "Value" -> "MeanSquaredError", "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[1.3311224126736385`, 2.041351630637779], 
         "StandardDeviation" -> 
         PlusMinus[0.42921574915132465`, 0.0879963650832127], 
         "EvaluationTime" -> 0.00016955555555555555`, "TestSize" -> 36, 
         "TrainingSize" -> 72, "TrainingTime" -> 0.038203999999999995`, 
         "TrainingMemory" -> 423632., "ModelMemory" -> 110981.33333333333`, 
         "ExperimentCount" -> 2, "ModelUtility" -> 0.9667136419452744, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[4.082373436686813, 2.5617239232491738`], 
           PlusMinus[0.6747209465321815, 1.2512727499562974`]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[0.4609632916700012, 0.10484188598984806`], 
           PlusMinus[0.38598204333529257`, 0.12234634497970961`]}, 
         "Configuration" -> {
          "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
           MaxTrainingRounds -> 50, "LeavesNumber" -> 6, "LearningRate" -> 
           0.04, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
           "ThreadNumber" -> 4, "MaxDepth" -> 6, "LeafSize" -> 7, 
           "FeatureFraction" -> 1, "BaggingFraction" -> 1, "BaggingFrequency" -> 
           0, "MinGainToSplit" -> 0, "L1Regularization" -> 0, 
           "L2Regularization" -> 0, "LossFunction" -> "MeanSquaredError"}, 
         "FinalTrainingSize" -> 90], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Vector[TypeSystem`AnyType, 2], 
          TypeSystem`Vector[TypeSystem`AnyType, 17], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 169926253235360]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 500], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 4.356250000000001*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.016168250000000002`, 
              "TrainingMemory" -> 92276., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348551610307, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.7369596860802126, 0.34608218182304035`], 
              "StandardDeviation" -> 
              PlusMinus[0.5324768796321306, 0.1277185300855003], 
              "EvaluationTime" -> 0.0001576111111111111, "TestSize" -> 18, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.077058, 
              "TrainingMemory" -> 387536, "ModelMemory" -> 109776, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.7740614039093613, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7369596860802126, 0.24471705761490753`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5324768796321306, 0.09031063870663535]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001576111111111111, "ModelMemory" -> 
             109776, "StandardDeviation" -> 
             PlusMinus[0.5324768796321306, 0.1277185300855003], 
             "TrainingMemory" -> 387536, "TrainingTime" -> 0.08552045], 
           "Index" -> 1], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 250], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 3], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.822175067141729, 2030.2249410883458`], 
              "StandardDeviation" -> 
              PlusMinus[0.4278382816019123, 0.11179954389167643`], 
              "EvaluationTime" -> 0.000042903125, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03510275, 
              "TrainingMemory" -> 406608., "ModelMemory" -> 109776., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.9594490975638126, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.762075311160373, 3.2970230312430404`], 
                PlusMinus[7039.665280622657, 1811.099179929696], 
                PlusMinus[3626.060901540847, 1033.8824253448581`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.30176082631334855`, 0.05065258755811248], 
                PlusMinus[0.6681174443463319, 0.08293784450789767], 
                PlusMinus[0.49028769859513555`, 0.06629544038178596]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[50.130487772334256`, 1941.3536556002068`], 
              "StandardDeviation" -> 
              PlusMinus[0.4390086617703217, 0.10034128991609524`], 
              "EvaluationTime" -> 0.0001636296296296296, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.061509666666666664`, 
              "TrainingMemory" -> 501826.6666666666, "ModelMemory" -> 113600.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.9408927520040427, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[3929.811315180024, 2148.110179216424], 
                PlusMinus[48.25353391145685, 47.24820916929998]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.4856943686128897, 0.11301082336542995`], 
                PlusMinus[0.37862756426255684`, 0.1285223243075754]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001636296296296296, "ModelMemory" -> 
             113600., "StandardDeviation" -> 
             PlusMinus[0.4390086617703217, 0.10034128991609524`], 
             "TrainingMemory" -> 501826.6666666666, "TrainingTime" -> 
             0.09046145], "Index" -> 2], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 6], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.6343750000000002`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010433999999999999`, 
              "TrainingMemory" -> 59718., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348555323884, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3311224126736385`, 2.041351630637779], 
              "StandardDeviation" -> 
              PlusMinus[0.42921574915132465`, 0.0879963650832127], 
              "EvaluationTime" -> 0.00016955555555555555`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.038203999999999995`, 
              "TrainingMemory" -> 423632., "ModelMemory" -> 
              110981.33333333333`, "ExperimentCount" -> 2, "ModelUtility" -> 
              0.9667136419452744, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.082373436686813, 2.5617239232491738`], 
                PlusMinus[0.6747209465321815, 1.2512727499562974`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.4609632916700012, 0.10484188598984806`], 
                PlusMinus[0.38598204333529257`, 0.12234634497970961`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00016955555555555555`, "ModelMemory" -> 
             110981.33333333333`, "StandardDeviation" -> 
             PlusMinus[0.42921574915132465`, 0.0879963650832127], 
             "TrainingMemory" -> 423632., "TrainingTime" -> 
             0.04481759999999999], "Index" -> 3], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 4.040625*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0107505, 
              "TrainingMemory" -> 59852., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348553233993, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2211891056147994`, 0.1266089905010066], 
              "StandardDeviation" -> 
              PlusMinus[0.829675304628932, 0.0991521919706724], 
              "EvaluationTime" -> 9.833333333333333*^-6, "TestSize" -> 18, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010175, 
              "TrainingMemory" -> 63720, "ModelMemory" -> 20528, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.5084643715343629, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2211891056147994`, 0.08952607574244495]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.829675304628932, 0.0701111873119728]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 9.833333333333333*^-6, "ModelMemory" -> 20528,
              "StandardDeviation" -> 
             PlusMinus[0.829675304628932, 0.0991521919706724], 
             "TrainingMemory" -> 63720, "TrainingTime" -> 
             0.019908000000000002`], "Index" -> 4], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.02], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.6281250000000005`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010395749999999999`, 
              "TrainingMemory" -> 60108., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348555356036, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5679237667133666, 0.13447168567970622`], 
              "StandardDeviation" -> 
              PlusMinus[0.4726652563445859, 0.06165433335047076], 
              "EvaluationTime" -> 0.00015694444444444444`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.034473000000000004`, 
              "TrainingMemory" -> 398544., "ModelMemory" -> 109776., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.8906095899097627, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6016374145071852, 0.148791891823086], 
                PlusMinus[0.49415699365719684`, 0.2200932815611885]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.48028789814142475`, 0.08017684724321777], 
                PlusMinus[0.4621988879644458, 0.09394944673959686]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015694444444444444`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.4726652563445859, 0.06165433335047076], 
             "TrainingMemory" -> 398544., "TrainingTime" -> 
             0.041421450000000005`], "Index" -> 5], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 3], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.85625*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010362999999999999`, 
              "TrainingMemory" -> 59294., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348554182482, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6390090251726342, 0.11734879189737425`], 
              "StandardDeviation" -> 
              PlusMinus[0.5180610493909737, 0.06175104020936429], 
              "EvaluationTime" -> 0.0001660925925925926, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.031759333333333334`, 
              "TrainingMemory" -> 378917.3333333333, "ModelMemory" -> 109776.,
               "ExperimentCount" -> 2, "ModelUtility" -> 0.8143533686766526, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7369596860802126, 0.24471705761490753`], 
                PlusMinus[0.6187209846397693, 0.11137317710509154`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5324768796321306, 0.09031063870663535], 
                PlusMinus[0.5064215612803469, 0.08114953293553732]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001660925925925926, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.5180610493909737, 0.06175104020936429], 
             "TrainingMemory" -> 378917.3333333333, "TrainingTime" -> 
             0.0389464], "Index" -> 6], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 25], "LearningRate" -> 
             Association["Value" -> 0.04], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 35], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.546875*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0103375, 
              "TrainingMemory" -> 59278., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348555774014, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6544409799993487, 0.05446858498867473], 
              "StandardDeviation" -> 
              PlusMinus[0.5206781943133758, 0.05092251823743395], 
              "EvaluationTime" -> 0.00015625925925925923`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.03142866666666667, 
              "TrainingMemory" -> 376336., "ModelMemory" -> 109776., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.8136608584122705, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.681321036176649, 0.07698075831357905], 
                PlusMinus[0.6355778960104176, 0.06448718924817633]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.5285472929430467, 0.06986959453731333], 
                PlusMinus[0.5122363402985696, 0.07236767957255782]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00015625925925925923`, "ModelMemory" -> 
             109776., "StandardDeviation" -> 
             PlusMinus[0.5206781943133758, 0.05092251823743395], 
             "TrainingMemory" -> 376336., "TrainingTime" -> 0.0386233], 
           "Index" -> 7], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 110], "LearningRate" -> 
             Association["Value" -> 0.2], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 15], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.7093750000000004`*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.019415250000000002`, 
              "TrainingMemory" -> 155732., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348554938057, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[3.5886215839898545`, 2.5846220538587287`*^8], 
              "StandardDeviation" -> 
              PlusMinus[0.43725475102827627`, 0.10174161624480696`], 
              "EvaluationTime" -> 0.0001609444444444444, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.036089333333333334`, 
              "TrainingMemory" -> 406906.6666666666, "ModelMemory" -> 
              109978.66666666666`, "ExperimentCount" -> 2, "ModelUtility" -> 
              0.9439232780225034, "MeanCrossEntropyHistory" -> {
                PlusMinus[5.1692441436036706`*^8, 2.823020844417781*^8], 
                PlusMinus[3.5886214419310885`, 4.6798785571491885`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.48719297586631616`, 0.11323826732788811`], 
                PlusMinus[0.37416444080569544`, 0.12727936408618085`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0001609444444444444, "ModelMemory" -> 
             109978.66666666666`, "StandardDeviation" -> 
             PlusMinus[0.43725475102827627`, 0.10174161624480696`], 
             "TrainingMemory" -> 406906.6666666666, "TrainingTime" -> 
             0.05189565], "Index" -> 8], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 13], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.525*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.010197, 
              "TrainingMemory" -> 59534., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348555886548, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2211891056147994`, 0.1266089905010066], 
              "StandardDeviation" -> 
              PlusMinus[0.829675304628932, 0.0991521919706724], 
              "EvaluationTime" -> 9.833333333333333*^-6, "TestSize" -> 18, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010152, 
              "TrainingMemory" -> 64752, "ModelMemory" -> 20528, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.5084643715343629, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2211891056147994`, 0.08952607574244495]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.829675304628932, 0.0701111873119728]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 9.833333333333333*^-6, "ModelMemory" -> 20528,
              "StandardDeviation" -> 
             PlusMinus[0.829675304628932, 0.0991521919706724], 
             "TrainingMemory" -> 64752, "TrainingTime" -> 
             0.019333799999999998`], "Index" -> 9], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.1], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 7], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.304011912839187, 0.01666931250704176], 
              "StandardDeviation" -> 
              PlusMinus[0.8360063633323097, 0.018200493740869402`], 
              "EvaluationTime" -> 3.8375*^-6, "TestSize" -> 240, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.01045025, 
              "TrainingMemory" -> 59726., "ModelMemory" -> 20528., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5144348554278938, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`], 
                PlusMinus[1.296590377714488, 0.025650184931032646`], 
                PlusMinus[1.2935183931282679`, 0.026018664182046673`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089], 
                PlusMinus[0.8378940241247439, 0.031021410973769436`], 
                PlusMinus[0.838863762433519, 0.031054205933600292`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.420538431991368, 1961.736959395187], 
              "StandardDeviation" -> 
              PlusMinus[0.43421376589971566`, 0.10340325994731574`], 
              "EvaluationTime" -> 0.00016025925925925924`, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.040546, 
              "TrainingMemory" -> 435232., "ModelMemory" -> 
              111434.66666666666`, "ExperimentCount" -> 2, "ModelUtility" -> 
              0.949543803098358, "MeanCrossEntropyHistory" -> {
                PlusMinus[3929.811315119249, 2148.110179183228], 
                PlusMinus[6.368559161007962, 7.818813637445951]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.48569436861289017`, 0.11301082336542981`], 
                PlusMinus[0.3675845110394351, 0.12856735398845356`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00016025925925925924`, "ModelMemory" -> 
             111434.66666666666`, "StandardDeviation" -> 
             PlusMinus[0.43421376589971566`, 0.10340325994731574`], 
             "TrainingMemory" -> 435232., "TrainingTime" -> 0.04694165], 
           "Index" -> 10], 
         Association[
          "Value" -> "GradientBoostedTrees", "Options" -> 
           Association[
            "BoostingMethod" -> Association["Value" -> "Gradient"], 
             MaxTrainingRounds -> Association["Value" -> 50], "LeavesNumber" -> 
             Association["Value" -> 60], "LearningRate" -> 
             Association["Value" -> 0.004], ValidationSet -> 
             Association["Value" -> Automatic], "MaxBinNumber" -> 
             Association["Value" -> 255], "ThreadNumber" -> 
             Association["Value" -> 4], "MaxDepth" -> 
             Association["Value" -> 6], "LeafSize" -> 
             Association["Value" -> 90], "FeatureFraction" -> 
             Association["Value" -> 1], "BaggingFraction" -> 
             Association["Value" -> 1], "BaggingFrequency" -> 
             Association["Value" -> 0], "MinGainToSplit" -> 
             Association["Value" -> 0], "L1Regularization" -> 
             Association["Value" -> 0], "L2Regularization" -> 
             Association["Value" -> 0], "LossFunction" -> 
             Association["Value" -> "MeanSquaredError"]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3194132637794564`, 0.033914288544667145`], 
              "StandardDeviation" -> 
              PlusMinus[0.8310741734904405, 0.0447560554135879], 
              "EvaluationTime" -> 3.6000000000000003`*^-6, "TestSize" -> 80, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.008886, 
              "TrainingMemory" -> 59312, "ModelMemory" -> 20528, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.5142028019224513, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3194132637794564`, 0.023981023409051387`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8310741734904405, 0.0316473102821089]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.2211891056147994`, 0.06330449525050333], 
              "StandardDeviation" -> 
              PlusMinus[0.829675304628932, 0.0495760959853362], 
              "EvaluationTime" -> 9.703703703703702*^-6, "TestSize" -> 36, 
              "TrainingSize" -> 72, "TrainingTime" -> 0.010154333333333331`, 
              "TrainingMemory" -> 64037.33333333333, "ModelMemory" -> 20528., 
              "ExperimentCount" -> 2, "ModelUtility" -> 0.514469126960473, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.2211891056147994`, 0.08952607574244495], 
                PlusMinus[1.2211891056148, 0.08952607574244502]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.829675304628932, 0.0701111873119728], 
                PlusMinus[0.829675304628932, 0.0701111873119728]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 9.703703703703702*^-6, "ModelMemory" -> 
             20528., "StandardDeviation" -> 
             PlusMinus[0.829675304628932, 0.0495760959853362], 
             "TrainingMemory" -> 64037.33333333333, "TrainingTime" -> 
             0.018024899999999996`], "Index" -> 11]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["GradientBoostedTrees"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 11], 
        Association["ID" -> 169921958268064]], "MaxTrainingSize" -> 90, 
      "LastReportingTime" -> 3.764659615081734`16.328300704364803*^9, 
      "PreprocessorEvaluationTime" -> 4.45947265625`3.*^-6, 
      "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.7999999999999999, 
          "ElapsedTimes" -> 0.9042309999999999, "ExperimentCounts" -> 31], 
         Association[
         "TrainingSizes" -> 72, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          0.9747319999999999, "ExperimentCounts" -> 19]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[169930548202656]], "ID" -> 
         169934843169952]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{5.9, 3.2, 4.8, 1.8}}, "ID" -> 1638824798713428667]], 
        
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.638598, "MaxTrainingMemory" -> 4285176, 
      "DataMemory" -> 19488, "FunctionMemory" -> 369984, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2019, 4, 19, 10, 46, 55.542144`8.49719761423604}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.763994630200466*^9, 3.763994636481986*^9}, {
   3.763994672878401*^9, 3.76399477052827*^9}, 3.763994822783307*^9, {
   3.763994982351242*^9, 3.763995000196327*^9}, {3.763995916039283*^9, 
   3.763995951369611*^9}, 3.763996084259302*^9, {3.76399617622545*^9, 
   3.7639962038299417`*^9}, 3.763996299299633*^9, 3.764674015592849*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e32ceb78-3421-42ec-a9ba-73db4f8f14e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pm1", "=", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"p", ",", "validation"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pm1", "[", "\"\<ComparisonPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"PredictorMeasurements", "[", 
  RowBox[{"p", ",", "validation", ",", " ", "\"\<StandardDeviation\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.76399479857661*^9, {3.7639960383992558`*^9, 3.763996064389244*^9}, {
   3.763996107382895*^9, 3.763996107675482*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"dd89c216-b16e-4964-b6c0-decfc22faafd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         GeometricTransformationBox[
          InsetBox[
           GraphicsBox[{
             Directive[
              PointSize[0.011000000000000001`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             AbsoluteThickness[1.], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CircleBox[{0, 0}, 
              Offset[{1.8, 1.8}, {0., 0.}]]}], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCwBWJGIGYC4gtXn/+KcGRwYIAABw+2/x/3qX6yh3A/2Df8
m/rp3Do2qDyHA7r6Y6dOCN/ajZD/NSV8ba0oK5yPbh46n5D9pPIvbjt2SmY/
wj0G86rP5wvgNv+OyzyxY0LscPXyU25K+hog1De6rjwc8AFh3maPn+bTv/23
x2Ueun50ebXZLNtuv0foj4oN0tLXYoCbX8L54jC/OMI9hPyL7j50+c4GnRcr
ORHuQY9PdPXo7iHk/gi3/DNcPxH8b0xCdc9/I/jo8Stqb290/i9MHtN89PC9
feaAbhgf8eGxhCPonPlDhPkVy9n8Jx9FmBfctmf50QcIfnuWXcRKRtzpdcHu
4iU97Aj3o/tn2XnLhu7/iPB0+PK2wu8twnz88Y1pHjpfXOvcnL1TcMfX5V8n
UrL9EeoBVWwWfA==
          "]]}, {}}, {
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.835355658724268, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.835355658724268`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.835355658724268, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8417245431568032`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8417245431568032`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8417245431568032`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.6354936163285148`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.6354936163285148`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.6354936163285148`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8433166353123416`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8433166353123416`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8433166353123416`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0080257615661807`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0080257615661807`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0080257615661807`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8841668860483036`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8841668860483036`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8841668860483036`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.023584558441612, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.023584558441612`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.023584558441612, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8673415456802904`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8673415456802904`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8673415456802904`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9977028070903031`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9977028070903031`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9977028070903031`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.023584558441612, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.023584558441612`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.023584558441612, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9960591421201541`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9960591421201541`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9960591421201541`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.020597773207254, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.020597773207254`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.020597773207254, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.886260538595872, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.886260538595872`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.886260538595872, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8673415456802904`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8673415456802904`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8673415456802904`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.004718602998825, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.004718602998825`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.004718602998825, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.835355658724268, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.835355658724268`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.835355658724268, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.020597773207254, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.020597773207254`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.020597773207254, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9960591421201541`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9960591421201541`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9960591421201541`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9983013139466461`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9983013139466461`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9983013139466461`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9990000652907702`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9990000652907702`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9990000652907702`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9994651758933675`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9994651758933675`", ",", "3.`"}], "}"}]], 
         Annotation[#, {1.9994651758933675`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9977028070903031`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9977028070903031`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9977028070903031`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8820003103697736`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8820003103697736`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8820003103697736`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.992484861315952, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.992484861315952`", ",", "3.`"}], "}"}]], 
         Annotation[#, {1.992484861315952, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9857361876442763`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9857361876442763`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9857361876442763`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9923759987072074`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9923759987072074`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9923759987072074`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.625811280636586, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.625811280636586`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.625811280636586, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0036862228220826`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0036862228220826`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0036862228220826`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.8747777955668026`, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.8747777955668026`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.8747777955668026`, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9954361652192034`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9954361652192034`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9954361652192034`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.9960591421201541`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.9960591421201541`", ",", "2.`"}], "}"}]], 
         Annotation[#, {1.9960591421201541`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.020597773207254, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.020597773207254`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.020597773207254, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.0319079973221292`, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.0319079973221292`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.0319079973221292`, 2.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.822627282182349, 3.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.822627282182349`", ",", "3.`"}], "}"}]], 
         Annotation[#, {2.822627282182349, 3.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{1.1342153027511745`, 1.}]}}, 
          RowBox[{"{", 
            RowBox[{"1.1342153027511745`", ",", "1.`"}], "}"}]], 
         Annotation[#, {1.1342153027511745`, 1.}, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Opacity[0.], {
            PointBox[{2.038779055961052, 2.}]}}, 
          RowBox[{"{", 
            RowBox[{"2.038779055961052`", ",", "2.`"}], "}"}]], 
         Annotation[#, {2.038779055961052, 2.}, 
          "Tooltip"]& ]}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           GrayLevel[0.2], 
           Opacity[0.5], 
           AbsoluteThickness[1.], 
           AbsoluteDashing[{2, 4}]], 
          LineBox[CompressedData["
1:eJxFxWlIkwEYAODPOZ1MQ+kgNI9ZBstYGpXpaiaREZXlZjZYw8KlUTHUdugK
TSV/zSMEmzqlYuo0RZsLMmaWOuaUaTKVhRWlVKzMuTSPucPqh+/74+GJzMzh
ZJEIgkj55//yiuWvJtOvE5sfH6qJ5JpxGxGXMWPBOWKpZXkWD7myOhzuwFvp
js7cvfOwftBVsL0Idzm8t/BjbHBHWFdAX9cCXPRAXZkmt8Pfy+LnTh77Ddtm
Fdpd67hBlUeO71iEWW+D+1nCJVhiJXH6ov/AheLs26Uf8Ch+rT1GuQw3qE95
aBdW4EnPwS/lbrxdM8+Y1a3CacY95HvCNbieST/tZjjgpz1C/vpPXFbPcDKV
67DdovPJ4jnheJm+1hzggiOkSsW+MdxQpL3llLvhxLlkQxDLA6drWyoC3Tjr
c8kn9vMNWOT/rpgSSyRtvjNdb+RV4arxlcmLVtwjC1K8OuMFM9vODl5T4xnU
AW3bBs6uo/FuXCXBDF6v3tCD/3hSUCcI8obFO0KjJDm4Vee6Qzfi+x/q81Pp
ZJj7aDgppBQX7F4QRU7jiR+d/MYEH5hkTKbqqvGaGakwZQn3KzEywzi+8HUO
11T5DK9ij26TUCmwqrQ4wi3AFQmXagZ0OC88sN8V4gf7HqFo3otwopuWnyXB
nQeYrEUpbqcLh/3v4tOhEzOJxXgn+fHW5nL88mScOK8ZT2WnMj0t+Lmxm4S8
FU8yNpQ3tePRvaRmiwb3qMamWH34Gs2qHHmDLzV6ZXL7cavisC1Xj5vl9b5N
I7jJ74Up1oQPlY1Wvx7Fe+8TEZZx/KUr+JvAjHfLDrXbJ/COlfN5hVO4WpR9
lGrB/wLvQ0YX
           "]]}, 
         Annotation[#, "Charting`Private`Tag$50178#1"]& ]}}, {}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0.911025, 0.911025}, 
     PlotRange -> {{0.9, 3.105}, {0.9, 3.105}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, Axes -> {False, False},
      AxesLabel -> {None, None}, AxesOrigin -> {0.911025, 0.911025}, 
     DisplayFunction :> Identity, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{
        FormBox["\"actual value\"", TraditionalForm], None}, {
        FormBox["\"predicted value\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0.9, 3.105}, {0.9, 3.105}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"predictions\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.198], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{
                    GraphicsBox[{
                    AbsoluteThickness[1.], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CircleBox[{0, 0}, 
                    Offset[{1.8, 1.8}, {0., 0.}]]}], ",", "Automatic"}], 
                    "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"perfect predictions\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    GrayLevel[0.2], 
                    Opacity[0.5], 
                    AbsoluteThickness[1.], 
                    AbsoluteDashing[{2, 4}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.13333333333333336`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.2`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.2], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteDashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.763994800442896*^9, 3.763994824705349*^9}, {
   3.763994987838048*^9, 3.7639950050462103`*^9}, {3.763995920847015*^9, 
   3.76399595716881*^9}, {3.763996044705618*^9, 3.763996108532799*^9}, 
   3.76399618182275*^9, 3.763996236643734*^9, 3.7639963036046886`*^9, 
   3.764674017697949*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a7aba6bf-81bb-4b02-b0e3-5987f79d4d78"],

Cell[BoxData["0.2806554012521905`"], "Output",
 CellChangeTimes->{{3.763994800442896*^9, 3.763994824705349*^9}, {
   3.763994987838048*^9, 3.7639950050462103`*^9}, {3.763995920847015*^9, 
   3.76399595716881*^9}, {3.763996044705618*^9, 3.763996108532799*^9}, 
   3.76399618182275*^9, 3.763996236643734*^9, 3.7639963036046886`*^9, 
   3.764674017940207*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"bcc47eb3-924b-4a1c-810e-fc3372f8b2f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cf", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"mldata", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<DecisionTree\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.76399630607793*^9, 3.763996337700274*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"6c974c7e-9e6d-4d45-9248-a7adcb78a2b5"],

Cell[CellGroupData[{

Cell[BoxData["cf"], "Input",
 CellChangeTimes->{{3.76399636550454*^9, 3.763996365700482*^9}},
 CellLabel->
  "In[481]:=",ExpressionUUID->"960f54ee-eb20-4a5e-beab-35bcbb863e9f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["150", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 150, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 150, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, "Method" -> "Naive", "VectorLength" -> 
                   4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, 
                   "StandardDeviation" -> {0.8253012917851231, 
                    0.4321465800705415, 1.758529183405524, 
                    0.7606126185881729}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5223716204076705, 
                   0.37231836334997126`, -0.7210168090620369}, {
                   0.2633549153139372, 0.9255564941472941, 
                   0.24203287721394565`}, {-0.5812540055976437, 
                   0.02109477684124081, 
                   0.14089225848755418`}, {-0.5656110498826449, 
                   0.06541576907892117, 0.6338014033558252}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
                    1.1986666666666668`}, 
                    "StandardDeviation" -> {0.8253012917851231, 
                    0.4321465800705415, 1.758529183405524, 
                    0.7606126185881729}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 3, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.007817, "MaxTrainingMemory" -> 66792, 
                  "DataMemory" -> 5240, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2019, 4, 11, 14, 32, 18.682259`8.024004372842452}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.843333333333336, 3.054, 3.7586666666666666`, 
              1.1986666666666668`}, 
             "StandardDeviation" -> {0.8253012917851231, 0.4321465800705415, 
              1.758529183405524, 0.7606126185881729}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 6654647874488532094]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[1 -> 1, 2 -> 2, 3 -> 3]}, "MissingCode" -> 0, 
             "Version" -> {11.3, 0}, "ID" -> 3093787484439440027, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 8486076504316548574]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       1 -> 0.33333333333333337`, 2 -> 0.33333333333333337`, 3 -> 
        0.33333333333333337`]], "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> Automatic, 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association["Tree" -> MachineLearning`DecisionTree[
        Association[
        "FeatureIndices" -> RawArray["Integer16",{2, 3, 3, 4, 4, 4}], 
         "NumericalThresholds" -> 
         RawArray["Real32",{-0.1249575987458229, 0.5921615362167358, 
           0.7058929204940796, -0.7870848178863525, 0.5276448726654053, 
           0.6591178178787231}], "NominalSplits" -> {}, "Children" -> 
         RawArray["Integer16",{{-4, -5}, {5, 6}, {-6, -7}, {-1, 2}, {-2, 1}, {
           3, -3}}], "LeafValues" -> 
         RawArray["UnsignedInteger8",{{51, 1, 1}, {1, 46, 1}, {1, 1, 44}, {1, 
           1, 4}, {1, 2, 1}, {1, 4, 2}, {1, 2, 4}}], "RootIndex" -> 4, 
         "NominalDimension" -> 0]], "Processor" -> 
      MachineLearning`MLProcessor["Values", 
        Association[
        "Info" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
      "DecisionTree", "Options" -> 
      Association[
       "DistributionSmoothing" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.16455699329441234`, 0.03451721407331369], "Accuracy" -> 
         PlusMinus[0.9310006242901019, 0.014257954995387404`], 
         "EvaluationTime" -> 0.000011397101449275361`, "TestSize" -> 660, 
         "TrainingSize" -> 120, "TrainingTime" -> 0.005915869565217391, 
         "TrainingMemory" -> 81901.91304347826, "ModelMemory" -> 5480., 
         "ExperimentCount" -> 22, "ModelUtility" -> 2.5192027144753606`, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[0.40285835089120975`, 0.16525007306542217`], 
           PlusMinus[0.14927562268082106`, 0.05175890795999629], 
           PlusMinus[0.2211441089024448, 0.11833770318041224`], 
           PlusMinus[0.5055173719657572, 0.20385993955782752`], 
           PlusMinus[0.2848834800597358, 0.12840989390776908`], 
           PlusMinus[0.23668552391985354`, 0.11839250756514179`], 
           PlusMinus[0.22156587405597036`, 0.06125382211169948], 
           PlusMinus[0.6711685272501782, 0.24363557002580769`], 
           PlusMinus[0.1363473034980158, 0.03714301823835254], 
           PlusMinus[0.2038600434316414, 0.11791365233240958`], 
           PlusMinus[0.23589262119376228`, 0.1166757759026358], 
           PlusMinus[0.17720892526651955`, 0.06288966871102324], 
           PlusMinus[0.2291400730169245, 0.1209823715153176], 
           PlusMinus[0.27993342881110317`, 0.12884222550073027`], 
           PlusMinus[0.3854940995897119, 0.16792520600656605`], 
           PlusMinus[0.5571546386717945, 0.22371419700636358`], 
           PlusMinus[0.13079299518512974`, 0.04838648910088515], 
           PlusMinus[0.3045633145874037, 0.12750224379517536`], 
           PlusMinus[0.20755235905049327`, 0.11860379765925577`], 
           PlusMinus[0.2198182460445978, 0.11966733217653887`], 
           PlusMinus[0.10228570792113902`, 0.028646123696700228`], 
           PlusMinus[0.23996953385088018`, 0.11732103799823423`]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.8817204301075263, 0.0635844392535679], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.8494623655913973, 0.06906714064924106], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.8172043010752682, 0.07369141435942854], 
           PlusMinus[0.9784946236559133, 0.03818779506247919], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.8817204301075263, 0.0635844392535679], 
           PlusMinus[0.8494623655913973, 0.06906714064924106], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9139784946236553, 0.05699611867029939], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9462365591397844, 0.048856931978242334`], 
           PlusMinus[0.9784946236559133, 0.03818779506247919], 
           PlusMinus[0.9139784946236553, 0.05699611867029939]}, 
         "Configuration" -> {
          "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
           1}, "FinalTrainingSize" -> 150], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 22], 
          TypeSystem`Vector[TypeSystem`AnyType, 22], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 220555327042932]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.8610874898673163, 0.03295627150428083], "Accuracy" -> 
              PlusMinus[0.6492540441663136, 0.030323809521890444`], 
              "EvaluationTime" -> 0.000011433543365455891`, "TestSize" -> 
              2514, "TrainingSize" -> 8, "TrainingTime" -> 
              0.004339526315789473, "TrainingMemory" -> 63173.05263157895, 
              "ModelMemory" -> 5480., "ExperimentCount" -> 18, "ModelUtility" -> 
              0.4978151175864825, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.7746242817958197, 0.045189445938727896`], 
                PlusMinus[0.9536231639834548, 0.04517677043921669], 
                PlusMinus[1.1328659824413059`, 0.07122016121549832], 
                PlusMinus[0.8000357734414243, 0.049732629350667114`], 
                PlusMinus[0.9835483367220189, 0.06234157686571179], 
                PlusMinus[1.1140326144843238`, 0.0651436488803107], 
                PlusMinus[0.9920450787748197, 0.06301250055211835], 
                PlusMinus[0.6689240775005207, 0.03645236850759513], 
                PlusMinus[0.8109006401781532, 0.041266491927760815`], 
                PlusMinus[0.9950447777375573, 0.059368435394298764`], 
                PlusMinus[0.8838730389837679, 0.044436919221790355`], 
                PlusMinus[0.9282749964027168, 0.05374664537378336], 
                PlusMinus[0.9563046217306242, 0.041397442412445105`], 
                PlusMinus[0.7979119947218957, 0.048939742514739315`], 
                PlusMinus[0.9199336039669981, 0.04935669663513039], 
                PlusMinus[0.6767106979846349, 0.04292785581135651], 
                PlusMinus[0.909080111748978, 0.057093371241904146`], 
                PlusMinus[0.7897063917373985, 0.0560527178555431]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.7706308740736917, 0.03567664654728762], 
                PlusMinus[0.3912918185083438, 0.040668605833524794`], 
                PlusMinus[0.5330223437952398, 0.04173051957257874], 
                PlusMinus[0.7130268414420721, 0.03831165932227933], 
                PlusMinus[0.643601924827031, 0.04040436746201151], 
                PlusMinus[0.5327586759812906, 0.04178643939205782], 
                PlusMinus[0.5886746816055146, 0.04133954307393295], 
                PlusMinus[0.8386948349946374, 0.03155398482421879], 
                PlusMinus[0.6188342856229784, 0.040575678819511025`], 
                PlusMinus[0.5394806616927685, 0.04187700933010458], 
                PlusMinus[0.6241197181981641, 0.040696101189748535`], 
                PlusMinus[0.48355378905716545`, 0.041806020534550466`], 
                PlusMinus[0.4977501845965463, 0.041949380531306986`], 
                PlusMinus[0.7130268414420721, 0.03831165932227933], 
                PlusMinus[0.6314698711507241, 0.04051210143399547], 
                PlusMinus[0.8241192953320469, 0.032610640419717306`], 
                PlusMinus[0.7098077277438967, 0.038285189892490065`], 
                PlusMinus[0.726072607260727, 0.04492656379348899]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.30756997595268154`, 0.02299131240435418], 
              "Accuracy" -> 
              PlusMinus[0.9132911949974724, 0.012018878905057345`], 
              "EvaluationTime" -> 8.056746031746034*^-6, "TestSize" -> 2400, 
              "TrainingSize" -> 30, "TrainingTime" -> 0.0046976190476190486`, 
              "TrainingMemory" -> 66543.61904761904, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 20, "ModelUtility" -> 1.3836884869563657`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.32625159506780826`, 0.04518590956156841], 
                PlusMinus[0.36636916201414194`, 0.04332647850334214], 
                PlusMinus[0.3542436302774158, 0.04952856634154407], 
                PlusMinus[0.42211825880266063`, 0.05343250683106002], 
                PlusMinus[0.23656007558687767`, 0.026689803945128047`], 
                PlusMinus[0.416894990792793, 0.05855755693098316], 
                PlusMinus[0.5161306199859671, 0.053549127428310486`], 
                PlusMinus[0.5285424279753941, 0.07559966743212052], 
                PlusMinus[0.3555719574441812, 0.046679338235608006`], 
                PlusMinus[0.24453882375421124`, 0.026169807246431885`], 
                PlusMinus[0.3662928361009388, 0.05846613642759455], 
                PlusMinus[0.32273634497264264`, 0.02417591813846924], 
                PlusMinus[0.5235547081595143, 0.07391379092339752], 
                PlusMinus[0.4348881876932952, 0.05561137896135653], 
                PlusMinus[0.4553182694476759, 0.06532087206937984], 
                PlusMinus[0.3658956025871946, 0.05786423840955262], 
                PlusMinus[0.3686974191342599, 0.04911641834212173], 
                PlusMinus[0.23302399726188008`, 0.02657380826863526], 
                PlusMinus[0.2386427493182574, 0.02632832696467754], 
                PlusMinus[0.25805902486683874`, 0.026705129640452272`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9358853730296833, 0.02355118340063414], 
                PlusMinus[0.915116109442017, 0.02689128977600363], 
                PlusMinus[0.932405163514746, 0.024476732475102788`], 
                PlusMinus[0.8685427499420469, 0.031755893658256935`], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.900516832950064, 0.028497933191560694`], 
                PlusMinus[0.7512724341396163, 0.04002040873520434], 
                PlusMinus[0.8577190122515019, 0.03291006514143704], 
                PlusMinus[0.9381388089620436, 0.02337859943410783], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9156957228493909, 0.02642305083407257], 
                PlusMinus[0.9401055302414073, 0.02363573407328251], 
                PlusMinus[0.8501126156122835, 0.032430998114043465`], 
                PlusMinus[0.8735944261366001, 0.031086978825108864`], 
                PlusMinus[0.8682134778304331, 0.03205561055540743], 
                PlusMinus[0.915116109442017, 0.02689128977600363], 
                PlusMinus[0.928398531976959, 0.024850848985631915`], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9327455281830938, 0.02477046704272069], 
                PlusMinus[0.9327455281830938, 0.02477046704272069]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.16455699329441234`, 0.03451721407331369], 
              "Accuracy" -> 
              PlusMinus[0.9310006242901019, 0.014257954995387404`], 
              "EvaluationTime" -> 0.000011397101449275361`, "TestSize" -> 660,
               "TrainingSize" -> 120, "TrainingTime" -> 0.005915869565217391, 
              "TrainingMemory" -> 81901.91304347826, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 22, "ModelUtility" -> 2.5192027144753606`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.40285835089120975`, 0.16525007306542217`], 
                PlusMinus[0.14927562268082106`, 0.05175890795999629], 
                PlusMinus[0.2211441089024448, 0.11833770318041224`], 
                PlusMinus[0.5055173719657572, 0.20385993955782752`], 
                PlusMinus[0.2848834800597358, 0.12840989390776908`], 
                PlusMinus[0.23668552391985354`, 0.11839250756514179`], 
                PlusMinus[0.22156587405597036`, 0.06125382211169948], 
                PlusMinus[0.6711685272501782, 0.24363557002580769`], 
                PlusMinus[0.1363473034980158, 0.03714301823835254], 
                PlusMinus[0.2038600434316414, 0.11791365233240958`], 
                PlusMinus[0.23589262119376228`, 0.1166757759026358], 
                PlusMinus[0.17720892526651955`, 0.06288966871102324], 
                PlusMinus[0.2291400730169245, 0.1209823715153176], 
                PlusMinus[0.27993342881110317`, 0.12884222550073027`], 
                PlusMinus[0.3854940995897119, 0.16792520600656605`], 
                PlusMinus[0.5571546386717945, 0.22371419700636358`], 
                PlusMinus[0.13079299518512974`, 0.04838648910088515], 
                PlusMinus[0.3045633145874037, 0.12750224379517536`], 
                PlusMinus[0.20755235905049327`, 0.11860379765925577`], 
                PlusMinus[0.2198182460445978, 0.11966733217653887`], 
                PlusMinus[0.10228570792113902`, 0.028646123696700228`], 
                PlusMinus[0.23996953385088018`, 0.11732103799823423`]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8817204301075263, 0.0635844392535679], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.8494623655913973, 0.06906714064924106], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.8172043010752682, 0.07369141435942854], 
                PlusMinus[0.9784946236559133, 0.03818779506247919], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.8817204301075263, 0.0635844392535679], 
                PlusMinus[0.8494623655913973, 0.06906714064924106], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9139784946236553, 0.05699611867029939], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9462365591397844, 0.048856931978242334`], 
                PlusMinus[0.9784946236559133, 0.03818779506247919], 
                PlusMinus[0.9139784946236553, 0.05699611867029939]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000011397101449275361`, "MeanCrossEntropy" -> 
             PlusMinus[0.16455699329441234`, 0.03451721407331369], 
             "ModelMemory" -> 5480., "TrainingMemory" -> 81901.91304347826, 
             "TrainingTime" -> 0.011734363272311211`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {
              TypeSystem`Atom[Integer]}], 2]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            3], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 220551032075636]], "MaxTrainingSize" -> 150, 
      "LastReportingTime" -> 3.763981939948395`16.32822252012145*^9, 
      "PreprocessorEvaluationTime" -> 3.3974609375`3.*^-6, 
      "PreprocessorMemory" -> 39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 8, "TimeBudgets" -> 0.32000000000000006`, 
          "ElapsedTimes" -> 0.40194799999999997`, "ExperimentCounts" -> 18], 
         Association[
         "TrainingSizes" -> 30, "TimeBudgets" -> 0.4, "ElapsedTimes" -> 
          0.39448300000000003`, "ExperimentCounts" -> 20], 
         Association[
         "TrainingSizes" -> 120, "TimeBudgets" -> 0.5, "ElapsedTimes" -> 
          0.507036, "ExperimentCounts" -> 22]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[220559622010228]], "ID" -> 
         220563916977524]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{5.8, 2.7, 5.1, 1.9}}, "ID" -> 4654099653526711133]], 
        
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 1.482598, "MaxTrainingMemory" -> 664952, "DataMemory" -> 
      32488, "FunctionMemory" -> 127064, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2019, 4, 11, 14, 32, 20.142874`8.056696419797985},
         "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.763996366073897*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"c74392af-3afc-444a-a0b4-e2c8ece5bbdb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1918, 1003},
WindowMargins->{{1, Automatic}, {1, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 57, "Subsubsection",ExpressionUUID->"1fc5c2cf-c15b-4837-8d0b-8a1fe8f97cdd"],
Cell[CellGroupData[{
Cell[776, 29, 1409, 39, 185, "Input",ExpressionUUID->"71b8a3d6-d499-4a78-9b8a-c56b35ad0618"],
Cell[2188, 70, 316, 6, 44, "Output",ExpressionUUID->"c79da7b3-eb9c-4ac8-aa32-3922bdb8ad81"],
Cell[2507, 78, 942, 26, 44, "Output",ExpressionUUID->"4bf2bb21-7a5e-47ed-bbd0-332dab3bb224"],
Cell[3452, 106, 535, 12, 44, "Output",ExpressionUUID->"b6990f9e-5d13-4374-a466-75864da26336"]
}, Open  ]],
Cell[4002, 121, 177, 3, 39, "Input",ExpressionUUID->"601a0666-e551-4eab-9195-5b0149c1b361"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4216, 129, 167, 3, 57, "Subsubsection",ExpressionUUID->"ae0cbe4b-4453-42d9-a501-76edc0409770"],
Cell[4386, 134, 1594, 44, 156, "Input",ExpressionUUID->"47bf8347-d83c-4420-9e8c-5d07fefb33a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6017, 183, 213, 4, 57, "Subsubsection",ExpressionUUID->"664936a7-46d4-4feb-866b-479142bb7d04"],
Cell[CellGroupData[{
Cell[6255, 191, 1101, 30, 156, "Input",ExpressionUUID->"85a559f5-8158-48ab-8559-82ee73dbc02f"],
Cell[7359, 223, 173, 2, 44, "Output",ExpressionUUID->"c7ff8cbd-ce21-429e-bd91-5b38b98d1f02"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7581, 231, 167, 3, 57, "Subsubsection",ExpressionUUID->"657d2135-1245-42c6-a3ec-bfcf37992fd9"],
Cell[CellGroupData[{
Cell[7773, 238, 380, 9, 39, "Input",ExpressionUUID->"ceadf055-ac36-4570-834d-b5546f58920e"],
Cell[8156, 249, 78791, 1393, 86, "Output",ExpressionUUID->"2998f27c-c254-4039-adc2-a73fbe858671"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86996, 1648, 174, 3, 57, "Subsubsection",ExpressionUUID->"36fb24b2-480d-4ae4-ae48-f612e81e30e1"],
Cell[CellGroupData[{
Cell[87195, 1655, 281, 5, 39, "Input",ExpressionUUID->"81f68373-f298-4ac4-b2e1-f6c8e80296bf"],
Cell[87479, 1662, 83803, 1460, 86, "Output",ExpressionUUID->"6aacf7f0-7c33-4f72-84ca-27fb24e901fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171319, 3127, 149, 2, 39, "Input",ExpressionUUID->"0a59893a-4b99-45f6-974d-a695e8794af8"],
Cell[171471, 3131, 151, 2, 44, "Output",ExpressionUUID->"8618f8f3-7bfc-4a7f-88e6-4196292e35ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171659, 3138, 160, 2, 39, "Input",ExpressionUUID->"9150f509-ea42-447c-976e-84e2a4b17f7e"],
Cell[171822, 3142, 16329, 426, 399, "Output",ExpressionUUID->"c22256ce-c570-4c42-8fbe-4273a0c206c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188200, 3574, 155, 3, 57, "Subsubsection",ExpressionUUID->"b8d3e49b-d290-4e76-a0b8-3e59a9ee6676"],
Cell[188358, 3579, 2050, 55, 388, "Input",ExpressionUUID->"3862f40b-b280-4e16-b13d-85e15448a490"],
Cell[CellGroupData[{
Cell[190433, 3638, 529, 10, 39, "Input",ExpressionUUID->"bbb0f038-255e-4c96-a3d4-442fc0479c5e"],
Cell[190965, 3650, 10487, 239, 173, "Output",ExpressionUUID->"30efb74f-95bc-49e2-810c-8de42cf77106"]
}, Open  ]],
Cell[201467, 3892, 839, 19, 98, "Input",ExpressionUUID->"3fa50c06-8f77-451c-a78f-9a84539acb7d"],
Cell[CellGroupData[{
Cell[202331, 3915, 1054, 27, 127, "Input",ExpressionUUID->"08e1afed-b233-4a36-ba80-f85c96e22fce"],
Cell[203388, 3944, 463, 6, 44, "Output",ExpressionUUID->"bd67692d-f344-4601-83e4-32c5628a6bd9"],
Cell[203854, 3952, 104595, 1895, 86, "Output",ExpressionUUID->"e32ceb78-3421-42ec-a9ba-73db4f8f14e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308486, 5852, 602, 12, 98, "Input",ExpressionUUID->"dd89c216-b16e-4964-b6c0-decfc22faafd"],
Cell[309091, 5866, 33266, 772, 469, "Output",ExpressionUUID->"a7aba6bf-81bb-4b02-b0e3-5987f79d4d78"],
Cell[342360, 6640, 435, 6, 44, "Output",ExpressionUUID->"bcc47eb3-924b-4a1c-810e-fc3372f8b2f5"]
}, Open  ]],
Cell[342810, 6649, 341, 9, 39, "Input",ExpressionUUID->"6c974c7e-9e6d-4d45-9248-a7adcb78a2b5"],
Cell[CellGroupData[{
Cell[343176, 6662, 176, 3, 39, "Input",ExpressionUUID->"960f54ee-eb20-4a5e-beab-35bcbb863e9f"],
Cell[343355, 6667, 41852, 765, 86, "Output",ExpressionUUID->"c74392af-3afc-444a-a0b4-e2c8ece5bbdb"]
}, Open  ]]
}, Open  ]]
}
]
*)

