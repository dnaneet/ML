(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217005,       4655]
NotebookOptionsPosition[    154705,       3395]
NotebookOutlinePosition[    211077,       4551]
CellTagsIndexPosition[    210997,       4546]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5eff326f-51d4-4f6d-8327-0361233df0b4"],

Cell["PRESENTATION TITLE (*Title*)", "Title",
 CellChangeTimes->{{3.448190122176695*^9, 3.44819012385317*^9}, {
   3.485609127497636*^9, 3.485609133015955*^9}, {3.514308355088097*^9, 
   3.514308374696691*^9}, 3.5146594348020153`*^9, 3.5146601881617107`*^9, 
   3.7257081858163147`*^9},ExpressionUUID->"4a349bd0-044f-4b71-9e5d-\
6f85b428ef05"],

Cell["Aneet Dharmavaram Narendranath, PhD, ??? (*Subtitle*)", "Subtitle",
 CellChangeTimes->{{3.485609136120798*^9, 3.4856091511532907`*^9}, {
   3.4856091945334663`*^9, 3.485609199379443*^9}, {3.4951031489375*^9, 
   3.49510314984375*^9}, {3.495106455296875*^9, 3.495106455453125*^9}, {
   3.5143083846926413`*^9, 3.514308395249558*^9}, 3.5443793532699003`*^9, 
   3.621626517580729*^9, {3.621626691998458*^9, 3.6216267186543407`*^9}, {
   3.621695156698331*^9, 3.621695160632772*^9}, {3.622213306499199*^9, 
   3.622213328771823*^9}, {3.7650095593517103`*^9, 
   3.765009573821918*^9}},ExpressionUUID->"8bf38818-9136-4d63-b800-\
a95800ba3bba"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[{InsetBox[
     GraphicsBox[{},
      ContentSelectable->True,
      ImageSize->{480, 360},
      PlotRange->{{0, 480/360}, {0, 1}}], Scaled[{0, 0}], Center, 
     Scaled[{0.5, 0.5}]], InsetBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJztW7uO20YUXSQpUuoTmD9QmZIG0qQTHKSfNWIbaRzBDhCkY+HCQGBrbe9m
36a82mcafgK7pAvrBFjNvli4CNhux9xL3dFejobkUE/D0ADHa2n5mHN4X3OH
+9WDn+4/+mxlZeXZl/DP/dVf7j19uvrrdw348P2TZz8+fvLwh2+f/Pzw8cOn
Xz/4HL78BnAP8MXKcizHcizHxzPikz8agPai57HIAfwDgEf/d1EP+tlY8NTm
MohryjTw6LOCBPgA8SlqQj4gKzTQgXq4i5359IbG18Pvrt69F4CQ/EOWaBF+
LFrQXDsAp+Z5TY2Th9+f//ZKABJACpD9tbfh5fZeeHN0GpZoUeve0x7EX80n
sH02NPcRDeSbDQfgAv8GoAXooBaoCepBNpIYtPBmSLOKi8l/JcV2Ywyj+Kaf
08LfAX8PkBIiQAeAWjQBPtpI/+VaVKBFuIi4SVyLfDahGOaw4xv63NHOz19v
tEkDAQiZDgoJ6tPvvHFAB0/ZBZwbaffEz805a+CWaKA/I0Ga5HTqr29FoIGn
Xxt9guxAjmjxcg3tIkS7uNrvBgbt56ZDDQ2MuOr20AZSkwZ8kB7cPiT5SBtt
4mJjK9Dsa246kG3rsUB/LkbcHJ1J4C5tNFCDtIiYFoJiRSJfr0eaDnJe8UH3
R+TV39gOrnvHfkEMz3CxtadsIFXxIGa1coUWKnY6+LlEh2j2CmTzzvEEPpxb
cDnw11zsuukdB+wYya4l2PVUTDXatOKvhtKB/GKueTPWcr2mwZCn3Nr1IY5n
ftt/uxmx37mGa2IN1YnvakWrWoh0SA1xcqaxQddAbu4GBg0UEk0j3+L6ItbW
FWWD4mSi5c2Z+kScrxV1P3cAHeJu0sMqZlHsVfdpVR0PGgRQS+ixQUxMtnh+
uVrxctcf2sFwTsAVIFgeGMbBmvdybI4DDZysdhjUk8M8Ufd+JfNwyT475Ae5
mMhyPmLED9H/bXOhGrcfPrQAHkEAKu0H60msqyexBdQc7Y6ec9VatkgDl/Oo
c386xwVIQKohQT3oGAfQAeRiC627dFsILbm3bLiWgMdEweaJcxc1+DcN3E1a
qP9nNgc5s0k1pZ/ZwqvXeo5wLHXQ6/oyoH2E+PwxFmh5QT0rwebqWWpgev5F
CNAO0NZIg6yOpHVFqvUfrONQgQ7JTe8kvPIPAoz/kOfR7iNDzNc18LQ5h2gb
JfzdGvwVhr7A6mmspQPsw9T1hzIdLve6phooVw9hfYj8VTzQ7CDn06b4ZtDM
mj9p0CYNAqwXdH+oo0ENHbxzQ73HODUqfNqn2N8YQ4OR50r9qGytTbUj+iuv
mQrnOoEOQdU1KHbbcJI1Y4HRtlnfYRATDk+4LYy1p2PS4WJnn9d/hXUv+YJX
k9ukGgQsJoRajvTG0aBIB8gDskqHgngwLXQKNFDra+y9BVd7Pp97pd2WaNDQ
/CrLFfL3nahMh9u7+mAWEBYaeBfrm2PnBoMOpv6Zvh70DDrYxoO6cAo0aDEN
BGiganuE0XYs+Tfj0d5QcrG9z/0hKloP3g5qmZnHAtLAVRqMy9eWv+YHhfxJ
A/QJf9Z+QBoMfeEGbBeAP73rwxMBNV7hebPkTxpMMzaWroU1DXxAigANsM6t
WysKC/6hbT8E5h5NSQO3QgNf5UbgHg416B0HoIFXk38+/h2fpVV5oEKDxhR0
KIxp8aCvIdiaAf0gGWpwcIR2YFUjmfjjngCsk3j8S9naQJTVywYtBMXIpCb/
UjvG3H3d7Q3XjsDbUfwRuN4DVM7T+Pzh2sC/U7Fe4uumUPUPCjRwxsgT4W1J
Dyke9H0k7VuiBugDgmkQAf8EUOq3cfk+alZfZOvnbi+82HkXys2dkPia+qZY
HzvEGX0A18TtMbiX2j+bO/qBx+rkNvAOhhocnaIflPaYC3oGtsD6EeryA5/3
keh5h5PE/6r4R3PP9rSv9ruqLkgvt/ea3A+u3x/6oEGplnG+f6jXxFaAmGPc
P7kd9Mb8Gv6PtmLdg6R5+ywfYD5sMw0k8EfU3m8hH3PVPWJDL5mD91SLrvnf
n3+1bu/Wkhxtm2dumGNTtwHKB1KrC6bWX6f7NkibXI+G7bEk+jlsj2GavX61
jvPY/nygxcIEn8049aHlHHJ7LP2NbaXBMIfRnoKeU6cyH2WbLBckFAfuaoKj
08AmH0wwB74m5XuuHeKu991U/pjYFoi/vNzccekdFZULOpoNRHVqwzHmIXlu
MHDNgHvNZI+89z72e8rEP7k5OOL80QdauVwwgzhgmAurI09Hes6KO4+j/fUt
yXSqZZ/k/3g9SfxVTRxBTsrVxTfHZ6omcmfDfrSfou2zyaL3CSFP89jg1bhf
i64XavYfQU7AmjgyxMFa65m6I9b25S53/exdHOw5xxX7kyx2juQPw31clpM9
2j8o4486YxyMZhUH2dxyOQHfsanifnfsSWkdQTm/za7n01qIv58WkP3n+feO
Q/KBmb+bptcGJfBjQx9GrcHZ9fjzTom/d772Vu2nNuj5JxT/Wzn/nzN/mnNo
wd1hx+ft5vBEahoIOkb8+/yF+/fqIwEIAMO4jvUf5X+e/zL/nzd/mrMVd3Y8
/5uFYV2pfg9cXcUZkHKoY6j+SzT+Evx/EfwdA3e0C7fivFxvAt+dUr8Drp7G
HfVo//P8hUPrH6lxH+S/bk9S/Fvku8qV3LVzc7agvic7aAGa1P8RufW//uwH
fTF89p1Zx/8CHui3UR3u7Fxh0oA4hwZbz3Mf+L1aC9e+/7SGyd9rnh8ZNPAK
uR+fhfTcJT17b1IOix7cl9R3mgbZ3/BkvAf1Xko+LxY47akPlVvVZ+ArgC/W
d8rPFW9v3vFuXkPZgvqMvk1824v083mPeMJ98E9hxHP++6PlWI7lKB7/A84W
GjU=
        "], {{0, 68}, {65, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSizeRaw->{65, 68},
      PlotRange->{{0, 65}, {0, 68}}], 
     Scaled[{0.49333580155497714, 0.5717682253254397}], 
     Center, {1.1979558513699555, 0.9210339753942228}, {{1., 0.}, {0., 1.}}]},
   
   AspectRatio->1.0295620437956206`,
   ContentSelectable->True,
   ImageMargins->0.,
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{74., 77.5},
   PlotRange->{{0., 1.3333333333333335`}, {0., 1.}},
   PlotRangePadding->Automatic]],ExpressionUUID->
  "eb1d1c99-f9b1-47d6-84cd-363f1135648c"],
 StyleBox[" ",
  FontColor->RGBColor[
   0.5019607843137255, 0.5019607843137255, 0.5019607843137255]],
 StyleBox["Join the Conversation ",
  FontColor->RGBColor[
   0.9019607843137255, 0.9019607843137255, 0.9019607843137255]],
 "#WolframTechConf"
}], "Text",
 CellFrame->{{0, 0}, {0, 1}},
 ShowCellBracket->Automatic,
 CellMargins->{{80, 80}, {100, 165}},
 CellFrameMargins->{{0, 0}, {0, 50}},
 CellFrameColor->RGBColor[0.886275, 0.364706, 0.427451],
 CellChangeTimes->{{3.6216253798451433`*^9, 3.621625396205482*^9}, 
   3.6216255185076437`*^9, {3.621625573653562*^9, 3.6216256020928392`*^9}, {
   3.621625635821653*^9, 3.621625645324601*^9}, {3.621625678952072*^9, 
   3.62162572395792*^9}, {3.621625867660451*^9, 3.62162588677988*^9}, {
   3.621625982321312*^9, 3.621625984476396*^9}},
 TextAlignment->Center,
 FontFamily->"Arial",
 FontSize->24,
 FontColor->GrayLevel[
  1],ExpressionUUID->"e5654c3b-261a-4278-9d0c-d50835b563a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3922b593-907c-45c1-b8b6-90c3373155fd"],

Cell[CellGroupData[{

Cell["ABSTRACT", "Section",
 CellChangeTimes->{{3.7257199329223537`*^9, 3.725720005948655*^9}, {
  3.72572008110417*^9, 3.725720088583918*^9}, {3.7650095834286957`*^9, 
  3.765009590889599*^9}, {3.765009935063683*^9, 3.765009939025579*^9}},
 TextAlignment->Left,ExpressionUUID->"f29c9c36-3588-423d-85b2-02bd9ce04aa0"],

Cell[TextData[{
 StyleBox["I utilize the ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Classify",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Predict",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" functions for thermodynamic properties of water.  The objective \
is to create a classifier and a complementary prediction object to evaluate \
the power output of a steam turbine, given the inlet and outlet (-to the \
turbine) steam states.",
  FontColor->RGBColor[0, 0, 1]],
 "\n\nSpecific enthalpies (h, kJ/kg) of steam as a function of pressure (P, \
bar) and temperature (T, Celsius) are imported.  In addition to the specific \
enthalpy, regions of water\[CloseCurlyQuote]s P-T phase diagram are also \
imported.  These regions are per the industrial standard IAPWS IF-97.  \
Mathematica\[CloseCurlyQuote]s Classify is used to check which numerical \
algorithm best (accuracy and speed) classifies the (P,T) tuples into regions. \
 This algorithm is then used to create a Prediction object for (P,T) \
\[RightArrow] h which is then used to evaluate the power produced by a steam \
turbine, which is a fundamental building block in thermodynamics."
}], "Text",
 CellChangeTimes->{{3.725720132418301*^9, 3.7257201347705364`*^9}, {
  3.7650096001727877`*^9, 3.76500964895767*^9}, {3.765009702779311*^9, 
  3.765009962656011*^9}, {3.765010029570704*^9, 
  3.765010059467409*^9}},ExpressionUUID->"813e3938-12dd-4af2-a679-\
9c2667c326cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3d417ef7-2274-476e-a156-7231bf56c84e"],

Cell[CellGroupData[{

Cell["\[OpenCurlyQuote]Hello World\[CloseCurlyQuote] of Classification: Iris \
Dataset", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308340990994*^9, 3.514308352103572*^9}, {
   3.765009669062294*^9, 3.765009686063587*^9}, {3.7650100904157124`*^9, 
   3.765010101121108*^9}},ExpressionUUID->"d519da9a-07b8-4600-b208-\
ff11b9f334ce"],

Cell["\<\
The Fisher Iris dataset is imported from one of the many online repositories.\
\
\>", "Text",
 CellChangeTimes->{{3.495209008234375*^9, 3.49520915653125*^9}, 
   3.495209919765625*^9, 3.4952106014375*^9, {3.4952106824375*^9, 
   3.495210832234375*^9}, 3.514307848543872*^9, {3.514308058576482*^9, 
   3.514308065607885*^9}, {3.51430841745117*^9, 3.514308419642997*^9}, {
   3.5149152616687326`*^9, 3.514915280523456*^9}, {3.514915328702818*^9, 
   3.5149153375415287`*^9}, 3.514915444638068*^9, {3.765010104055437*^9, 
   3.765010118852201*^9}, 
   3.765010305688532*^9},ExpressionUUID->"d1b120a4-0039-4aee-b1d8-\
345c184f2ff5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "url", "=", 
   "\"\<https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataset", "=", 
   RowBox[{"Import", "[", "url", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.483202458976812*^9, {3.4951937068125*^9, 3.495193735734375*^9}, {
   3.495195085203125*^9, 3.495195086125*^9}, {3.514309192473827*^9, 
   3.514309197918544*^9}, 3.765010132937668*^9, {3.765010206476132*^9, 
   3.765010207969571*^9}},
 FontSize->14,ExpressionUUID->"3448cd5e-b397-4de5-9565-80bd96df13cf"],

Cell[CellGroupData[{

Cell["\<\
Probing the dataset to visually ascertain dimensions and identify features\
\>", "Subsection",
 CellChangeTimes->{
  3.483202458956058*^9, {3.514309203943825*^9, 3.514309209861143*^9}, {
   3.7650102127971354`*^9, 
   3.765010256510298*^9}},ExpressionUUID->"d9b037c9-200b-4bd8-b71c-\
46ddd47420dd"],

Cell["\<\
\[OpenCurlyDoubleQuote]The dataset contains a set of 150 records under five \
attributes - petal length, petal width, sepal length, sepal width and \
species.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.765010309071382*^9, 
  3.7650103213458357`*^9}},ExpressionUUID->"730141f6-a811-44de-99ef-\
a1a2f1c98d68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"names", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "sepal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"length", "'"}]}], ",", 
      RowBox[{
       RowBox[{"'", "petal"}], "-", 
       RowBox[{"width", "'"}]}], ",", 
      RowBox[{"'", 
       RowBox[{"class", "'"}]}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dimensions", "[", "dataset", "]"}], "\[IndentingNewLine]", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "5"}], "]"}], "]"}], "//", 
    "Tally"}]}]}]], "InputOnly",
 CellChangeTimes->{
  3.483202458976812*^9, {3.4951937068125*^9, 3.495193735734375*^9}, {
   3.495195085203125*^9, 3.495195086125*^9}, {3.514308110270358*^9, 
   3.51430813033293*^9}, 3.765010224673917*^9},
 FontSize->14,
 CellLabel->"In[11]:=",ExpressionUUID->"ef6d3d59-e728-4112-a616-b48534a3eaa0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"150", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.7650102584707127`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"240ce76a-2f4d-426a-961a-6c8c7c8449ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "5.1`", ",", "3.5`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.9`", ",", "3.`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.7`", ",", "3.2`", ",", "1.3`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.6`", ",", "3.1`", ",", "1.5`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.`", ",", "3.6`", ",", "1.4`", ",", "0.2`", 
     ",", "\<\"Iris-setosa\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.765010258475718*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"5685f5ae-b24c-4198-8c12-af0a0946b0a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Iris-setosa\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-versicolor\"\>", ",", "50"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Iris-virginica\"\>", ",", "50"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.765010258477558*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2bfb39bc-02f3-4a99-873c-844351b6806f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0decc16d-f8cc-43ea-8366-05f88784fd4a"],

Cell[CellGroupData[{

Cell["Data distribution into bins and Clustering", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.51430857274755*^9, 3.514308578875259*^9}, {
   3.765010357074759*^9, 3.765010367783024*^9}, {3.765010423809722*^9, 
   3.765010427066586*^9}},ExpressionUUID->"f8ec5160-8d2b-453f-b4c6-\
c94edee702be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sepalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalLength", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"petalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sepalWidth", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"class", "=", 
   RowBox[{
    RowBox[{"dataset", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "5"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Iris-setosa\>\"", "\[Rule]", "\"\<setosa\>\""}], ",", " ", 
      
      RowBox[{"\"\<Iris-versicolor\>\"", "\[Rule]", "\"\<versicolor\>\""}], 
      ",", " ", 
      RowBox[{"\"\<Iris-virginica\>\"", "\[Rule]", "\"\<virginica\>\""}]}], 
     "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.763992572321846*^9, 3.7639926682288*^9}, {
  3.763992741461824*^9, 3.763992937695015*^9}, {3.763993939182761*^9, 
  3.763993940038288*^9}, {3.763994003255328*^9, 3.763994003850746*^9}, {
  3.763994092087641*^9, 3.763994132162019*^9}, {3.763994169385898*^9, 
  3.7639942350498857`*^9}, {3.764674067044373*^9, 3.7646740837258387`*^9}, {
  3.7650113111875687`*^9, 3.765011377883419*^9}},
 FontSize->14,
 CellLabel->
  "In[101]:=",ExpressionUUID->"2aa2bf2c-0847-4ea9-a758-5f50236dcf52"],

Cell[CellGroupData[{

Cell["\<\
Three dimensional/quantitative subsets of data are explored to reveal \
positive correlation between petal length and petal width\
\>", "Subsubsection",
 CellChangeTimes->{{3.765010717664686*^9, 
  3.765010758535294*^9}},ExpressionUUID->"34e2e610-f47c-4af7-b4a2-\
760cd012b7ca"],

Cell["\<\
(....as is the well-known case with the Iris dataset)

Clustering method choice is left to the solver.  Further granularity in \
clustering is possible through choice of specific method such as \
\[OpenCurlyDoubleQuote]Spectral\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]JarvisPatrick\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.765010953557932*^9, 3.76501099172534*^9}, {
  3.7650117195609493`*^9, 
  3.7650117566485643`*^9}},ExpressionUUID->"16c2c9fc-59b8-441d-b939-\
ce7c482aa07e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subset1", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"sepalWidth", ",", "petalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c1", "=", 
    RowBox[{"FindClusters", "[", 
     RowBox[{"subset1", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<NeighborhoodContraction\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset2", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"sepalLength", ",", "sepalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c2", "=", 
    RowBox[{"FindClusters", "[", "subset2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset3", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"petalLength", ",", "petalWidth"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", "=", 
   RowBox[{"FindClusters", "[", 
    RowBox[{"subset3", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<NeighborhoodContraction\>\""}]}], 
    "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Versus", " ", "automatic", " ", "Method"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.763992572321846*^9, 3.7639926682288*^9}, {
  3.763992741461824*^9, 3.763992937695015*^9}, {3.763993939182761*^9, 
  3.763993940038288*^9}, {3.763994003255328*^9, 3.763994003850746*^9}, {
  3.763994092087641*^9, 3.763994132162019*^9}, {3.763994169385898*^9, 
  3.7639942350498857`*^9}, {3.764674067044373*^9, 3.7646740837258387`*^9}, {
  3.7650104309518833`*^9, 3.765010435558598*^9}, {3.7650104672068357`*^9, 
  3.765010508461948*^9}, {3.765010643844883*^9, 3.7650107151189404`*^9}, {
  3.7650107630416813`*^9, 3.765010765144953*^9}, {3.765010969890861*^9, 
  3.765010970298888*^9}, {3.765011619487093*^9, 3.765011644103395*^9}, {
  3.765011675230359*^9, 3.76501170554393*^9}, {3.765011786117588*^9, 
  3.765011821387457*^9}, {3.765011851762092*^9, 3.765011987906556*^9}, {
  3.765012057352598*^9, 3.7650120959763117`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"24a49a26-6084-42fa-a17b-7228b521c06a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fr", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"FrameStyle", "\[Rule]", "Black"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptstyle", "=", 
   RowBox[{"{", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.765011411744618*^9, 3.7650114313764*^9}, {
  3.765011524190578*^9, 3.765011558002846*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"6d471bb2-b7e1-4763-8ea9-4f0ed23ebc6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"c1", ",", "fr", ",", "ptstyle", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Sepal Width\>\"", ",", "\"\<Petal Width\>\""}], "}"}]}]}],
     "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"c2", ",", "fr", ",", "ptstyle", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Sepal Length\>\"", ",", "\"\<Petal Width\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"c3", ",", "fr", ",", " ", "ptstyle", ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Petal Length\>\"", ",", "\"\<Petal Width\>\""}], 
       "}"}]}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.763992671825335*^9, 3.763992673479703*^9}, {
   3.763992850808432*^9, 3.763992855225669*^9}, {3.763992919535843*^9, 
   3.763992921547175*^9}, {3.763994136086574*^9, 3.763994138083211*^9}, {
   3.765010699006218*^9, 3.765010701430187*^9}, 3.765010769540043*^9, {
   3.765011387657236*^9, 3.765011483112822*^9}, {3.765011537184504*^9, 
   3.765011552128476*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"fb578692-52a5-4fc6-bd7f-f372a11d79f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQDQE8DrNmgsBJewifA86H0Jxw/tkzIMCBxkfoNwYD
fij/JpTP7QChL8P5qOrZcZi/E2o/L5p6bhzu3YmDL4DmH0E09yHcCwsPmHvT
wIAPJx/dPajuvYkRPhD9XA4Qex4Q8A+6fxHuwxUehOIL3TyIewTg4QVRL0Ag
PjjR3MuDUz1+/5zECG9c5kPkH8PDHzU8ODDiB1d4oKcnWHzA+AAcaUSM
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQnQYGTA7GYHDZHsY/ewYEvkD5bHA+RB2zAwMYfLCf
NRMEWB0g6r7ZQ8QZ0OQZMdRjl/8B1c/iABH/iGE/TB6mHiYPcddnOB/mHog+
Frh9MPfDzMflH5h5MD6E/okRPjD3wPgw+2D60fkw/ej2oZtHyP8Q836j2f8H
LXwYHNDDF+Ye1PiC8f/ZAwCwsb9m
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyNU1sKwkAMjLW+qngHz+ABdj88gUcQ9Nfz6Jn0NIooFtE2nZRMW2qgLGlm
NpPHrnbH7T4Rkc3vK87zqbBZPJT2CPCltGe4Xgqbmq+4MflZVN4rrEubROXd
g+JqPuLIx3jkQ5z50Ke4vDMf8xX3Njzua9c3t3q4fuD/y3dr6GMf/VNeWuUd
Vfd9KJ9Ez88trrxB7MPruaB8mLf05sf89d5h9PuTUP68qm9p+vR/anjm+/2S
hg99/v7M9PF+gM/9ao+L6cf8EUc/UA/rQ338Pvx+JBH7hf5hv7r0+bgYnvm+
n/X82vtb7xvr8+9BTG/XfL8xaoeS
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9625, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Petal Width\"", TraditionalForm], None}, {
       FormBox["\"Sepal Width\"", TraditionalForm], None}},
    FrameStyle->GrayLevel[0],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{2., 4.4}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxtUtsNwjAQi/ihpQHSB4VfZugCmYERkOCXeWAmuhO0d74obk+qKt/DcXy5
3l+3x8Y5N/y/6f+co4tuDh8/7ylaxUUcv1M0mi+j9DeaL7SvU4z5UxzmOFq/
4Mr6gaW/Vry188EPPvnvta+1eWDoFVwTPisOytvbuet6kx/ol/zB6sD5fGV1
6M398jS/W9wH/kA/+yU8rI/raV/gZz+ZT/QE5e01Hxb7gB7wo5/fT35e2gfu
v35fT3spF3X2n/fPdfif+5HeE/ixD/iT+38xvT8Ic/7N
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFVFtOwzAQDGkD5SE+IHJSNw3iDFwgZ+AIIPjtecqZ6J1K6pm1dhwJS5G1
9np3Z3ayrx+H96+6qqrPv2/e03qavi+rnpI9TD/Hed1i34q9m06/89rAP8j7
CPsafsHst8vawr5DvGecr3AeYd/gfQu/BvFb7BXOO9isp8f5FeL1Fi/ZQeJH
w8N7xkt+neVPfhqf/murh3wxv+Knv96Tb19vlHp2wm8s8Ht8Afva+kW+1Va8
ns+m4Mv3sy74Y3zipc16iF/59vW2RXxfT85H2+PX/rdWz3/6VD7S+SD15n5R
/7xP/qPZ1Dvzp3f7Qo++vgH7g8Vf/j8b04fy4fN1hd4YT+tP70f4P5rt+5P/
B84Hr/8geh0LvlVf5J/4GY/95HvVD/H4fIPc7wX/i+HT914POR/xE8+yHu4t
np+XWm+ep/p/6b3qkf32/Ch/Oj/y/Fnudy/15/l6BuncDDc=
        
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{4.2437499999999995`, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Petal Width\"", TraditionalForm], None}, {
       FormBox["\"Sepal Length\"", TraditionalForm], None}},
    FrameStyle->GrayLevel[0],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{4.3, 7.9}, {0, 4.4}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+xnzQSBk/bo/LNnQOALnM8ABj9wqjcGg99Q
/k24PET8MkH9qPI7MdRD6J849O+E0h/hfIi9n3GYfxPNf5juhfkH3f3o8rjM
h/A/YIQPRPwB1L5/OP2Hyr9JMPzw68flPkR4E4oP9PDEnz52Ekw/MHlYeOLi
o/sHIv8YLfww4w9/eiGcngEXQnYw
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1UkEKAjEMLJ5EVm27xbtv8OKt+wafIOjV9+ib9C+KIooedHeahKa7AQk1
k9nJJMvtYbMbGWPW/1+bL+c2fLPv4hlNF75BfsXTsY2a38i2Qd8jos+ruuc6
8YPnnfCThL9yP+FXXcyVnorxwNlCT16XefCumB863OC8+F/4dJ30geeW3nXi
/xb+aP9IH/ruqd8N6iP+XG9I/Z9Cn/YLfTPWizzlOs1DeoAPvK9+ftknzZPf
i1P3IX70++PU9/U9WlWX+6F7yO9N8Lqu/QbPmP3p1+uV30Hdg+yf/MvvaVHs
k/A/csFFEw==
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1UsENAiEQRLQDD447X/79WQDUYAkm+rUerUkLMrkY5YbZC0vchGyWmYFl
lv35drpYY8zht3JGhIS8Sdc5upI/8XHP0afXM4cp+77UUzzO0SfwVgUfhQ98
aPiswW/vL40VvZN+sO3lfNQLn3ro1kpvU62fIvIo/SPvhA/cSw18K/dRz5p4
fb7uNwiu+bW/fD/9fYtf9XwG9X6v5hGkf+L0R/sBnWvmTX79P+zf/6L943xR
d2oei5547adr7mO/X85BED0=
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Petal Width\"", TraditionalForm], None}, {
       FormBox["\"Petal Length\"", TraditionalForm], None}},
    FrameStyle->GrayLevel[0],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 2.5}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.765010573645624*^9, 3.765010663317943*^9, 3.765010701920767*^9, 
   3.765010769991227*^9, 3.765011353310265*^9, {3.765011384189645*^9, 
   3.765011394485097*^9}, 3.7650114377753077`*^9, 3.765011483525131*^9, {
   3.765011542567381*^9, 3.7650115593340178`*^9}, {3.765011631135111*^9, 
   3.765011648104088*^9}, {3.765011679783483*^9, 3.765011708696595*^9}, {
   3.765011793086238*^9, 3.765011824179044*^9}, {3.7650118565339317`*^9, 
   3.765011884306432*^9}, {3.765011914407498*^9, 3.765011989801589*^9}, {
   3.7650120666517973`*^9, 3.765012098211813*^9}},
 CellLabel->
  "Out[295]=",ExpressionUUID->"5c00aecd-d447-41ed-bba1-1c234b056bf0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Petal Length and Width show a clean stratification of species class\
\>", "Subsubsection",
 CellChangeTimes->{{3.765010835673459*^9, 
  3.765010872655776*^9}},ExpressionUUID->"db3b0ad7-575d-4506-95a4-\
32b4116593fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subset4", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"petalLength", ",", 
      RowBox[{"class", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"\"\<versicolor\>\"", "\[Rule]", "2"}], ",", " ", 
         RowBox[{"\"\<virginica\>\"", "\[Rule]", "3"}]}], "}"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c4", "=", 
    RowBox[{"FindClusters", "[", "subset4", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subset5", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"petalWidth", ",", 
      RowBox[{"class", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<setosa\>\"", "\[Rule]", "1"}], ",", " ", 
         RowBox[{"\"\<versicolor\>\"", "\[Rule]", "2"}], ",", " ", 
         RowBox[{"\"\<virginica\>\"", "\[Rule]", "3"}]}], "}"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c5", "=", 
   RowBox[{"FindClusters", "[", "subset5", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7650107788288918`*^9, 3.765010780170226*^9}, {
  3.7650108934887953`*^9, 3.765010906300581*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"ad6ecc53-2d7d-41b2-b54b-2a6b8c0da39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"c4", ",", "fr", ",", "ptstyle", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Petal Length\>\"", ",", "\"\<Species\>\""}], "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"c5", ",", "fr", ",", "ptstyle", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Petal Width\>\"", ",", "\"\<Species\>\""}], "}"}]}]}], 
    "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.765010793700253*^9, 3.765010796750842*^9}, {
  3.7650115758497753`*^9, 3.765011600424776*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"bac8c47b-484d-4bdf-a0f0-f99dbc864fd6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+wZwOCDPTr/7BkQ+ALnQ+gfONUbg8FvnPKE
9KPLo/NnzQSBnzj1Q+Q/ornnM07z0P1HyD/o+gnJo9PYw+cfTv+h8wmFH6n6
CZmH3b+fcYYfofAlJE+Ijz3+/xEdHqSmRwAXHOB5
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQffYMCAg5MEAAlEbwZ80EAWE0eQE4Pw0McOtHNx+i
ngunfmMw4EczjwfNPAE0eQE0eXT7Efoh/hHE6V6Ie9DNx+0+CB93+KCHH7r7
IPoF0dQLosmjmy+C030QCuFfiH/40MznxekfiHpC5uOOX3T3Yw9P9PBBV49u
H3p6Q6Qf9PRAiI8e3hCKA6d7AWvyh1E=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQESDhCawyENDETg/FkzQUAcTV4MzjcGA3R5KTgf
QguhqZckoB+3eyDqRdHMF0Pji5Ct/+wZEEC4H+J/aZzmQ9SLoakXJmAeujy6
+xH+h7hXGKd+4uJDAk2/JE796OGFXR49ftDdj+4edPeL4tSP3X7c6RE9/CB8
hHoIjR5f6OahuwchDwD5eZS1
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Species\"", TraditionalForm], None}, {
       FormBox["\"Petal Length\"", TraditionalForm], None}},
    FrameStyle->GrayLevel[0],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 6.9}, {0, 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0ZwCDD/bU4d+E843B4DKJ+ndSqJ6Q/ptE
u5cQnzjzEfIQ+gHZ4Unt+CEuvCiND9zqSQ1fiPxjKqc33HwAmWAN8w==
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQnQYG3+wZIMABQv3AyT97BgS+EC0/ayYI/ERT/wGn
euzu+UDAfR9w6ifOfNzmoctD/PMRzfw/RIePMRh8Jtp96HyI/t9Eux/dvejy
6O7BHl/o/sctj+4fQnx0+7H79zNO9xMyj5D92OMTIQ8Akba68A==
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[Large], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEsDhCawyENDP7Zw/hnz4AAgwMq/w9cftZMEGB0
wKXeGAx+2+PSj85Hdw/UgUS7D109xH5mNP1MRPsHXT2E/mGPXx63e7D7n5A8
IT5CP8T9P9Hc9w8tfNHVI/yL3X/fcPoXPXxJdS+h+EF3P/bwRk+/uPWj+59Q
egAASEK3HA==
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"Species\"", TraditionalForm], None}, {
       FormBox["\"Petal Width\"", TraditionalForm], None}},
    FrameStyle->GrayLevel[0],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 2.5}, {0, 3.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.765010797140625*^9, 3.76501089783361*^9, 
  3.765011600817274*^9, 3.765012103865896*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"52c1b519-0d4b-4de7-9e3e-879fee339494"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ed1a7de1-709b-4935-a8e3-4291edc2f33f"],

Cell[CellGroupData[{

Cell["Classification, Validation and Confusion", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308863196991*^9, 3.5143088633311243`*^9}, {
   3.765012165834139*^9, 
   3.765012170683547*^9}},ExpressionUUID->"3d6bafa6-652e-40e8-a027-\
01dc2e92fe2e"],

Cell["\<\
For a certain size of training and validation data, the best (minimum speed \
and accuracy > 93) is  chosen\
\>", "Text",
 CellChangeTimes->{{3.765012623854513*^9, 3.765012645734892*^9}, {
  3.765012810225412*^9, 
  3.765012840827199*^9}},ExpressionUUID->"a4cde4f2-294d-422f-99c9-\
e0ed6c39968a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"geomdata", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{
     "sepalLength", ",", "sepalWidth", ",", "petalLength", ",", 
      "petalWidth"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mldata", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"geomdata", "\[Rule]", "class"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", 
  RowBox[{
   RowBox[{"Dimensions", "[", "mldata", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"Ceiling", "[", 
       RowBox[{"0.8", "*", "s"}], "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validation", "=", 
   RowBox[{"mldata", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Ceiling", "[", 
       RowBox[{"0.8", "*", "s"}], "]"}], ";;"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7646741712635927`*^9, 3.7646741883626223`*^9}, {
  3.764674265653249*^9, 3.7646742673218803`*^9}, {3.765009361834015*^9, 
  3.765009373416419*^9}, {3.7650123063511753`*^9, 3.765012308146289*^9}, {
  3.765012599235135*^9, 3.765012602024745*^9}, {3.765012720376442*^9, 
  3.765012722123229*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"36d428a6-164c-4839-a48d-58267bd3ee98"],

Cell[BoxData["150"], "Output",
 CellChangeTimes->{3.7650121965947247`*^9, 3.765012308511973*^9, 
  3.7650126029605713`*^9, 3.76501272254744*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"a6f14f7f-1629-4b56-8126-2608ca923104"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification", "Subsubsection",
 CellChangeTimes->{{3.76501220412246*^9, 
  3.7650122115278873`*^9}},ExpressionUUID->"d3ab5173-0078-4b7c-a27f-\
4a0fd6c0d046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ciris", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"training", ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<DecisionTree\>\""}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.76467412141471*^9, 3.764674122952112*^9}, {
   3.7646741684524*^9, 3.764674250104493*^9}, 3.7646754698011503`*^9, {
   3.7650122130032063`*^9, 3.765012213927783*^9}, {3.7650122949577103`*^9, 
   3.765012316218944*^9}, {3.76501270208611*^9, 3.7650127092748528`*^9}, {
   3.765012740910952*^9, 3.765012802140361*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"cf8f8d76-e279-47fb-9091-efd3e194051a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "4", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"setosa\"", "\"versicolor\"", 
                    "\"virginica\""}, "RowWithSeparators"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["120", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 120, "ClassNumber" -> 3, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 120, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, "Method" -> 
                   "Naive", "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, 
                   "StandardDeviation" -> {0.8388148882004082, 
                    0.45892310539639813`, 1.7753215671158455`, 
                    0.7513316881082249}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 4, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{-0.5226397187345367, 0.3700938905912755, 
                   0.7245382996775777}, {0.2578163628110258, 
                   0.9263426594731187, -0.24070565546492903`}, \
{-0.5826925177402836, 
                   0.010499108678382746`, -0.14445870983121603`}, \
{-0.5664343538641234, 0.06935097767330138, -0.6294733678889237}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, 
                    "StandardDeviation" -> {0.8388148882004082, 
                    0.45892310539639813`, 1.7753215671158455`, 
                    0.7513316881082249}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 3, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.007442, "MaxTrainingMemory" -> 65248, 
                  "DataMemory" -> 3960, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2019, 4, 23, 8, 53, 22.499254`8.104743101757215}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 4, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {5.8575, 3.0824999999999982`, 3.7700000000000014`, 
              1.1908333333333336`}, 
             "StandardDeviation" -> {0.8388148882004082, 0.45892310539639813`,
               1.7753215671158455`, 0.7513316881082249}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 3469640861300586857]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association[
               "setosa" -> 1, "versicolor" -> 2, "virginica" -> 3]}, 
             "MissingCode" -> 0, "Version" -> {11.3, 0}, "ID" -> 
             8632914170514506599, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5976834071906370717]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[
       "setosa" -> 0.33333333333333337`, "versicolor" -> 0.34959349593495936`,
         "virginica" -> 0.3170731707317074]], "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {3, 4}, 0., {
      1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0, 
    "TieBreaker" -> RandomChoice, "PerformanceGoal" -> "Quality", 
    "BatchProcessing" -> Automatic, "Model" -> 
    Association["Tree" -> MachineLearning`DecisionTree[
        Association[
        "FeatureIndices" -> RawArray["Integer16",{2, 3, 4, 4, 4}], 
         "NumericalThresholds" -> 
         RawArray["Real32",{-0.17976868152618408`, 
           0.6365044116973877, -0.7863814830780029, 0.544588565826416, 
           0.8107826113700867}], "NominalSplits" -> {}, "Children" -> 
         RawArray["Integer16",{{-5, -6}, {4, -3}, {-1, 5}, {-4, 1}, {2, -2}}],
          "LeafValues" -> 
         RawArray["UnsignedInteger8",{{41, 1, 1}, {1, 1, 26}, {1, 2, 10}, {1, 
           41, 1}, {1, 1, 5}, {1, 2, 1}}], "RootIndex" -> 3, 
         "NominalDimension" -> 0]], "Processor" -> 
      MachineLearning`MLProcessor["Values", 
        Association[
        "Info" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
      "DecisionTree", "Options" -> 
      Association[
       "DistributionSmoothing" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.17467446191488298`, 0.03517241878480595], "Accuracy" -> 
         PlusMinus[0.9255078525400491, 0.01801024624194656], "EvaluationTime" -> 
         0.000015098214285714287`, "TestSize" -> 648, "TrainingSize" -> 96, 
         "TrainingTime" -> 0.006219785714285712, "TrainingMemory" -> 
         77482.5714285714, "ModelMemory" -> 5480., "ExperimentCount" -> 27, 
         "ModelUtility" -> 13.082008318578707`, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[0.1593248357066999, 0.04357736834553473], 
           PlusMinus[0.34231791684423307`, 0.15490542008652777`], 
           PlusMinus[0.36006170594744813`, 0.15252542208087796`], 
           PlusMinus[0.662352421075751, 0.2604080364804588], 
           PlusMinus[0.14557822748388835`, 0.03585867088313141], 
           PlusMinus[0.2957899990400963, 0.14722502042392735`], 
           PlusMinus[0.7947600152070875, 0.2818661207202979], 
           PlusMinus[0.28383722371321846`, 0.14281257327577268`], 
           PlusMinus[0.14318120351589544`, 0.0360059403295361], 
           PlusMinus[0.1790753447500716, 0.05329518084675413], 
           PlusMinus[0.39947081571824056`, 0.17793970035739046`], 
           PlusMinus[0.19907434464056528`, 0.07348626898459898], 
           PlusMinus[0.377960185470674, 0.14893500493051579`], 
           PlusMinus[0.43128425901230283`, 0.15973106032550566`], 
           PlusMinus[0.40433864686535664`, 0.1903095134097296], 
           PlusMinus[0.13706210048572845`, 0.041754657133076044`], 
           PlusMinus[0.12586118756450254`, 0.03140116675641163], 
           PlusMinus[0.14318120351589544`, 0.0360059403295361], 
           PlusMinus[0.20683303621607577`, 0.04893185586167128], 
           PlusMinus[0.36561954590704465`, 0.15532762906050857`], 
           PlusMinus[0.3507474594981636, 0.1520421651982244], 
           PlusMinus[0.29552990593869943`, 0.14607633621993127`], 
           PlusMinus[0.2507363594275918, 0.13857337852010082`], 
           PlusMinus[0.20038201461771749`, 0.0733954624317575], 
           PlusMinus[0.34813620936478046`, 0.1493629628786081], 
           PlusMinus[0.4403618240578929, 0.15662555671121248`], 
           PlusMinus[0.6433474749124061, 0.2309543038084965]}, 
         "AccuracyHistory" -> {
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.8533439174457164, 0.07746837342068033], 
           PlusMinus[0.8133439174457163, 0.08369019904548121], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.7733439174457164, 0.0887623228182913], 
           PlusMinus[0.9333439174457164, 0.060099482600047216`], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.9333439174457164, 0.060099482600047216`], 
           PlusMinus[0.8533439174457164, 0.07746837342068033], 
           PlusMinus[0.7733439174457164, 0.0887623228182913], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.9733439174457161, 0.04717252667567297], 
           PlusMinus[0.8533439174457164, 0.07746837342068033], 
           PlusMinus[0.8533439174457164, 0.07746837342068033], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.9333439174457164, 0.060099482600047216`], 
           PlusMinus[0.9333439174457164, 0.060099482600047216`], 
           PlusMinus[0.8933439174457162, 0.06979003040993514], 
           PlusMinus[0.8133439174457163, 0.08369019904548121], 
           PlusMinus[0.7333439174457165, 0.0928733034188235]}, 
         "Configuration" -> {
          "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
           1}, "FinalTrainingSize" -> 120], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
          "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 27], 
          TypeSystem`Vector[TypeSystem`AnyType, 27], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 136730451343364]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.5332801858503222, 0.03383201530580089], "Accuracy" -> 
              PlusMinus[0.8644302603859924, 0.021485932709757474`], 
              "EvaluationTime" -> 0.000011136190476190476`, "TestSize" -> 
              1675, "TrainingSize" -> 15, "TrainingTime" -> 
              0.005289764705882353, "TrainingMemory" -> 64216., "ModelMemory" -> 
              5480., "ExperimentCount" -> 16, "ModelUtility" -> 
              1.481032487085376, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6752926908396727, 0.0735754294611739], 
                PlusMinus[0.5301483059910964, 0.051954748206392704`], 
                PlusMinus[0.41580808618189125`, 0.037989424286611354`], 
                PlusMinus[0.6651182188317784, 0.07041233779821804], 
                PlusMinus[0.4277165312213104, 0.04006893089811517], 
                PlusMinus[0.6541924899069385, 0.06703453013887521], 
                PlusMinus[0.506086362344426, 0.047376009604012614`], 
                PlusMinus[0.8761413743124506, 0.08209167663567556], 
                PlusMinus[0.47284955470506396`, 0.026276659770287338`], 
                PlusMinus[0.5084525662976931, 0.04431491196312799], 
                PlusMinus[0.7099597279184794, 0.07484866605474084], 
                PlusMinus[0.5811125571426713, 0.05689802022111879], 
                PlusMinus[0.7755676411818617, 0.08377174704307203], 
                PlusMinus[0.6235109748113256, 0.055114076184789376`], 
                PlusMinus[0.5739197299681847, 0.05582577856047416], 
                PlusMinus[0.5524942758298799, 0.05480727561560112]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.8052831478826041, 0.04011769991475643], 
                PlusMinus[0.9309311800326299, 0.025885890168222996`], 
                PlusMinus[0.9309311800326299, 0.025885890168222996`], 
                PlusMinus[0.7928401994440613, 0.040117017800996], 
                PlusMinus[0.9233219407402273, 0.027318343577841946`], 
                PlusMinus[0.8004272856013532, 0.03867725179414676], 
                PlusMinus[0.9331110829444075, 0.025818001792333133`], 
                PlusMinus[0.6880785110697675, 0.04559104884088584], 
                PlusMinus[0.9331110829444075, 0.025818001792333133`], 
                PlusMinus[0.8846275813844473, 0.032298174604935455`], 
                PlusMinus[0.7777291101927313, 0.0408068612637894], 
                PlusMinus[0.7812202511012233, 0.041096332604815156`], 
                PlusMinus[0.8121745161335087, 0.03872189649101314], 
                PlusMinus[0.735215748550279, 0.0436473708576826], 
                PlusMinus[0.7812202511012233, 0.041096332604815156`], 
                PlusMinus[0.7997623480381701, 0.03986570925475925]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.17467446191488298`, 0.03517241878480595], 
              "Accuracy" -> 
              PlusMinus[0.9255078525400491, 0.01801024624194656], 
              "EvaluationTime" -> 0.000015098214285714287`, "TestSize" -> 648,
               "TrainingSize" -> 96, "TrainingTime" -> 0.006219785714285712, 
              "TrainingMemory" -> 77482.5714285714, "ModelMemory" -> 5480., 
              "ExperimentCount" -> 27, "ModelUtility" -> 13.082008318578707`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.1593248357066999, 0.04357736834553473], 
                PlusMinus[0.34231791684423307`, 0.15490542008652777`], 
                PlusMinus[0.36006170594744813`, 0.15252542208087796`], 
                PlusMinus[0.662352421075751, 0.2604080364804588], 
                PlusMinus[0.14557822748388835`, 0.03585867088313141], 
                PlusMinus[0.2957899990400963, 0.14722502042392735`], 
                PlusMinus[0.7947600152070875, 0.2818661207202979], 
                PlusMinus[0.28383722371321846`, 0.14281257327577268`], 
                PlusMinus[0.14318120351589544`, 0.0360059403295361], 
                PlusMinus[0.1790753447500716, 0.05329518084675413], 
                PlusMinus[0.39947081571824056`, 0.17793970035739046`], 
                PlusMinus[0.19907434464056528`, 0.07348626898459898], 
                PlusMinus[0.377960185470674, 0.14893500493051579`], 
                PlusMinus[0.43128425901230283`, 0.15973106032550566`], 
                PlusMinus[0.40433864686535664`, 0.1903095134097296], 
                PlusMinus[0.13706210048572845`, 0.041754657133076044`], 
                PlusMinus[0.12586118756450254`, 0.03140116675641163], 
                PlusMinus[0.14318120351589544`, 0.0360059403295361], 
                PlusMinus[0.20683303621607577`, 0.04893185586167128], 
                PlusMinus[0.36561954590704465`, 0.15532762906050857`], 
                PlusMinus[0.3507474594981636, 0.1520421651982244], 
                PlusMinus[0.29552990593869943`, 0.14607633621993127`], 
                PlusMinus[0.2507363594275918, 0.13857337852010082`], 
                PlusMinus[0.20038201461771749`, 0.0733954624317575], 
                PlusMinus[0.34813620936478046`, 0.1493629628786081], 
                PlusMinus[0.4403618240578929, 0.15662555671121248`], 
                PlusMinus[0.6433474749124061, 0.2309543038084965]}, 
              "AccuracyHistory" -> {
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.8533439174457164, 0.07746837342068033], 
                PlusMinus[0.8133439174457163, 0.08369019904548121], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.7733439174457164, 0.0887623228182913], 
                PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                PlusMinus[0.8533439174457164, 0.07746837342068033], 
                PlusMinus[0.7733439174457164, 0.0887623228182913], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.9733439174457161, 0.04717252667567297], 
                PlusMinus[0.8533439174457164, 0.07746837342068033], 
                PlusMinus[0.8533439174457164, 0.07746837342068033], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                PlusMinus[0.8933439174457162, 0.06979003040993514], 
                PlusMinus[0.8133439174457163, 0.08369019904548121], 
                PlusMinus[0.7333439174457165, 0.0928733034188235]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000015098214285714287`, "MeanCrossEntropy" -> 
             PlusMinus[0.17467446191488298`, 0.03517241878480595], 
             "ModelMemory" -> 5480., "TrainingMemory" -> 77482.5714285714, 
             "TrainingTime" -> 0.012753507563025209`], "Index" -> 1]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Struct[{"Value"}, {
              TypeSystem`Atom[Integer]}], 2]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory",
               "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 1], 
        Association["ID" -> 136726156376068]], "MaxTrainingSize" -> 120, 
      "LastReportingTime" -> 3.764998403347268`16.328339785522008*^9, 
      "PreprocessorEvaluationTime" -> 
      3.55566406250000521804821573823574`4.*^-6, "PreprocessorMemory" -> 
      39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.39999999999999997`, 
          "ElapsedTimes" -> 0.51989, "ExperimentCounts" -> 16], 
         Association[
         "TrainingSizes" -> 96, "TimeBudgets" -> 0.5, "ElapsedTimes" -> 
          0.494555, "ExperimentCounts" -> 27]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[136734746310660]], "ID" -> 
         136739041277956]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{5.5, 2.6, 4.4, 1.2}}, "ID" -> 3246226001810280355]], 
        
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 1.488381, "MaxTrainingMemory" -> 585832, "DataMemory" -> 
      28544, "FunctionMemory" -> 118904, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2019, 4, 23, 8, 53, 23.944361`8.131778234460421}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7650122225725527`*^9, {3.7650122985428*^9, 3.765012322272072*^9}, 
   3.765012609800209*^9, {3.765012712096395*^9, 3.765012803965373*^9}},
 CellLabel->
  "Out[358]=",ExpressionUUID->"7a242571-0378-4914-bf03-f98b621b8493"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classifier Measurements", "Subsubsection",
 CellChangeTimes->{{3.765012229170093*^9, 
  3.7650122354189377`*^9}},ExpressionUUID->"e2d0a968-f949-4694-9130-\
727594cb1438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"ciris", ",", "validation"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76467412141471*^9, 3.764674122952112*^9}, {
   3.7646741684524*^9, 3.764674250104493*^9}, 3.7646754698011503`*^9, {
   3.7650122490172243`*^9, 3.765012249944705*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"19673c4e-fb31-4d79-b52b-caffd9e8a642"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             RasterBox[{{0.8564437870801482, 0.8967071593761374, 
              0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
              0.8158644505878024}, {0.47333333333333333`, 0.7727052229508918, 
              0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
             ImagePadding -> 0.2, 
             PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
             PlotRangePadding -> Automatic, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["31", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             RasterBox[{{0.8564437870801482, 0.8967071593761374, 
              0.4746151541446917}, {0.7191592194171378, 0.5062062867304069, 
              0.8158644505878024}, {0.47333333333333333`, 0.7727052229508918, 
              0.7191592194171378}}, {{-0.03479955456570183, \
-0.055679287305122394`}, {3.055679287305122, 3.041759465478842}}, {0, 1}], 
             ImagePadding -> 0.2, 
             PlotRange -> {{-0.0625, 3.0625}, {-0.06, 3.06}}, 
             PlotRangePadding -> Automatic, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Classifier: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["31", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Accuracy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "0.9354838709677418818`4.037673015544337", "\[PlusMinus]", 
                    "0.0448530185260522796`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierMeasurementsObject[
   Association["Model" -> ClassifierFunction[
      Association[
      "ExampleNumber" -> 120, "ClassNumber" -> 3, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Length" -> 4]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Processors" -> {
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 120, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, "Method" -> 
                    "Naive", "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, 
                    "StandardDeviation" -> {0.8388148882004082, 
                    0.45892310539639813`, 1.7753215671158455`, 
                    0.7513316881082249}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 4, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 4]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 3]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> 
                   Association[
                    "Matrix" -> {{-0.5226397187345367, 0.3700938905912755, 
                    0.7245382996775777}, {0.2578163628110258, 
                    0.9263426594731187, -0.24070565546492903`}, \
{-0.5826925177402836, 
                    0.010499108678382746`, -0.14445870983121603`}, \
{-0.5664343538641234, 0.06935097767330138, -0.6294733678889237}}, "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {5.8575, 3.0824999999999982`, 
                    3.7700000000000014`, 1.1908333333333336`}, 
                    "StandardDeviation" -> {0.8388148882004082, 
                    0.45892310539639813`, 1.7753215671158455`, 
                    0.7513316881082249}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 3, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.007442, "MaxTrainingMemory" -> 65248, 
                    "DataMemory" -> 3960, "FunctionMemory" -> 21752, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2019, 4, 23, 8, 53, 22.499254`8.104743101757215}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
                  "ImputedVectors", PerformanceGoal -> "Quality"]& ), 
                "Method" -> "DimensionReduction", "VectorLength" -> 4, 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                7263179337424669307]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {5.8575, 3.0824999999999982`, 3.7700000000000014`, 
                 1.1908333333333336`}, 
                "StandardDeviation" -> {0.8388148882004082, 
                 0.45892310539639813`, 1.7753215671158455`, 
                 0.7513316881082249}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 3469640861300586857]], 
              MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                  Association[
                  "setosa" -> 1, "versicolor" -> 2, "virginica" -> 3]}, 
                "MissingCode" -> 0, "Version" -> {11.3, 0}, "ID" -> 
                8632914170514506599, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]]]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NominalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5976834071906370717]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 3], "Key" -> 
                "f1", "Invertibility" -> "Perfect", "Missing" -> "Allowed"]]},
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
         "Marginal" -> 
         Association[
          "setosa" -> 0.33333333333333337`, "versicolor" -> 
           0.34959349593495936`, "virginica" -> 0.3170731707317074]], "Prior" -> 
       Automatic, "Utility" -> 
       SparseArray[
        Automatic, {3, 4}, 0., {
         1, {{0, 1, 2, 3}, {{2}, {3}, {4}}}, {1., 1., 1.}}], "Threshold" -> 0,
        "TieBreaker" -> RandomChoice, "PerformanceGoal" -> "Quality", 
       "BatchProcessing" -> Automatic, "Model" -> 
       Association["Tree" -> MachineLearning`DecisionTree[
           Association[
           "FeatureIndices" -> RawArray["Integer16",{2, 3, 4, 4, 4}], 
            "NumericalThresholds" -> 
            RawArray["Real32",{-0.17976868152618408`, 
              0.6365044116973877, -0.7863814830780029, 0.544588565826416, 
              0.8107826113700867}], "NominalSplits" -> {}, "Children" -> 
            RawArray["Integer16",{{-5, -6}, {4, -3}, {-1, 5}, {-4, 1}, {
              2, -2}}], "LeafValues" -> 
            RawArray["UnsignedInteger8",{{41, 1, 1}, {1, 1, 26}, {1, 2, 10}, {
              1, 41, 1}, {1, 1, 5}, {1, 2, 1}}], "RootIndex" -> 3, 
            "NominalDimension" -> 0]], "Processor" -> 
         MachineLearning`MLProcessor["Values", 
           Association[
           "Info" -> Association[
             "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]],
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], "Method" -> 
         "DecisionTree", "Options" -> 
         Association[
          "DistributionSmoothing" -> 
           Association["Value" -> 1, "Options" -> Association[]], 
           "FeatureFraction" -> 
           Association["Value" -> 1, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "MeanCrossEntropy", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[0.17467446191488298`, 0.03517241878480595], "Accuracy" -> 
            PlusMinus[0.9255078525400491, 0.01801024624194656], 
            "EvaluationTime" -> 0.000015098214285714287`, "TestSize" -> 648, 
            "TrainingSize" -> 96, "TrainingTime" -> 0.006219785714285712, 
            "TrainingMemory" -> 77482.5714285714, "ModelMemory" -> 5480., 
            "ExperimentCount" -> 27, "ModelUtility" -> 13.082008318578707`, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[0.1593248357066999, 0.04357736834553473], 
              PlusMinus[0.34231791684423307`, 0.15490542008652777`], 
              PlusMinus[0.36006170594744813`, 0.15252542208087796`], 
              PlusMinus[0.662352421075751, 0.2604080364804588], 
              PlusMinus[0.14557822748388835`, 0.03585867088313141], 
              PlusMinus[0.2957899990400963, 0.14722502042392735`], 
              PlusMinus[0.7947600152070875, 0.2818661207202979], 
              PlusMinus[0.28383722371321846`, 0.14281257327577268`], 
              PlusMinus[0.14318120351589544`, 0.0360059403295361], 
              PlusMinus[0.1790753447500716, 0.05329518084675413], 
              PlusMinus[0.39947081571824056`, 0.17793970035739046`], 
              PlusMinus[0.19907434464056528`, 0.07348626898459898], 
              PlusMinus[0.377960185470674, 0.14893500493051579`], 
              PlusMinus[0.43128425901230283`, 0.15973106032550566`], 
              PlusMinus[0.40433864686535664`, 0.1903095134097296], 
              PlusMinus[0.13706210048572845`, 0.041754657133076044`], 
              PlusMinus[0.12586118756450254`, 0.03140116675641163], 
              PlusMinus[0.14318120351589544`, 0.0360059403295361], 
              PlusMinus[0.20683303621607577`, 0.04893185586167128], 
              PlusMinus[0.36561954590704465`, 0.15532762906050857`], 
              PlusMinus[0.3507474594981636, 0.1520421651982244], 
              PlusMinus[0.29552990593869943`, 0.14607633621993127`], 
              PlusMinus[0.2507363594275918, 0.13857337852010082`], 
              PlusMinus[0.20038201461771749`, 0.0733954624317575], 
              PlusMinus[0.34813620936478046`, 0.1493629628786081], 
              PlusMinus[0.4403618240578929, 0.15662555671121248`], 
              PlusMinus[0.6433474749124061, 0.2309543038084965]}, 
            "AccuracyHistory" -> {
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.8533439174457164, 0.07746837342068033], 
              PlusMinus[0.8133439174457163, 0.08369019904548121], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.7733439174457164, 0.0887623228182913], 
              PlusMinus[0.9333439174457164, 0.060099482600047216`], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.9333439174457164, 0.060099482600047216`], 
              PlusMinus[0.8533439174457164, 0.07746837342068033], 
              PlusMinus[0.7733439174457164, 0.0887623228182913], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.9733439174457161, 0.04717252667567297], 
              PlusMinus[0.8533439174457164, 0.07746837342068033], 
              PlusMinus[0.8533439174457164, 0.07746837342068033], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.9333439174457164, 0.060099482600047216`], 
              PlusMinus[0.9333439174457164, 0.060099482600047216`], 
              PlusMinus[0.8933439174457162, 0.06979003040993514], 
              PlusMinus[0.8133439174457163, 0.08369019904548121], 
              PlusMinus[0.7333439174457165, 0.0928733034188235]}, 
            "Configuration" -> {
             "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
              1}, "FinalTrainingSize" -> 120], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
             "TrainingSize", "TrainingTime", "TrainingMemory", "ModelMemory", 
             "ExperimentCount", "ModelUtility", "MeanCrossEntropyHistory", 
             "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 27], 
             TypeSystem`Vector[TypeSystem`AnyType, 27], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 136730451343364]], "Configurations" -> 
         Dataset[
           Association[
           Association[
             "Value" -> "DecisionTree", "Options" -> 
              Association[
               "DistributionSmoothing" -> Association["Value" -> 1], 
                "FeatureFraction" -> Association["Value" -> 1]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.5332801858503222, 0.03383201530580089], 
                 "Accuracy" -> 
                 PlusMinus[0.8644302603859924, 0.021485932709757474`], 
                 "EvaluationTime" -> 0.000011136190476190476`, "TestSize" -> 
                 1675, "TrainingSize" -> 15, "TrainingTime" -> 
                 0.005289764705882353, "TrainingMemory" -> 64216., 
                 "ModelMemory" -> 5480., "ExperimentCount" -> 16, 
                 "ModelUtility" -> 1.481032487085376, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.6752926908396727, 0.0735754294611739], 
                   PlusMinus[0.5301483059910964, 0.051954748206392704`], 
                   PlusMinus[0.41580808618189125`, 0.037989424286611354`], 
                   PlusMinus[0.6651182188317784, 0.07041233779821804], 
                   PlusMinus[0.4277165312213104, 0.04006893089811517], 
                   PlusMinus[0.6541924899069385, 0.06703453013887521], 
                   PlusMinus[0.506086362344426, 0.047376009604012614`], 
                   PlusMinus[0.8761413743124506, 0.08209167663567556], 
                   PlusMinus[0.47284955470506396`, 0.026276659770287338`], 
                   PlusMinus[0.5084525662976931, 0.04431491196312799], 
                   PlusMinus[0.7099597279184794, 0.07484866605474084], 
                   PlusMinus[0.5811125571426713, 0.05689802022111879], 
                   PlusMinus[0.7755676411818617, 0.08377174704307203], 
                   PlusMinus[0.6235109748113256, 0.055114076184789376`], 
                   PlusMinus[0.5739197299681847, 0.05582577856047416], 
                   PlusMinus[0.5524942758298799, 0.05480727561560112]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.8052831478826041, 0.04011769991475643], 
                   PlusMinus[0.9309311800326299, 0.025885890168222996`], 
                   PlusMinus[0.9309311800326299, 0.025885890168222996`], 
                   PlusMinus[0.7928401994440613, 0.040117017800996], 
                   PlusMinus[0.9233219407402273, 0.027318343577841946`], 
                   PlusMinus[0.8004272856013532, 0.03867725179414676], 
                   PlusMinus[0.9331110829444075, 0.025818001792333133`], 
                   PlusMinus[0.6880785110697675, 0.04559104884088584], 
                   PlusMinus[0.9331110829444075, 0.025818001792333133`], 
                   PlusMinus[0.8846275813844473, 0.032298174604935455`], 
                   PlusMinus[0.7777291101927313, 0.0408068612637894], 
                   PlusMinus[0.7812202511012233, 0.041096332604815156`], 
                   PlusMinus[0.8121745161335087, 0.03872189649101314], 
                   PlusMinus[0.735215748550279, 0.0436473708576826], 
                   PlusMinus[0.7812202511012233, 0.041096332604815156`], 
                   PlusMinus[0.7997623480381701, 0.03986570925475925]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.17467446191488298`, 0.03517241878480595], 
                 "Accuracy" -> 
                 PlusMinus[0.9255078525400491, 0.01801024624194656], 
                 "EvaluationTime" -> 0.000015098214285714287`, "TestSize" -> 
                 648, "TrainingSize" -> 96, "TrainingTime" -> 
                 0.006219785714285712, "TrainingMemory" -> 77482.5714285714, 
                 "ModelMemory" -> 5480., "ExperimentCount" -> 27, 
                 "ModelUtility" -> 13.082008318578707`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.1593248357066999, 0.04357736834553473], 
                   PlusMinus[0.34231791684423307`, 0.15490542008652777`], 
                   PlusMinus[0.36006170594744813`, 0.15252542208087796`], 
                   PlusMinus[0.662352421075751, 0.2604080364804588], 
                   PlusMinus[0.14557822748388835`, 0.03585867088313141], 
                   PlusMinus[0.2957899990400963, 0.14722502042392735`], 
                   PlusMinus[0.7947600152070875, 0.2818661207202979], 
                   PlusMinus[0.28383722371321846`, 0.14281257327577268`], 
                   PlusMinus[0.14318120351589544`, 0.0360059403295361], 
                   PlusMinus[0.1790753447500716, 0.05329518084675413], 
                   PlusMinus[0.39947081571824056`, 0.17793970035739046`], 
                   PlusMinus[0.19907434464056528`, 0.07348626898459898], 
                   PlusMinus[0.377960185470674, 0.14893500493051579`], 
                   PlusMinus[0.43128425901230283`, 0.15973106032550566`], 
                   PlusMinus[0.40433864686535664`, 0.1903095134097296], 
                   PlusMinus[0.13706210048572845`, 0.041754657133076044`], 
                   PlusMinus[0.12586118756450254`, 0.03140116675641163], 
                   PlusMinus[0.14318120351589544`, 0.0360059403295361], 
                   PlusMinus[0.20683303621607577`, 0.04893185586167128], 
                   PlusMinus[0.36561954590704465`, 0.15532762906050857`], 
                   PlusMinus[0.3507474594981636, 0.1520421651982244], 
                   PlusMinus[0.29552990593869943`, 0.14607633621993127`], 
                   PlusMinus[0.2507363594275918, 0.13857337852010082`], 
                   PlusMinus[0.20038201461771749`, 0.0733954624317575], 
                   PlusMinus[0.34813620936478046`, 0.1493629628786081], 
                   PlusMinus[0.4403618240578929, 0.15662555671121248`], 
                   PlusMinus[0.6433474749124061, 0.2309543038084965]}, 
                 "AccuracyHistory" -> {
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.8533439174457164, 0.07746837342068033], 
                   PlusMinus[0.8133439174457163, 0.08369019904548121], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.7733439174457164, 0.0887623228182913], 
                   PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                   PlusMinus[0.8533439174457164, 0.07746837342068033], 
                   PlusMinus[0.7733439174457164, 0.0887623228182913], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.9733439174457161, 0.04717252667567297], 
                   PlusMinus[0.8533439174457164, 0.07746837342068033], 
                   PlusMinus[0.8533439174457164, 0.07746837342068033], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                   PlusMinus[0.9333439174457164, 0.060099482600047216`], 
                   PlusMinus[0.8933439174457162, 0.06979003040993514], 
                   PlusMinus[0.8133439174457163, 0.08369019904548121], 
                   PlusMinus[0.7333439174457165, 0.0928733034188235]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000015098214285714287`, 
                "MeanCrossEntropy" -> 
                PlusMinus[0.17467446191488298`, 0.03517241878480595], 
                "ModelMemory" -> 5480., "TrainingMemory" -> 77482.5714285714, 
                "TrainingTime" -> 0.012753507563025209`], "Index" -> 1]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
               TypeSystem`Atom[String], 
               TypeSystem`Struct[{"Value"}, {
                 TypeSystem`Atom[Integer]}], 2]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "TrainingSize", "TrainingTime", "TrainingMemory", 
                 "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "AccuracyHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 1], 
           Association["ID" -> 136726156376068]], "MaxTrainingSize" -> 120, 
         "LastReportingTime" -> 3.764998403347268`16.328339785522008*^9, 
         "PreprocessorEvaluationTime" -> 
         3.55566406250000521804821573823574`4.*^-6, "PreprocessorMemory" -> 
         39272, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 15, "TimeBudgets" -> 0.39999999999999997`, 
             "ElapsedTimes" -> 0.51989, "ExperimentCounts" -> 16], 
            Association[
            "TrainingSizes" -> 96, "TimeBudgets" -> 0.5, "ElapsedTimes" -> 
             0.494555, "ExperimentCounts" -> 27]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[136734746310660]], "ID" -> 
            136739041277956]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> {{5.5, 2.6, 4.4, 1.2}}, "ID" -> 
              3246226001810280355]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 1.488381, "MaxTrainingMemory" -> 
         585832, "DataMemory" -> 28544, "FunctionMemory" -> 118904, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2019, 4, 23, 8, 53, 23.944361`8.131778234460421}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association["Input" -> CompressedData["
1:eJyFUm1KA1EMfK1VKqXU7rpvWy2IZ+gB9p3BIwj2b8+jN/EIhfaXR7GUiiL9
mJnAyyIGlpCXZDKTzePz8umlG0J4OH69ICvS4mzdtFmfbNvMz/bRIL5LqOvT
3ybkv5u315OV7FN+z/d3+nvLI64YB9ZHm4/4xvGomb+i1/wLxtHy4kNh6T9+
wFF9nzg70y+9qL/m3E/2r5qcz8Dhr4hTsX/Yyvv9CE/7gJ+YPr8fxBPjLz3I
//yx/9LxaOvP+dfs79l87UH7z/s9P38/0fgBZ8p34Uv/L/Fn1g9etd2P+OH9
kvHI+KGusP8nXrm+0u3ny/Lin99f4fY3Nn4eH37q+FWmD/WxpV/3q/34+8/n
+3zkvE46AHBLXX4=
       "], 
      "Output" -> {
       "setosa", "versicolor", "setosa", "virginica", "versicolor", 
        "virginica", "virginica", "setosa", "setosa", "setosa", "setosa", 
        "setosa", "virginica", "versicolor", "virginica", "versicolor", 
        "setosa", "versicolor", "versicolor", "virginica", "virginica", 
        "virginica", "versicolor", "setosa", "setosa", "versicolor", "setosa",
         "virginica", "virginica", "virginica", "virginica"}], 
    "Predictions" -> {
     "setosa", "virginica", "setosa", "virginica", "versicolor", "virginica", 
      "virginica", "setosa", "setosa", "setosa", "setosa", "setosa", 
      "virginica", "versicolor", "versicolor", "versicolor", "setosa", 
      "versicolor", "versicolor", "virginica", "virginica", "virginica", 
      "versicolor", "setosa", "setosa", "versicolor", "setosa", "virginica", 
      "virginica", "virginica", "virginica"}, 
    "LogProbabilities" -> CompressedData["
1:eJxTTMoPSmViYGCQB2JmIH74oV9xS9KK/UJvRMQ+iPEdgNFBPYbaLK0sB1b9
fnrt2ae/++/sfFg9+dSF/bjUK3lNuxa1ggtOn3l1tGTvj01wdej6cKnHJY7L
XlqLk+qv95a//jnpfdsPoZ/th/FxqcdlL6nuxRVfpIYzqe4k1f2khjMucVL9
CwACpH01
     "], 
    "CountMatrix" -> {{11, 0, 0, 0}, {0, 7, 1, 0}, {0, 1, 11, 0}}, 
    "IndicesMatrix" -> {{{1, 3, 8, 9, 10, 11, 12, 17, 24, 25, 
       27}, {}, {}, {}}, {{}, {5, 14, 16, 18, 19, 23, 26}, {2}, {}}, {{}, {
       15}, {4, 6, 7, 13, 20, 21, 22, 28, 29, 30, 31}, {}}}, 
    "ExtendedClasses" -> {"setosa", "versicolor", "virginica"}, "Weights" -> 
    SparseArray[Automatic, {31}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.00007929032258064516, "SingleEvaluationTime" -> 
    0.0013825`4., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.765012251489217*^9, {3.765012300648065*^9, 3.7650123262656813`*^9}, 
   3.765012611309931*^9, {3.76501271449102*^9, 3.7650128060039587`*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"ff98216c-f2b5-4ca5-94f3-6cc87c13cfa1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Confusion Matrix", "Subsubsection",
 CellChangeTimes->{{3.7650122576923447`*^9, 
  3.7650122680454597`*^9}},ExpressionUUID->"d09689fa-f4ca-46b0-9095-\
c293ef91a885"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cm", "[", "\"\<Accuracy\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"cm", "[", "\"\<ConfusionMatrixPlot\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.765012273432444*^9, 3.7650122737310343`*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"9173e202-ef4d-4cac-a243-17b0f3b8ddcb"],

Cell[BoxData["0.9354838709677419`"], "Output",
 CellChangeTimes->{{3.7650122743861227`*^9, 3.76501232841954*^9}, 
   3.765012613236661*^9, {3.76501271696938*^9, 3.7650128073382683`*^9}},
 CellLabel->
  "Out[360]=",ExpressionUUID->"6a78e447-51ab-477d-a2d2-197d684ab797"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {0.9292877887027912, 0.8512411211050299, 
   0.6204501336801711}, {1., 0.42, 0.}}, {{1., 1., 1.}, {0.8626524036196145, 
   0.5693676239710415, 0.027679048853248345`}, {0.9292877887027912, 
   0.8512411211050299, 0.6204501336801711}}, {{1., 0.42, 0.}, {1., 1., 1.}, {
   1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "\"setosa\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", "setosa", " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "versicolor", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"setosa\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "virginica", " misclassified as ", "setosa"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"versicolor\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "versicolor"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["7", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "7", "\" examples of \"", "\"versicolor\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "0.875`"}, "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "0.875`"}, "RowDefault"]}, {
           TemplateBox[{"\"FScore = \"", "0.875`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{7, " examples of ", "versicolor", " correctly classified"}], 
         Row[{"Precision = ", 0.875}], 
         Row[{"Recall = ", 0.875}], 
         Row[{"FScore = ", 0.875}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"virginica\"", 
             "\" misclassified as \"", "\"versicolor\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.125`"}, "RowDefault"]}, {
          
           
           TemplateBox[{"\"Row fraction = \"", "0.08333333333333333`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "virginica", " misclassified as ", 
           "versicolor"}], 
         Row[{"Column fraction = ", 0.125}], 
         Row[{"Row fraction = ", 0.08333333333333333}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "\"setosa\"", "\" misclassified as \"", 
             "\"virginica\""}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          0, " example of ", "setosa", " misclassified as ", "virginica"}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["1", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "1", "\" example of \"", "\"versicolor\"", 
             "\" misclassified as \"", "\"virginica\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.08333333333333333`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.125`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{
          1, " example of ", "versicolor", " misclassified as ", 
           "virginica"}], 
         Row[{"Column fraction = ", 0.08333333333333333}], 
         Row[{"Row fraction = ", 0.125}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "11", "\" examples of \"", "\"virginica\"", 
             "\" correctly classified\""}, "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9166666666666666`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", "virginica", " correctly classified"}], 
         Row[{"Precision = ", 0.9166666666666666}], 
         Row[{"Recall = ", 0.9166666666666666}], 
         Row[{"FScore = ", 0.9166666666666666}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "11", "\" example\"", "\"s\"", "\" of class \"", "\"setosa\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{11, " example", "s", " of class ", "setosa"}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "8", "\" example\"", "\"s\"", "\" of class \"", "\"versicolor\""}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "0.875`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{8, " example", "s", " of class ", "versicolor"}], 
        Row[{"Recall = ", 0.875}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "12", "\" example\"", "\"s\"", "\" of class \"", "\"virginica\""}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{12, " example", "s", " of class ", "virginica"}], 
        Row[{"Recall = ", 0.9166666666666666}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "11", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"setosa\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{11, " example", "s", " classified as ", "setosa"}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "8", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"versicolor\""}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "0.875`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{8, " example", "s", " classified as ", "versicolor"}], 
        Row[{"Precision = ", 0.875}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "12", "\" example\"", "\"s\"", "\" classified as \"", 
            "\"virginica\""}, "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{12, " example", "s", " classified as ", "virginica"}], 
        Row[{"Precision = ", 0.9166666666666666}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{2.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 0.], TraditionalForm]}, {
      0.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 0.], 
        TraditionalForm]}}, {{2.5, 
       FormBox["11", TraditionalForm]}, {1.5, 
       FormBox["8", TraditionalForm]}, {0.5, 
       FormBox["12", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["11", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["8", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["12", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"setosa\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"versicolor\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"virginica\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.7650122743861227`*^9, 3.76501232841954*^9}, 
   3.765012613236661*^9, {3.76501271696938*^9, 3.7650128074310226`*^9}},
 CellLabel->
  "Out[361]=",ExpressionUUID->"ac2e49b2-76d1-4ed2-9932-bc5401c8a06c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fbe4093a-d6c3-4c7c-844c-9d5349e74110"],

Cell[CellGroupData[{

Cell["Section head (*Section*)", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308863196991*^9, 
   3.5143088633311243`*^9}},ExpressionUUID->"de625789-4f17-4bae-862d-\
ce8b5c1fca5b"],

Cell["\<\
Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Pellentesque enim \
dolor, euismod sit amet, rutrum nec, fermentum id, risus. (*Text*)\
\>", "Text",
 CellChangeTimes->{{3.514308661619236*^9, 
  3.514308664754455*^9}},ExpressionUUID->"bcba83f5-9612-4019-a713-\
80dbebd6c7f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  NamespaceBox["WolframAlphaQueryParseResults",
   DynamicModuleBox[{Typeset`q$$ = "sum of 2 and 2 ", Typeset`newq$$ = 
    "sum of 2 and 2 ", Typeset`chosen$$ = "2 + 2"}, 
    PaneSelectorBox[{False->
     DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
      WolframAlphaClient`Private`assumptionsQ$$ = True}, 
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            InputFieldBox[Dynamic[Typeset`newq$$], String,
             Appearance->None,
             BaseStyle->{"CalculateInput"},
             ContinuousAction->True,
             Enabled->True,
             FieldSize->{{1, 40}, {1, 
                DirectedInfinity[1]}},
             TrapSelection->False], 
            ButtonBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\"\[RightGuillemet]\"\>",
                StripOnInput->False,
                LineColor->RGBColor[1, 0.5, 0],
                FrontFaceColor->RGBColor[1, 0.5, 0],
                BackFaceColor->RGBColor[1, 0.5, 0],
                GraphicsColor->RGBColor[1, 0.5, 0],
                FontColor->RGBColor[1, 0.5, 0]],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource[
                 "WAStrings", "InterpretationAssumptions"], StandardForm]]],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
             Appearance->None,
             BaselinePosition->Baseline,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; WolframAlphaClient`Private`open$1012 = True; 
              WolframAlphaClient`Private`extrudeFromFastParse[
               "sum of 2 and 2 ", 
                Defer[2 + 2], "Fast parse"]; 
              WolframAlphaClient`Private`open$1012 = False),
             ContentPadding->False,
             Evaluator->Automatic,
             Method->"Queued"], 
            ItemBox[
             ButtonBox[
              PaneSelectorBox[{True->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "OrangeSquarePlus"],
                  ImageSizeCache->{10., {3., 8.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ], False->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "GraySquarePlus"],
                  ImageSizeCache->{10., {3., 8.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
               ImageSize->All],
              Appearance->None,
              ButtonFunction:>(Quiet[
                 WolframAlpha[]]; If[
                 Or[
                  CurrentValue["OptionKey"], 
                  CurrentValue["AltKey"]], SelectionMove[
                   ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                 NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                   Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], 
                 WolframAlphaClient`Private`open$1012 = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  "sum of 2 and 2 ", 
                   Defer[2 + 2], "Fast parse"]; 
                 WolframAlphaClient`Private`open$1012 = False]),
              Evaluator->Automatic,
              Method->"Queued"],
             Alignment->{Right, Top},
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 StyleBox[
                  RowBox[{"2", " ", "+", " ", "2"}],
                  StripOnInput->False,
                  NumberMarks->False], True->
                 StyleBox[
                  RowBox[{"2", " ", "+", " ", "2"}],
                  StripOnInput->False,
                  ShowSyntaxStyles->False,
                  NumberMarks->False,
                  FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{ShowStringCharacters -> True},
                 FrameMargins->0,
                 ImageSize->Automatic],
                Alignment->Left,
                Appearance->None,
                BaseStyle->{},
                ButtonFunction:>(SelectionMove[
                   ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                    BoxData[
                    RowBox[{"2", " ", "+", " ", "2"}]], "Input"], All]; 
                 SelectionMove[
                   ButtonNotebook[], After, CellContents]),
                Evaluator->Automatic,
                ImageSize->Automatic,
                Method->"Preemptive"],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                 StandardForm]]],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
               "Tooltip"]& ],
             AppearanceElements->{},
             BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
             ImageSize->{Automatic, {1, 100}},
             Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
            "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          FrameStyle->GrayLevel[0.85],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        Alignment->Top,
        Background->Dynamic[
          FEPrivate`If[
           FEPrivate`And[
            FEPrivate`SameQ[
             FEPrivate`Head[Typeset`newq$$], String], 
            FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
           RGBColor[1., 0.975, 0.95], 
           GrayLevel[1]]],
        BaselinePosition->Baseline,
        FrameStyle->GrayLevel[0.85],
        ImageSize->Automatic,
        RoundingRadius->5,
        StripOnInput->False],
       EventHandlerTag[{
        "MouseEntered" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
         "MouseExited" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
         PassEventsDown -> Automatic, PassEventsUp -> True}]],
      DynamicModuleValues:>{}], True->
     TagBox[GridBox[{
        {
         DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
          WolframAlphaClient`Private`assumptionsQ$$ = True}, 
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                InputFieldBox[Dynamic[Typeset`newq$$], String,
                 Appearance->None,
                 BaseStyle->{"CalculateInput"},
                 ContinuousAction->True,
                 Enabled->True,
                 FieldSize->{{1, 40}, {1, 
                    DirectedInfinity[1]}},
                 TrapSelection->False], 
                ButtonBox[
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\"\[RightGuillemet]\"\>",
                    StripOnInput->False,
                    LineColor->RGBColor[1, 0.5, 0],
                    FrontFaceColor->RGBColor[1, 0.5, 0],
                    BackFaceColor->RGBColor[1, 0.5, 0],
                    GraphicsColor->RGBColor[1, 0.5, 0],
                    FontColor->RGBColor[1, 0.5, 0]],
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                  Annotation[#, 
                   Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                 
                 Appearance->None,
                 BaselinePosition->Baseline,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; 
                  WolframAlphaClient`Private`open$1012 = True; 
                  WolframAlphaClient`Private`extrudeFromFastParse[
                   "sum of 2 and 2 ", 
                    Defer[2 + 2], "Fast parse"]; 
                  WolframAlphaClient`Private`open$1012 = False),
                 ContentPadding->False,
                 Evaluator->Automatic,
                 Method->"Queued"], 
                ItemBox[
                 ButtonBox[
                  PaneSelectorBox[{True->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                   WolframAlphaClient`Private`show$$],
                   ImageSize->All],
                  Appearance->None,
                  ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], 
                    WolframAlphaClient`Private`open$1012 = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "sum of 2 and 2 ", 
                    Defer[2 + 2], "Fast parse"]; 
                    WolframAlphaClient`Private`open$1012 = False]),
                  Evaluator->Automatic,
                  Method->"Queued"],
                 Alignment->{Right, Top},
                 StripOnInput->False]},
               {
                PaneBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"2", " ", "+", " ", "2"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"2", " ", "+", " ", "2"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Alignment->Left,
                    Appearance->None,
                    BaseStyle->{},
                    ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"2", " ", "+", " ", "2"}]], "Input"], All]; 
                    SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                    Evaluator->Automatic,
                    ImageSize->Automatic,
                    Method->"Preemptive"],
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                  Annotation[#, 
                   Dynamic[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]],
                    "Tooltip"]& ],
                 AppearanceElements->{},
                 BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                 ImageSize->{Automatic, {1, 100}},
                 Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
                "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              FrameStyle->GrayLevel[0.85],
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Alignment->Top,
            Background->Dynamic[
              FEPrivate`If[
               FEPrivate`And[
                FEPrivate`SameQ[
                 FEPrivate`Head[Typeset`newq$$], String], 
                FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
               RGBColor[1., 0.975, 0.95], 
               GrayLevel[1]]],
            BaselinePosition->Baseline,
            FrameStyle->GrayLevel[0.85],
            ImageSize->Automatic,
            RoundingRadius->5,
            StripOnInput->False],
           
           EventHandlerTag[{
            "MouseEntered" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
             "MouseExited" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, False], 
             PassEventsDown -> Automatic, PassEventsUp -> True}]],
          DynamicModuleValues:>{}]},
        {
         InterpretationBox[
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEExpressions", "NecklaceAnimator"][20]],
           AnimatorBoxOptions->{ImageSize->20}],
          Animator[Appearance -> "Necklace", ImageSize -> 20],
          BaseStyle->{Deployed -> True}]}
       },
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}, Dynamic[WolframAlphaClient`Private`open$1012],
     BaseStyle->{Deployed -> True},
     ImageSize->Automatic],
    DynamicModuleValues:>{}],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], 
  RowBox[{"(*", "WolframAlphaShortInput", "*)"}]}]], "WolframAlphaShortInput",\

 CellChangeTimes->{{3.514918033549407*^9, 
  3.5149180444649057`*^9}},ExpressionUUID->"21dd8dcd-22a2-4b5b-8888-\
006b4094551f"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.514905592270006*^9, 3.514905608489109*^9}, {
   3.51490624594149*^9, 3.51490627574961*^9}, 3.51491802901772*^9, 
   3.514918082749625*^9, 
   3.517669336028524*^9},ExpressionUUID->"13d4bb6d-08cd-4fad-ac26-\
0d762285dfa1"]
}, Open  ]],

Cell["sum of 2 and 2 (*WolframAlphaLong*)", "WolframAlphaLong",
 CellChangeTimes->{{3.514913736662691*^9, 3.514913756135517*^9}, {
  3.514918063426704*^9, 3.51491809335273*^9}, {3.5176693059280252`*^9, 
  3.517669342886785*^9}, {3.5176701818031387`*^9, 
  3.517670196065504*^9}},ExpressionUUID->"21a0112f-0da1-4fb6-86c9-\
51f7d7e37e20"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1004},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->{"SlideShow" -> True},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Presentation"], MenuSortingValue -> None], 
      Cell[
       StyleData[All, "Condensed"], MenuSortingValue -> None], 
      Cell[
       StyleData[All, "SlideShow"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.739193, 0.750317, 0.747173]}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], ShowCellBracket -> Automatic, ShowGroupOpener -> 
          False, CellMargins -> {{100, 100}, {14, 50}}, 
          CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
          CellFrameMargins -> {{20, 20}, {20, 20}}, DefaultNewInlineCellStyle -> 
          "None", InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, TextAlignment -> Center, LineSpacing -> {1, 0}, 
          LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Title",
           CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
          "Arial", FontSize -> 45, FontWeight -> "Bold", FontSlant -> "Plain",
           FontTracking -> "Plain", 
          FontVariations -> {
           "Outline" -> False, "Shadow" -> False, "StrikeThrough" -> False, 
            "Underline" -> False}, FontColor -> 
          RGBColor[
           0.8156862745098039, 0.07058823529411765, 0.07058823529411765], 
          Background -> None, FontVariations -> {"Masked" -> False}], 
         Cell[
          StyleData["Title", "Presentation", StyleDefinitions -> None], 
          CellMargins -> {{55, 3}, {14, 125}}, LineSpacing -> {1, 5}, 
          FontSize -> 48], 
         Cell[
          StyleData[
          "Title", "SlideShow", StyleDefinitions -> 
           StyleData["Title", "Presentation"]], 
          CellMargins -> {{100, 100}, {52, 105}}, FontColor -> GrayLevel[1]], 
         
         Cell[
          StyleData["Title", "Printout", StyleDefinitions -> None], 
          CellMargins -> {{2, 0}, {0, 20}}, FontSize -> 24]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subtitle"], ShowCellBracket -> Automatic, 
          CellMargins -> {{0, 0}, {0, 5}}, 
          CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> False,
           DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, TextAlignment -> Center, LanguageCategory -> 
          "NaturalLanguage", CounterIncrements -> "Subtitle", 
          CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
            "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Arial", 
          FontSize -> 27, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> RGBColor[0.4, 0.4, 0.4], Background -> None], 
         Cell[
          StyleData["Subtitle", "Presentation", StyleDefinitions -> None], 
          CellMargins -> {{58, 0}, {0, 5}}, FontSize -> 36], 
         Cell[
          StyleData[
          "Subtitle", "SlideShow", StyleDefinitions -> StyleData["Subtitle"]],
           CellMargins -> {{0, 0}, {0, 5}}, FontSize -> 27, FontColor -> 
          RGBColor[
           0.9019607843137255, 0.9019607843137255, 0.9019607843137255]], 
         Cell[
          StyleData["Subtitle", "Printout", StyleDefinitions -> None], 
          CellMargins -> {{2, 0}, {0, 5}}, FontSize -> 18, Background -> 
          GrayLevel[1]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubtitle", StyleDefinitions -> StyleData["Subtitle"]],
           CellMargins -> {{0, 0}, {30, 5}}, FontSize -> 24, FontSlant -> 
          "Plain", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsubtitle", "Presentation"], FontSize -> 24], 
         Cell[
          StyleData[
          "Subsubtitle", "SlideShow", StyleDefinitions -> 
           StyleData["Subsubtitle"]], CellMargins -> {{0, 0}, {10, 5}}, 
          FontColor -> 
          RGBColor[
           0.9019607843137255, 0.9019607843137255, 0.9019607843137255]], 
         Cell[
          StyleData["Subsubtitle", "Printout"], FontSize -> 14]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0.2, 0}}, 
          ShowGroupOpener -> False, CellMargins -> {{60, 50}, {7, 25}}, 
          FontSize -> 36, FontWeight -> "Plain", FontColor -> 
          RGBColor[
           0.8156862745098039, 0.07058823529411765, 0.07058823529411765]], 
         Cell[
          StyleData["Section", "Presentation"], 
          CellFrame -> {{0, 0}, {0.2, 0}}, 
          CellMargins -> {{58, 50}, {7, 35}}], 
         Cell[
          StyleData[
          "Section", "SlideShow", StyleDefinitions -> 
           StyleData["Section", "Presentation"]], 
          CellMargins -> {{58, 50}, {10, 35}}], 
         Cell[
          StyleData["Section", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {4, 22}}, FontSize -> 20]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          False, CellMargins -> {{60, Inherited}, {0, 15}}, 
          CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
          False, DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Subsection", 
          CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
          "Helvetica", FontSize -> 24, FontWeight -> "Plain", FontSlant -> 
          "Plain", FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsection", "Presentation"], ShowGroupOpener -> True, 
          WholeCellGroupOpener -> True, CellMargins -> {{60, 50}, {0, 20}}, 
          LineSpacing -> {1, 0}, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["Subsection", "SlideShow"], ShowGroupOpener -> True, 
          WholeCellGroupOpener -> True, CellMargins -> {{60, 50}, {8, 12}}, 
          LineSpacing -> {1, 0}, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["Subsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {0, 17}}, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          False, CellMargins -> {{60, Inherited}, {0, 15}}, 
          CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
          False, DefaultNewInlineCellStyle -> "None", 
          InputAutoReplacements -> {"TeX" -> StyleBox[
              RowBox[{"T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
              RowBox[{"L", 
                StyleBox[
                 AdjustmentBox[
                 "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                  BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                AdjustmentBox[
                "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                 BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
            "Mma" -> "Mathematica", "MMA" -> "Mathematica", "gridMathematica" -> 
            FormBox[
              RowBox[{"grid", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            "webMathematica" -> FormBox[
              RowBox[{"web", 
                AdjustmentBox[
                 StyleBox["Mathematica", FontSlant -> "Italic"], 
                 BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
            Inherited}, LanguageCategory -> "NaturalLanguage", 
          CounterIncrements -> "Subsubsection", FontFamily -> "Helvetica", 
          FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", 
          FontColor -> RGBColor[0.4, 0.4, 0.4]], 
         Cell[
          StyleData["Subsubsection", "Presentation"], ShowGroupOpener -> True,
           WholeCellGroupOpener -> True, CellMargins -> {{60, 50}, {0, 20}}, 
          LineSpacing -> {1, 0}], 
         Cell[
          StyleData[
          "Subsubsection", "SlideShow", StyleDefinitions -> 
           StyleData["Subsubsection", "Presentation"]]], 
         Cell[
          StyleData["Subsubsection", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{2, 0}, {0, 22}}, FontSize -> 14]}, Closed]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], CellMargins -> {{60, 10}, {7, 7}}, 
             InputAutoReplacements -> {"TeX" -> StyleBox[
                 RowBox[{"T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "LaTeX" -> StyleBox[
                 RowBox[{"L", 
                   StyleBox[
                    AdjustmentBox[
                    "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
                    BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
                   AdjustmentBox[
                   "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, 
                    BoxBaselineShift -> 0.5], "X"}]], "mma" -> "Mathematica", 
               "Mma" -> "Mathematica", "MMA" -> "Mathematica", 
               "gridMathematica" -> FormBox[
                 RowBox[{"grid", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               "webMathematica" -> FormBox[
                 RowBox[{"web", 
                   AdjustmentBox[
                    StyleBox["Mathematica", FontSlant -> "Italic"], 
                    BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
               Inherited}, LineSpacing -> {1, 3}, CounterIncrements -> "Text",
              FontFamily -> "Helvetica", FontSize -> 12], 
            Cell[
             StyleData["Text", "Presentation"], 
             CellMargins -> {{60, 50}, {10, 10}}, FontSize -> 17], 
            Cell[
             StyleData[
             "Text", "SlideShow", StyleDefinitions -> 
              StyleData["Text", "Presentation"]]], 
            Cell[
             StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
             TextJustification -> 0.5, Hyphenation -> True, FontSize -> 10]}, 
           Closed]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Item", StyleDefinitions -> StyleData["Text"]], 
             CellDingbat -> 
             Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
             ShowGroupOpener -> False, CellMargins -> {{84, 10}, {7, 7}}, 
             ReturnCreatesNewCell -> True, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
             CounterIncrements -> "Item"], 
            Cell[
             StyleData["Item", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "Item", "SlideShow", StyleDefinitions -> 
              StyleData["Item", "Presentation"]]], 
            Cell[
             StyleData["Item", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subitem", StyleDefinitions -> StyleData["Item"]], 
             CellMargins -> {{108, 10}, {7, 7}}, ReturnCreatesNewCell -> True,
              CellGroupingRules -> {"GroupTogetherNestedGrouping", 15150}, 
             CounterIncrements -> "Subitem"], 
            Cell[
             StyleData["Subitem", "Presentation"], 
             CellMargins -> {{146, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "Subitem", "SlideShow", StyleDefinitions -> 
              StyleData["Subitem", "Presentation"]]], 
            Cell[
             StyleData["Subitem", "Printout"], 
             CellMargins -> {{67, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ItemNumbered", StyleDefinitions -> StyleData["Text"]],
              CellDingbat -> Cell[
               TextData[{
                 CounterBox["ItemNumbered"], "."}]], ShowGroupOpener -> False,
              CellMargins -> {{84, 10}, {7, 7}}, ReturnCreatesNewCell -> True,
              CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
             CounterIncrements -> "ItemNumbered"], 
            Cell[
             StyleData["ItemNumbered", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "ItemNumbered", "SlideShow", StyleDefinitions -> 
              StyleData["ItemNumbered", "Presentation"]]], 
            Cell[
             StyleData["ItemNumbered", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "SubitemNumbered", StyleDefinitions -> 
              StyleData["ItemNumbered"]], CellDingbat -> Cell[
               TextData[{
                 CounterBox["SubitemNumbered", CounterFunction :> (Part[
                    CharacterRange["a", "z"], #]& )], "."}]], 
             CellMargins -> {{108, 10}, {7, 7}}, ReturnCreatesNewCell -> True,
              CellGroupingRules -> {"GroupTogetherNestedGrouping", 15150}, 
             CounterIncrements -> "SubitemNumbered"], 
            Cell[
             StyleData["SubitemNumbered", "Presentation"], 
             CellMargins -> {{146, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "SubitemNumbered", "SlideShow", StyleDefinitions -> 
              StyleData["SubitemNumbered", "Presentation"]]], 
            Cell[
             StyleData["SubitemNumbered", "Printout"], 
             CellMargins -> {{67, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "ItemParagraph", StyleDefinitions -> StyleData["Item"]], 
             CellDingbat -> None, CellMargins -> {{84, 10}, {7, 7}}, 
             ReturnCreatesNewCell -> True, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
             CounterIncrements -> "ItemParagraph"], 
            Cell[
             StyleData["ItemParagraph", "Presentation"], 
             CellMargins -> {{124, 10}, {7, 7}}], 
            Cell[
             StyleData[
             "ItemParagraph", "SlideShow", StyleDefinitions -> 
              StyleData["ItemParagraph", "Presentation"]]], 
            Cell[
             StyleData["ItemParagraph", "Printout"], 
             CellMargins -> {{39, 2}, {0, 6}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData[
             "SubitemParagraph", StyleDefinitions -> StyleData["Subitem"]], 
             CellDingbat -> None, ReturnCreatesNewCell -> True, 
             CellGroupingRules -> {"GroupTogetherNestedGrouping", 15200}, 
             CounterIncrements -> "SubitemParagraph"], 
            Cell[
             StyleData["SubitemParagraph", "Presentation"]], 
            Cell[
             StyleData[
             "SubitemParagraph", "SlideShow", StyleDefinitions -> 
              StyleData["SubitemParagraph", "Presentation"]]], 
            Cell[
             StyleData["SubitemParagraph", "Printout"]]}, Closed]]}, Open]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["DisplayFormula"]], 
         Cell[
          StyleData["DisplayFormula", "Presentation"], 
          CellMargins -> {{60, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "DisplayFormula", "SlideShow", StyleDefinitions -> 
           StyleData["DisplayFormula", "Presentation"]]], 
         Cell[
          StyleData["DisplayFormula", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, FontSize -> 
          10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "DisplayFormulaNumbered", StyleDefinitions -> 
           StyleData["DisplayFormula"]], CellFrameLabels -> {{None, 
             Cell[
              TextData[{"(", 
                CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
          CounterIncrements -> "DisplayFormulaNumbered"], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Presentation"], 
          CellMargins -> {{60, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "DisplayFormulaNumbered", "SlideShow", StyleDefinitions -> 
           StyleData["DisplayFormulaNumbered", "Presentation"]]], 
         Cell[
          StyleData["DisplayFormulaNumbered", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Inline Formatting", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InlineFormula"]], 
         Cell[
          StyleData["InlineFormula", "Presentation"], FontSize -> 17], 
         Cell[
          StyleData[
          "InlineFormula", "SlideShow", StyleDefinitions -> 
           StyleData["InlineFormula", "Presentation"]]], 
         Cell[
          StyleData["InlineFormula", "Printout"]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], ShowCellBracket -> True, ShowGroupOpener -> 
          False, CellMargins -> {{103, 10}, {5, 7}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
          True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
          True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
          DefaultFormatType -> DefaultInputFormatType, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
          FormatType -> InputForm, ShowStringCharacters -> True, NumberMarks -> 
          True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
          CounterIncrements -> "Input", FontWeight -> "Bold"], 
         Cell[
          StyleData["Input", "Presentation"], 
          CellMargins -> {{110, 50}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Input", "SlideShow", StyleDefinitions -> 
           StyleData["Input", "Presentation"]]], 
         Cell[
          StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], ShowCellBracket -> True, ShowGroupOpener -> 
          False, CellMargins -> {{103, 10}, {7, 7}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
          True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
          True, DefaultFormatType -> DefaultInputFormatType, 
          "TwoByteSyntaxCharacterAutoReplacement" -> True, 
          HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"},
           AutoItalicWords -> {}, LanguageCategory -> "Mathematica", 
          FormatType -> InputForm, ShowStringCharacters -> True, NumberMarks -> 
          True, LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, 
          CounterIncrements -> "Input", MenuSortingValue -> 1550, FontWeight -> 
          "Bold"], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{110, Inherited}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "InputOnly", "SlideShow", StyleDefinitions -> 
           StyleData["InputOnly", "Presentation"]]], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], ShowCellBracket -> True, 
          CellMargins -> {{103, 10}, {7, 5}}, 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, 
          CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping", 
          CellHorizontalScrolling -> True, PageBreakWithin -> False, 
          GroupPageBreakWithin -> False, GeneratedCell -> True, 
          CellAutoOverwrite -> True, DefaultFormatType -> 
          DefaultOutputFormatType, "TwoByteSyntaxCharacterAutoReplacement" -> 
          True, HyphenationOptions -> {
           "HyphenationCharacter" -> "\[Continuation]"}, 
          AutoItalicWords -> {}, LanguageCategory -> None, FormatType -> 
          InputForm, CounterIncrements -> "Output"], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{110, 50}, {10, 8}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Output", "SlideShow", StyleDefinitions -> 
           StyleData["Output", "Presentation"]]], 
         Cell[
          StyleData["Output", "Printout"], CellMargins -> {{39, 0}, {6, 4}}, 
          FontSize -> 9]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"], CellMargins -> {{103, 10}, {5, 10}}], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{110, 50}, {8, 10}}, LineSpacing -> {1, 0}, 
          FontSize -> 17], 
         Cell[
          StyleData[
          "Code", "SlideShow", StyleDefinitions -> 
           StyleData["Code", "Presentation"]]], 
         Cell[
          StyleData["Code", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Print"], 
          CellMargins -> {{103, Inherited}, {Inherited, Inherited}}, FontSize -> 
          14], 
         Cell[
          StyleData["Print", "Presentation"], 
          CellMargins -> {{70, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
          FontSize -> 17, Magnification -> Inherited 1.5], 
         Cell[
          StyleData[
          "Print", "SlideShow", StyleDefinitions -> 
           StyleData["Print", "Presentation"]]], 
         Cell[
          StyleData["Print", "Printout"], 
          CellMargins -> {{39, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "WolframAlphaShortInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{98, 10}, {5, 7}}, EvaluationMode -> 
          "WolframAlphaShort", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               DynamicBox[
                FEPrivate`FrontEndResource["WABitmaps", "Equal"]]], 
              CellBaseline -> Baseline], None}, {None, None}}, FormatType -> 
          TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["WolframAlphaShortInput", "Presentation"], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData[
          "WolframAlphaShortInput", "SlideShow", StyleDefinitions -> 
           StyleData["WolframAlphaShortInput", "Presentation"]]], 
         Cell[
          StyleData["WolframAlphaShortInput", "Printout"], 
          CellFrameLabelMargins -> 3]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "WolframAlphaLong", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{100, 10}, {5, 7}}, 
          StyleKeyMapping -> {
           "=" -> "Input", "Backspace" -> "WolframAlphaShort"}, 
          EvaluationMode -> "WolframAlphaLong", 
          CellEventActions -> {"ReturnKeyDown" :> FrontEndTokenExecute[
              EvaluationNotebook[], "HandleShiftReturn"]}, 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               DynamicBox[
                FEPrivate`FrontEndResource["WABitmaps", "SpikeyEqual"]]]], 
             None}, {None, None}}, DefaultFormatType -> TextForm, FormatType -> 
          TextForm, FontFamily -> "Helvetica"], 
         Cell[
          StyleData["WolframAlphaLong", "Presentation"], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData[
          "WolframAlphaLong", "SlideShow", StyleDefinitions -> 
           StyleData["WolframAlphaLong", "Presentation"]], 
          CellMargins -> {{107, 50}, {8, 10}}], 
         Cell[
          StyleData["WolframAlphaLong", "Printout"], CellFrameLabelMargins -> 
          3]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Program"], CellMargins -> {{60, 4}, {6, 8}}], 
         Cell[
          StyleData["Program", "Presentation"], 
          CellMargins -> {{60, 50}, {8, 10}}, LineSpacing -> {1, 0}, FontSize -> 
          17], 
         Cell[
          StyleData[
          "Program", "SlideShow", StyleDefinitions -> 
           StyleData["Program", "Presentation"]]], 
         Cell[
          StyleData["Program", "Printout"], CellMargins -> {{2, 0}, {0, 8}}, 
          FontSize -> 10]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["CellLabel"]], 
         Cell[
          StyleData["CellLabel", "Presentation"], FontSize -> 12], 
         Cell[
          StyleData[
          "CellLabel", "SlideShow", StyleDefinitions -> 
           StyleData["CellLabel", "Presentation"]]], 
         Cell[
          StyleData["CellLabel", "Printout"], FontSize -> 8, FontColor -> 
          GrayLevel[0.]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ManipulateLabel"]], 
         Cell[
          StyleData["ManipulateLabel", "Presentation"], FontSize -> 15], 
         Cell[
          StyleData[
          "ManipulateLabel", "SlideShow", StyleDefinitions -> 
           StyleData["ManipulateLabel", "Presentation"]]], 
         Cell[
          StyleData["ManipulateLabel", "Printout"], FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["GraphicsLabel"]], 
         Cell[
          StyleData["GraphicsLabel", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData[
          "GraphicsLabel", "SlideShow", StyleDefinitions -> 
           StyleData["GraphicsLabel", "Presentation"]]], 
         Cell[
          StyleData["GraphicsLabel", "Printout"], FontSize -> 8]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics3DLabel"]], 
         Cell[
          StyleData["Graphics3DLabel", "Presentation"], FontSize -> 14], 
         Cell[
          StyleData[
          "Graphics3DLabel", "SlideShow", StyleDefinitions -> 
           StyleData["Graphics3DLabel", "Presentation"]]], 
         Cell[
          StyleData["Graphics3DLabel", "Printout"], FontSize -> 8]}, 
        Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for SlideShow", "Section", 
       CellChangeTimes -> {{3.514665148412793*^9, 3.5146651505550737`*^9}}], 
      Cell[
       StyleData["slideshowheader"], ShowCellBracket -> False, 
       CellMargins -> {{0, 0}, {0, -2}}, Evaluatable -> False, 
       CellHorizontalScrolling -> False, PageBreakBelow -> False, 
       CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
       ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
       GrayLevel[1], CellPadding -> 0, CellFramePadding -> 0], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["hidefromslideshowgraphic"], ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
          CellHorizontalScrolling -> False, PageBreakBelow -> False, 
          CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
          ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
          None, CellPadding -> 0], 
         Cell[
          StyleData["hidefromslideshowgraphic", "SlideShow"], ShowCellBracket -> 
          False, CellElementSpacings -> {
           "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, 
            "ClosedGroupTopMargin" -> 0}, CellOpen -> False, 
          CellHorizontalScrolling -> False], 
         Cell[
          StyleData["hidefromslideshowgraphic", "Printout"], Magnification -> 
          0.6]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["slideshowheader2"], ShowCellBracket -> False, 
          CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
          CellHorizontalScrolling -> False, PageBreakBelow -> False, 
          ImageMargins -> {{0, 0}, {0, 0}}, ImageRegion -> {{0, 1}, {0, 1}}, 
          Magnification -> 1, Background -> GrayLevel[1]], 
         Cell[
          StyleData["ConferenceGraphicCell", "SlideShow"], ShowCellBracket -> 
          False, CellElementSpacings -> {
           "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, 
            "ClosedGroupTopMargin" -> 0}, CellOpen -> False, 
          CellHorizontalScrolling -> True], 
         Cell[
          StyleData["slideshowheader", "Printout"], FontSize -> 8, 
          Magnification -> 0.75]}, Closed]], 
      Cell[
       StyleData[
       "ConferenceGraphicCellSlideShowOnly", StyleDefinitions -> 
        StyleData["ConferenceCellGraphic"]], ShowCellBracket -> False, 
       CellMargins -> 0, 
       CellElementSpacings -> {
        "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, "ClosedGroupTopMargin" -> 
         0}, CellOpen -> False], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SlideShowNavigationBar"], Editable -> True, Selectable -> 
          False, CellFrame -> 0, ShowGroupOpener -> False, 
          CellMargins -> {{0, 0}, {3, 3}}, CellOpen -> True, CellFrameMargins -> 
          0, CellFrameColor -> None, Background -> None], 
         Cell[
          StyleData["SlideShowNavigationBar", "Printout"], PageBreakAbove -> 
          Automatic]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Slide Show Environment Documents", "Section", 
       CellChangeTimes -> {{3.559592561220532*^9, 3.559592575768806*^9}, 
         3.559652073182283*^9}], 
      Cell[
       StyleData["FirstSlide"], 
       PrivateCellOptions -> {
        "PagewiseNotebookBaseStyle" -> {
          FrontEnd`BackgroundAppearance -> FrontEnd`CurrentValue[
             FrontEnd`EvaluationNotebook[], {
             FrontEnd`UnknownOptions, presentertemplt`firstslideimage}]}}]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "11.3 for Linux x86 (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
presentertemplt`firstslideimage -> Image[CompressedData["
1:eJzt3UmudOtVreFDUqBIF5BL0AKqFKkaIcq2MBYVI9lIiF7QEMDkeZ7n0CNz
flmW5eO9IlYykzHmfAuTey+6hR0r9ol4/jHm9+2f+uqvfflXfvSzzz771k98
/j++/JXf+LlvfvMrv/kLP/n5/+MXv/GtX/36N772yz//jV//2te/9s2f/eqP
ff6//K0f+eyzX/r8//+Pf/5//853vvPZp/+DYRiGYRiGeTbfc9Vvf+lnmID5
nS/99OH87pv59pv5vRfz+yfmDz7/+d7NH76ZPzoxf3xy/uTC/OmF+bOL8+c3
5y+C5i+D56+Y1ol+P6N+z+78jl/9b+nTXPlv9ex//2c/U858Pn2ad59zZz4r
z3zmHn1ev/us//aJ74uj75nu70Dmu4OtYsfVVe8+a7pcdeVzuspVeIrpcJaT
sTJ8FW0sfMVkDraKG0VXVWVVZ13lmlWpearbDEfz1wLT/QwqrLXZWPgKXzkM
toqZqa46Y6vOrGqLqbpNoOKmSQZTcZaSsaIzrAhfnTHWE1+dMRa+8hts9Xxw
lb6rOro/V091m6d7HJ3lkGN1ZVgOvnqaX73a8+3+ftw62OrZ4KpZpurOqTCU
5mxyloqxqjtCdV/dza7wVc9gq/sz1VWqWZWyqdQ91W2TqaPsrGpjTciwInx1
xlh3+0F85TPY6t7gKlylbKpuc2wcVWdNMNYmX7F7NWOw1fW5e4fVBldhqh5P
dbvibwSn+5lMc1aWsVw7QnzFvBpsdW0cXeW6WzXFVBMs1e2kCf7aaKzpGRa+
Yo4GW12bjC5wi6u6syp3U2GoOd7CWBq+ijhDiK+YjwZbnR9cpeMqZVNFugpH
6YyDs6qN5ZBh4St81THY6tzgqtwOUC2rmuapbpdMHVVrTTAWvsJXzoOt3k/1
mUBchamwlN9MMRa+mucrbFU/2Or1THPVmc8P5w7QzVRYau64O8vNWFU7WBF3
NOCr+YOtjgdX5blKJavqMNVET/3t57+fatP9TLKsNc1YjhkWvmLeDbY6nsq7
FnCVflalYCr8NMNeW4ylnGFNvZ+B3SuNwVYfD67q6wDVsqptnuo2T/e4OWuS
sab56p2x7toKX+kPtvrhwVXXbOWSVbnkVBhKbxyctc1YER3hmTtmuvtBfOU5
2OoHp/KuBVyl6aqppur2yaRRdha+0vMVu1f7Blt9f3BVj6s2mwpLzRmM5dsR
4it8FT3Y6vsT3QXevRsUVz13VVX/p5RRdduC0XRWlbEcMqzu/St8tWew1XdH
Zccq21Vn/n2m5CrlrErBVN2G+OL8nch0P4dsZ00yFr7i7ODEwVY6rnpnq25X
Ve9WTTHVFE91e2mKvbqdpeirs8bCV7W+6v5udp7ttnLZsZriqu4O0NVUGGqm
uxxzrCkZFr4iu8ocbFWzY9W5u+7kKsWsqqv7w1Ea4+QsRWPhq9q7Gdi90pjN
tprgKoX9KnVXOZkKS3kMxtLIsPAVvlKdrbba4KqK84AdHWB2VjXJU90G2TKq
zlIzFr7S8BW7V/mz0VYqO1bdZwInu8phpwpLzZwJxlLKsPAVu1eOg61w1VVX
TewAnU3VbYnvzd8LTfezyLTWFGPhK3w1ebbZSqELxFX7TDXBU91emmCvLcZS
7gjx1TNfdX+Huwy20tqxwlWarlIwFY6aZS43Y03KsJR9pb571f0d7jLbbaXU
BeKq665SNVWUq3BU/zg4q3IfC1/t8hXZ1b3ZZKvuzKrzroVuVylkVS6mwlHa
o2ysJ85S6AnxFb6aMltshatyzgO6dIAO/R+e8hxFZzlnWJt8Vb17FXnvVfd3
uvpstZXLjhWuwlRYymu2GcuhI9zoK7IrbKXkqju2wlXeruow1URP/YPYdD+P
Cc6alGF1+qrr7CC+wlYKrnLZW59iqk2ecjNUt4umW6zbWkrOmmSsrv2r6H4Q
X2GrK656Zasp+1WdrpqcU3WaCkfN9tZUY3XmWE/3sKb5KjK/4k7R3ba6ekeo
Smbl6qrOvErRVBGuwlJ6o2wsfFWXX23fv8JW2GqLq97ZCld5ZFV4ymswlnZH
iK9yzg6SXe20laOrMnesnrjqna0ie0BMtdtS//iF6f55FKzlYKzJvlI9P6iw
e4WvdtkquwvsOBOIq7RdpWKqbld85KOO6X4GE4yVlWEp+sr1/CDdoPZssJV6
ZtW1Y1XhKpcOsNJUzp7qdpOrvbqN5Zph4St85TqTbIWrcNUGU+Eob3O5Gcsh
w1L31YTdK7rBnbbq7AI7dqy6zgTiqpmm6naN4mCs/AwLX/XtXpFdYau7tpq6
Y7XJVdtNhaW0RtVZ+MrfV87dINnVTFtdyawcukDFuxZUd9azXdXR/2Epj1Ez
lmqGpbqDha/oBrHVdVspd4FZO1bdZwKn5VXVrsJTvrPRWJ0Zlnp+lbXbrpBd
HX230g3OstUVV72y1dXMSm3HCldhKgVP/ZPAdD+DaGsp94TuvlK9W1TZV1dt
tdVXzraK2l936AKVzwQq94DKe1Wunuq2k5u9MFafr84Yq8tXDrvtZFfYKjqz
UnLVk8zqiavO2KrSVZkdoJupcJSftzqNtdlX2flVx+7VXVu98lVUN0h25W2r
rszKyVVPdtcrXbUlq1I3Vbdv1EbdWe7Gwle7usFuM2Cr+7a6mlm5d4G4yiOr
UvVUt13cRtVZFcbqzLBUfLV594pucIettnSBWTtWuKrGVYqm6vbJlMFX+Kpq
9yrjXoaKc4Pbu0E3Wynur6t1gdtcld0BVmdVWMpvFJx1d/8v01iOvlLcbSe7
8psJttqWWXWdCXR3lbKp8NSccTSWi6/OGqszv5q8e0V2NdNWmZkVrqqxFa7K
cVW3Jz6afy6e7te7zVhdO+4O+ZXL7hV77djqyFad++vsWM1zVZWpJmRU1XZy
tleXsVwzrM2+mpZdbfWVi63IrGa7SmFn3cVVOMrXWy7G2uKrabvt0b7CVjtt
lb1nNcFV2V2gqquyO8DJpur2Tve4OEvNWPhKe/cqKrs6+m7FV362inLVR7aK
zqxwVY6rVLKqalNhqf6ZZiyVDAtfeWRXUb7CVnpDZhXfBTq5KiuvynaVqqm6
reI8qsbKzrCm++qprSb4iuxql63UMqsJrnq6Y0VelecqPOU1SsZy7Qin+Mpl
90otu5rqq0m2ogvc6SolU9111TRP/UvD4Cy9DEvRV3SD7LVvt1VHZkUX+MxV
72zVmVcpZlXunuowlLq78BW+UveVWnbVbQ1sRWaFq/Lzqoqsys1U3TZyNZeb
sbI6wmm+ctm9IrvCVk9cpbq/PsVVlV2gm6s6TYWjvKw11Vj4quZehkl77djK
w1aT9tff/XeXZStc5eMqPOVtrS5j4Su6QbKr3bZyyaw2dIFnbKXoKkyFpdSd
1WEsBV+dNRa+6u0GI2y1+cygu62uZFZ3bEUXiKvuugpPzR4lY6lkWBt9lbF7
RXblP2q2IrPyuW9hk6vu7LgouKrbHxtGxVhuvqrsB5/Yqmv3SiG7OvJVZnbV
bRBsFZNZbd5ff/d5kn0mcKqr8NQPzr8mT/fri3aWsrGc86st3WDVXjvZlY+t
lDKr6P11NVdlZlbKrlLdrXI2VbadXO3VaSwFX0VnWOrdYIavlLtBsquZturK
rBy6QHVXnbVVp6ucsiocpe2tLmM5+SqyH1TdvSK72uUrFVuRWWl0gbjKI6vC
UX7emmasqfmV0+4V2ZXuONpqSmal5qp3tqraXXdx1TRTddtGaZSdVWEs9R33
ibtX6nvtZFd+tnLPrCr317u6QFzV6yo8NdNa+KqvH6QbJLvCVmRW7l2gsqsq
OkAlU3U7xX3cjYWvPH1FduU13bYis8JVLq5yNlW3R6aOgrEcd7DoBsmusJWO
rZwyqyld4CtbVd+1sMFVkz31b5//PkRN92vJNJZ7R+jkq3effWrZVfReO9nV
HltNz6zoAnHVVFNF2snZX13GwldzfKWcXUXYakN21Wkrh78b6J5ZPXFVRWal
7Kq731UdrtpsKFVzORkLX/V0g47Z1dF3K9nVLFtdcdWRrVwzK/cucLurXEzV
bSF3a3UYy8lXZ3ctI3y1ea+d7GqHrcisPLtAXDXfVN3W6R5lYyllWIq+ohus
uU80O7vCVr22mp5ZqbnqjK0UXaW0W6Vqqm7PqI6qs/CVnq+qu8GqOxnIrnxs
5XDvAplVTma1Na9SNFW3W9wGX2n4ynn3SnmvXW3vClvl2iqzDySz8u0Cu/Oq
qqwKT2mOo7HwlXY3qLzXTnblaavJmVX1/nrGuUBcVZ9V4SmPUTFWZoaFr/qz
q6q9drIrX1uRWc3LrNRcddZWqrtV20z17y+m+2frcBa+ivPVpHODkdmV2pnB
ifcxONqKzMprf10xr8o01V1XTfHUKytlT/dr7zaWi6/O7lQqZ1dP9to3ZFfb
e8FKW5FZ9eyvb3FVVl6FqfQM5WAufKWRXb3z1dbsSm3vClv5ZFZXbaV8NlAx
s1LrAje6CkvpW6vDWPjKuxvcmF1N6wWrbPXRs+noAyMzKxVXkVn5ucrBVN3+
mWatSRnWNF+p2cpt74qddi1bTc2s2F/f46rqrApP+VtrSoal5qtp3aBqdqWy
095tp622itph796zmtoF4iodV3U7RnlUjbXRV67d4LTs6qqttmZXFbZS2WE/
stXEzApXablKzVTdZnEcd2Phq93ZFTvt2CrLVVdtRWbV0wXiqp2m+o8vTPfP
U+ksxQwr2lebd6+2Z1cb72PYZCvFHfZJmVXVjtXZfyfjqn5TfdFLWbPdWPiq
ZveK7Oq1rciu6mylssNOZvVsf31yF6jkKkdPVflJ2Vzdvrqz++fsK8fs6p2v
VLMrekFs1ZlZVe5ZOXaBuGqGqbqt5OAtJ2PhK49u0Cm7Yqe9x1avzlhO3GFX
yqyU99dxla6pui3k6Cx89dxXFd3g5Owq+z4GesE+W03rA9mz6suscFWtqbrN
M8VaXcbq9pXL7pXTnQwV2ZXrTnu3o6bbSi2zumMrNVe9sxWummOqbteojZqx
8FVON3jXV2RXZFcqtoq402rCDrtSZvXEVSpdIK7CUxirzleOu1fTs6up9zFg
K6/MSnWHXW3PKjuzqt6xmuAqTDXDWfhKa/eK7Kpup33LXVcbbeV470L1nQvT
usBuVymYqtslk8bNV1eNVe0rsiuPvSvuY+i11ZYddoXMynXPSrELnOqqbod8
b/4zeLpfj4KxJuVXZFf12VXXfQzYysNWajvslfcuOGZWuGquqaL95OIulwyr
01cV3WDmXrtDdtV1l2jETvu0XhBb9d+7oJZZPXFVhK2qu8BprtrmKCVvdRnL
pR9U8FVHN+iYXdELatlKxVVdfSCZFa56aitlV3X7yMVZ6r5Szq9cd6/Us6uo
nXZstdtWXecDo+9dULqD3akLdHSVoqm6DeTurGpjOWRXFbtXTra6m1117bRf
tVW1r7pNha127rA7Z1YOrqrOqvCUh7NUfXXFWHSDPdmV4k472VW/rZRclW0r
lXsXHDMr1S5QOa/CVF7OUvWVaze4xVaKO+3YqtZWGzIr5x12MistVymYqtsv
DqNgLHyl5avqM4NqO+30gtiKzMo/s1J3VVVWhan6xy3D6vKVSze4Mbtip93f
Vkqu6rLV9MzKaX9dZceq01XdNpkw+KrWV122yvLV1p12bEVm5brDnpFZZdsK
V9W4qtsjR/NfJ6f758x0lquvpnSDZFd6vSC2wlaV9y5My6y2dYHbTHXWTVHj
bKztvlK1VdbeVVV2RS/obavNrorOrJRc9cpWLq7aaKqpdnKxV7Wzsozl1g9O
8ZVTdpXpK2y121YKXeBdW6l2gbhK01TdNnJy1jZfTc+vlLpB9q48zguq2mrq
PeyVZwMnZ1YdPWCmq5Szqm4HOTurylcO/SDZ1czsStlWnb7KsBWZlX4f2JVZ
uXaBV7+7rthK0VTd3pnkLHxFduW2d4Wt+m1FH6h5NnBzZoWr8NRWY6l3gwrn
BquzK3rBnb0gttKwlVIfeDezmrq/jqv2joqvFPKrDdmV0n1X9ILe2VW3rba4
KqMPrL7Pisyq31V4CmPhK7IrbDXbVmRWZFa4ys9V3U5xHnyl0w0qZleVO+1d
vSB3MWArd1sp7bBPyaxwVe/8d9B0vw4HX5Fd+e+0K/aC1bZy3blSs1XH3QtR
rqq0VUYfqHw2UDmzynSVq6miDKVuri5fkV35ZVdTekFHW3X4qsJWKplVtq3U
+0DFzCpifx1X9Zqqy1Eq1iK/Irsiu6IXzLSVeh/oZKspfaBKZtXZBU51Vbeb
1Jw1Jb9y6wax1XxbHflqoq0Udq3cXaV0p1XHDvuGLnCaq7p9pO4sfKWXXXFe
cK6tlHeulGxFZqXXBz6x1eTMKqsLVDRVt4McnbXFV2RX/dkVttLMrrJtRR/o
vcP+ylaTMitctc9U2caq9BXZ1Yzs6tW/tzf5Cluxa6ViK7U+kMzK11Xdxuke
fOXpq7vZ1bt/W9ILamdXk2zFrtWOHfaszOqMrXAVpuoefBXbDU7MrugF+22l
unOlYisyqx5bTe4DcRWm2uYrsqv47EqlF+w8LzjFVpW+6rAVfSA77Aqu6j4X
2O2qbrd8mv85Md0/o4KxHHw11VZkVzq+2marDbtWrncvkFlpZlabXHXGT0/G
zVj46pmv6AWx1URbKe9aHdlqa2bVYavsHfaOzEqpC3QwVbaluq01yVeOtnLL
rtx6QWVbOe2zK9hKPbPaaCsyK70uUNlV3Z7qcJa6r1yzq2k77RvPCyrvXGEr
X1tt7QNdMivHLlDRVd1uUnBWh686u8EJ2ZX7XVcOtrrqq4n77NW2Uti1csus
qm01fYd9k6u2e6rCWBN8RXaFrVx6wS22UtljV8msVPpAtTutpmZW2V2giqu6
PTTdWE7dINnV/F5Q2VYuO1eqtnLtAx1spdgHkllpuqrbP27GqrRVtK+mZVfV
d11tPS+oYqsjXznYil2rnF2r6X1gxQ67cmbl6Kpu7zgba4OvVLKr6l7Q4byg
ei+4ZZ+90lYKu1ZHtpqUWU07H6iYWeGquePmK7Krub3gRFtd9RW28rgzlD5w
Xh9IZhXjqm7TKA2+mm+rbb2gq61c99mf2Io99lm2UuwDyaxwlbOxqnzlnF25
9YLbzwsq2Mphn13RVq67VndsdWfXSqkPJLOKs1WHq7rt4jAOvjr7O0l2RS9Y
aSuVnStlW7HH7pFZTbKVc2Z11VZbXfW/J6b7Z+zyVWd2Femr7p12bJVvK8c7
RLEVe+z0gfdtNTmzcnLVGUPdGSdjkV3pZVcZtqry1bsz6Vd8pWKrSfvsVbZS
2GPHVlq2UuoD3TIrdVdlWUrBWviqPrtSs9Xm7KrDVo777NG2ytpjj3AVtoq1
lXpm5bDDPs1VXaaqNpaqrbr22tV32ukF5+2zT7WV4x57hK1cXTXNVhNcdcdW
iqbqdlSXs1R95Wqrp9nV3fOC2Cq3F9x6VrDLVh194BVbkVnRB6plVmqu6jaT
grHwVV12pdYLRt9z9e7MuKuttp4VPGOrKXvsH9mKPjA+s1I4HzjNVXdthany
jVXlq669KxVbZfWC7Fxp7bNjKz9bsWtFH+hqKwVXdZtomq82Zlf0grq2OvIV
ZwV1baVwH7uaraLvDL3rqg5bqfSBuGqnq7KMpeYrRVvRC/rZavJZQWylbatt
mVWmregDtWzVbR98pZFdqdhKrRes3LlSshVnBWttNf3+BfrA/l2ryj4QV+2a
ib5SzK46e8E7tlLPrpRsxVnBZ7aafv8Cu1a+faByZoWr9KfLV2RX9IKV2RVn
BWfaijOCsbtWU2w1vQ/MthWu0vHV5uwKW+nbSuWs4GZbcUawdo9dJbNStNWm
PrAjs+o2jdJMyq7oBbGV21nBLFtV7rNPs5XSGUH6QE1bkVnhKnzV2wtusdUr
XznZSuWsILbKPyOoYit2rebtWrllVrhK11fTbOXSC96xlUp2ha2wVcUZQZX7
F9hj37NrtSmz6raLw2zylVIvyM5VzFnB6n12t3sYttqKM4LYSrEPnJBZdZvF
aZR9RS+IrTafFVS94+qqrbLuX8BW984IbrkzlMyKLrB7sFVsL4itNHeu3Gyl
eseViq24f2F2ZoWtyKwmzAZfTekFsdXus4LYivsXNthKYddqUh+Iq/x85WIr
pV4wy1Z3fPXq8/Sur7BV/T0MU2016W4rdq00+kBVWylmVt0umTBV2ZWyrap6
wXdni6dmV4q2mnJWEFvp3L/AHru2rbb1gWRW/aOWXV3JUpVsRS9Yc1YQW9Wf
FXxlK9V7Q7l/od5W7/J1bHXfVmRWnqOUXUXbKqoXxFYaO1dZtuIehh5bud1t
pXhG8K6tXDKrKlsp71rhKs9xza7YudpnK+64wlbcv6CXWSn3gVG2is6ssNWO
mZxdYStsFb3Pjq1m20rxjCC2mmUrXLVjNtuqap/9la/O3P1y1VevPh9f+crR
VtV3XKnaKsNXEbZSvn/BxVbKu1bKtqrctSKzYpR95bpz9cRWLtnVq89xxbOC
bveHYitsha2wVaWtut2xYVRsdcVXSraiF9SzVfUdV9jKz1Yd94Z277FjK489
djKrOeNmK3au9G31ylfYSv9u9iu2Urh/QcVWymcEK211Zt/hrquqbDV116rb
G5tGJbvCVtjK0VYT/+4Nttplq3d7mkqZFbbCVk6jYKsrvnLaZ8dWO+8PxVb9
tsq6N9TRVlv6wEpbde5a0Qd6zERbqeyzYyts5fZ3b7CV7p3s786WbLeV8x47
mdV35/9OTPfPmGmrK77CVvH3MEyzVcfd7I5/9wZbYSvlXStsRR+YaSpHZylk
V4o7V6r3MBx95r3yFbbqv5vd2Vb8LUFsNcFW1WcEo201rQ+8ayoXY2Erzewq
0lbT7g/FVthq6t+7cT0jOMFW6nvsU1wVZSp1X2ErbIWtsBW2wlbYqt5W2/rA
DFcpG2vaztXks4LRtrrrK2xVa6uPfIWtsBW28j4juMlW2a5S9NU0W6nsXGEr
bJV5Nzu28rSVwt1W2Gq+rbpd0eGqTbaK7gWxlYatjnzlbKsjX2GrZ7Y6+/du
jmwVcW8otsq11Zmzz1n3hiqeEYy2FZmVp6+cbOV0VhBb5djqyFfYCltdsVXE
vaHYKt9W3L/gbatqV7n7ClthK2yFrbDVPFu9+oxx7QOx1S5XYStsha2wFbbC
Vtiqd9cKW82zlYqvuvfZsRW2wlbYClthqy22mn5GsNtV2ApbYStsha3m2Srq
TnZspXFG0MlW3Z7AVtgKW9XdH4qtsBW20rDVnT12bIWt3Gyl4KtuW13xlYqt
3vkKW82w1ZGvsBW2wlbYClthK2yFrbAVtsJW2ApbYStsha1cbfXEV9jquq2O
fIWtsBW2wlbYap+rsJWmrTp3rrAVtsJW2ApbYStsha2wFbbCVtgKW2ErbIWt
VKb7WWArbIWtsBW2wlbYCltN8lX3c8BW7FthK2yFrbAVtsJW2ApbKduKc4Kc
E8RW2ApbYStsha2wFbbCVtgKW8221StfYStsNcVW3c9AwVZnf2exFbbiXnZs
5WCrI19hKz1bnfWVi60UfNXtKmzla6usXStnW7363sBW2ApbYStsdd1XjrZS
8FX368dW2ApbYStsha2m2iqqF8RWPrbqfu13bXUlz8RW2ApbYSts5WGrV77C
VtjKxVfdrxtbYStsha022urIV9gq3lavfPXuc/SdrxRtFb1z5WyrDl91v967
rsJW2ApbYasqWx35Clvp2OpJdvXUVpVnBbts5XpWsMNW3a/V1VZnz8piq7m2
unJvKLbqt9VHvtpsq1e+2mgrlX32abba6qvu11llqzO/X9jKz1ZX71/AVtgK
W2Erd1tF71xtslWFr7pf33RbnTlvi62w1ZN7Q6/a6qNeDFthK2y121ZXfDXB
Vlm+6n5N1a5StdXZ3ccNtqq6NxRbPbPVR77BVjm2OvJVha2OfIWtuOPqznf1
Bl91vxZlWynusWMrbIWtjn2lYKsjX2ErbKWwcxVtq0nZVYSxun92bNXTByrZ
qmqPPdpWV84IYitstdVWr3yFrdhn7zZGpLO6f8ZMV6nvWjnY6sxdMFdtpXBG
0MVWV/bYsRW2euerClvdza622IqzgjN8NWUUMquptsrIrCbaKupuKxVbnT0j
iK2wVfc+O7by22efnl1NmYm2mnxGEFvNt9XZM4LY6vo+O7Z67qsntnrlqzM9
ALbCVg6T3Qc671phq3hbZd/JfmSrp3dbYascWx35ytFWr3w1zVbK2ZXiWUF6
wX2j4Cpsha1cbfX03lB3Wx35StlWH/kq21ZHvsJW2Irsat6oZFZXbKW0a4Wt
+u5fmGKrp/eGYitsha3mnBUku5oxKraKzqxU9tgn2OrdmW81W2X9vRtsVWur
I19tshV3XLHPjq38RsVVGbZS2WPPun/hyFavPh+n3RtabauI+xc22erIV6q2
Uvy7N9hqlq3w1Y7ZbCuHXatXtlLuA93vZHezVbSr1G1V/XdvFG31ylcTbMXO
FbZynQpXue9addtKoQ/caKvMe0OxVd49DFm2UrybXSW7evUZ1Z1dVe5cdfeC
+EpnJmdW7LHPstWkv3czwVYf+UrBVpv+7o2KrZR7QXdbVWVX+MrLVcp9ILbS
s9W0e0Oz/t4NttK/4wpbadhKtRfMshXZlaersjKrK7aKyqyq9tjf7RNMtZXi
/QtTbFWxx95hqy33h3IPQ5ytXHeurnw3kl35DLby37VSsZXiGcEpd7Jjq113
XL3y1WRb0QvqZFf4St9VnbaKyqyUbaXgKmw19+/dKNmKexj072FQ7gUn2Koy
u8JXuEq9D8RWs+62yro3dIqtptwf6mQrJV+p2kq1FyS7mjFPHTvJVlWZFbby
vH+BO9k9bMU9DNiK7IrsClfts1XWnaETbfXqe4i7rerPCEbaqvr+0Op7GDgr
OOMO0Wm2wlezXKWeWU2+e0HFVoq7VlPOCGIrH1u98hW2mt0L4qvZ8/SZklnR
B2IrbJVlq+l3XE29h0GxF4yyVUd2lb13ha/8XdWdWWGr/sxK1VZuZwQdbPWR
rxxt5XIPw52zgk7ZlcvO1cbsCmP5uKojs3LpA7EVZwS777bqspXKHVecFdSy
ldLOlaOtonzVbRt3Vyl1gYp9ILbqt9WUM4LTbDX9HgbOCs7fuXLoBTt9tdFY
Xa6alFlN7APVbdWxa3XVVllnBFXvtoq2VfU+e7WtOCtIL1idXeErH1OpuWpi
Hzhl18p9j33K/QvYSttW0fvsd3au7tpqYi+ofF7QLbua7is3V7lnVvSB/X2g
6xlBp7utqmxVvc/uYCv37GpLL4ivZhor+tnceX+mZVbqfSC28jgjOOH+ham2
mnpW0MVW9ILzusFJxsJVnjvsan3gNFtV77FX379Q2QeetdVHvppiK84Kzty5
muiru9/hGb5yNFbGM6hy1YTMalMfGH1n6B1bqeyxbzwj2Gkr9XsYpp0VpBf0
t5WirxyMlfW63V0VmVnRB3pnVpwR1LHV1nsYnH01yVaRvSC+mmes7Neq6qqp
mVVWH4itOCPoYiuVs4JHvsJWHr2gc3a12Vfdzqp4bXefvVtm5bTDzq4VZwS3
2kpl5wpb6dhKKbs68z2TlV1V+6rSWNnOqnwduCovs3KzVfSuVfSdoa577FPO
CGIrdq7O+OqurTbvtFdkV06+emqu7p9V3VXKtnrqKvpAnczK9Yygsq0+8pXj
PnuErZTvEM3IrrpsVd0Ldu5dbfWVwzx5vnddRWaVn1lhK84IbrNV5v3sarai
F5ybXV21VUc3iLH8XRW9vz5ph/2urdT7QDVbVe9aqZ8RfGqr6rOCEfezYyuy
q4m+ijBWt2OUJsKrVa6KttWWzCrDVu86BUVbXXGViq3U99izbFV9VpB99t5e
kOxKw1ZkWLjKLbOiD/TKrDps5bhrVW2rSfvsR756d3YjaueKXpDsCl/pmara
VZMzK8U+EFv57Vo52OojX7HPrpldbesFO7Kr6b7aYqyoZ7XFVRMyK/rAOFup
7Fop7bEr24p9dq+7GMiu5vpqsrEUXHXXVpO7QPrAXlup9IGue+wRtlLfZ//I
V262mtALkl3dzyZUfDXFWNHP5Mn7k+2qrZkVfaBmH7hljz3TVuxcaWdXir2g
a3al7qsMYzk6K+MZdLiKzEqvD8RWPnvs2MrXVvSCObZS9lV2N6jqK3VjZb3m
ja5SslVGZkUfyB77NFuxz+5zFwPZFb5St1b263v6HlS4SrkLdNxhd+gD2bXS
yazu2OojX6nss7vcc6WSXWX0gpuzq4puMMJXVcaqclbVa5nmKtfMymmHnT5w
565VlK0m3SE6LbvK6AU777qKtJVrN+jmqwh3df+sEc8bV+W7Sm2HHVthq0pb
sXMVayu17Cq7F5ySXSn4SsFY6oOrzv23pGAr+kDutcJWz3y10VZK2dWUXhBf
YSxVU111FZkVfeDkzMppj/2urT7y1aSdK2Vfqdhqa3Y13VcYK/ZZPnlfyaz2
ZVbYasYeO7aaYyu1XlAlu3LpBp/6CmNpmQpXzc+ssBX3WlXYip2rOFuRXc3o
Bq/aStFXG4yV8cwqXaXeBSpnVhv7wKu2Us6ssBU7V929YMddV5Ozq22+mmas
rGf09L1zcpVLZkUf6JVZTdi1emKrj3xFLzizF3xlq83ZlbKvMo3l6qzM5xHh
qju/J+quIrOadz5QyVaqmVW0rRz/brOqrZR6wSe2isiu3vkqMrtS2b1y8JWD
sypef0dWdcVWV/+9sCWzwlY+tnLrA6tstX3nSuW84PbsyuncYKSvqoylYK3K
14mrntnq7L+rslz1ylbssOu4Clt59IIf/a6oZldKd12pZ1cO3eBdX7kaK9tc
na8l6v3IdNX0LpDMClup7lphK21bOWVXT2ylmF3hKybTVGquUuwCn9pKKbNy
PB+oYivHzOqpra74arutXHbaN2RX+ApjdZpquqsmZ1bb+8AjWx19Bx/Zanof
WGkrfKXTCzpnV/gq/nu+2y3Ko2Kqba5y3LPa0AdetZVCH4itdttqw077lm6w
wlcYy8tUuIrMakIf6GirDldF2OojX2Er/ezqbi+ocGYQX+X5aruzXE2V6apJ
XaDLDvuEPlDBVdNspX4Xw9HvTXd2pbTT3rV3FZVdKfjqyvfik+9fjKXnKXVX
uXaBbpkVfSC2UrPV1OwqoxdUy66m7l1t9dVUZ2U/rypX0QV6Zlb0gXP7QGz1
3FbstOOrSF85GMvVWRXP5ampHF1FZrU3s1KylVJmFWWr7b5y3rvCV3r7V1HG
qnKWir86X2u1p1z2q6ryqi5XTduzmpRZYSt/W6l0g9X3XW33lUOGpWCsKHt1
/7wZpsJVdIGumdVVV224LzTDVh/5SslWatmV0t6VcnaFr+Yby3Gi3g9XV7n0
gJszKzVbbcqssm2l5islW1WfGXySXb36bHLKrlT2r7p9hbE8TbXRVY6Zleue
FbbCVp22IruKPzeIrzCW8kQ+76qsqtNVLpmVUx/46t/oSpkVtsqx1Ue+UrLV
lOzqrq2csysHX7lmWDhL11S4Kmd/3clVkZkVfeAcW6n5asNOu2J25doNVuRX
KhkWxsoxlbKrVHfXyazoA7HVXFtNzK6UbTXFV9UdYZaxNjkr6/k9eU+numpq
F7h9h13FVt2mmm6rI18d3X+WbSuyK+9ucLOvJjor+1lVmyrTVW5dIJkVmZXC
RNtKyVeZtnLeae/cu6rsBrt9dfc7Ut1Yrtaqei64al8XWJ1ZcQ87tnKxleNO
+9TsCl8991WlsRStVf3au0x1x1abXfXEVnddpZBZZdsq875QbNVnq67synmn
fZOvznw/qPrK0ViV7up+XU/fm6eucsmr6AK9MqsoW23NrLJs5ZpdOe60u2ZX
irtXk32lYqxJ02kqXBWbWWV1gZWZFX0gtuq2FdmVhq8isisnX2Es/4l4/sod
4FlXqXWBZFb5O+xRmdWGPjDTVh/5yrkXVMiu3M4MqnWDU3wVZSyc5Weqja5S
7QK3ZVb0gbq2UsquOnfaya76ukF8hbGqPeXQAWa4yqELJLOiD8RWunddbd67
cuwGVXylaKztzop+lh1Z1SZXkVnN3WF3vC9U0VZkV7rZ1VNbbfJVV4aVYawt
1sp6bh2mcnGVwo7V9MyKHfa5tlLKrpx22juyq2xfRXSD+KrXWFOclfl8oky1
3VUVXeCE+6ycMits5W0rp532jOwqqxt89xmFr3Q6wgpjOXmr6jlEvnfZpsJV
9a5yzazYYde01Ue+mtoLup8ZVOgGo3bbnX3laqxuc3W8xsj36W5WtS2viugC
79oqy1VVmZXSPezYyi+7yt5p35pdTe4Gp/uq01hP/dX9M1aYClfFuUoxs7rr
qo2ZFbaqtZVLdlW5d6WYXeGrWF9lGEvVWQ6jZConV7l0gWRW7LA72Uopu4ra
aZ+cXbl0g26+UjQWzurxlKqppruKzKo+s8JWs2x15KurtnLOrt75Kus+UXzl
5yucVeMpXOW3Y0VmRR84xVaZ2dXR70v3XaLTsqsoX535XO72VXVHWGGsjc5S
9tQdU21y1bQusCqzirIVmVWfrbZlVypnBtV9FZVdOfrKxVhTrVX13J6+x9mu
uvrfxCZXkVk9s9XWzMrRVmrZlcreVcdeu2M3ONFX1cZytVbHM+owFXmVdxfo
llmxw95vqyhfdey0T9676s6upvlqm7HUzNX9+iPeR7UOMNpVKjtWXfvryplV
VB/40fc0tvKz1YbsyvXOq2pfZfWDFRlWlLFUnBVpsO6fV9lUG101sQtUPRvY
lVlhqxxbbc2u1Pba330+KfoqK7+64qu735GRvnIwlvt0mwpXzd9fd9uz2t4H
dtjqqq9csqs7O+1O3WCEr6JsFe0rxR2sDGPhLD1PPTUVrqp3ldL++oQ9K2zV
Y6sJ2ZXTXrtLNxjdDyr7KsNYOKvXU+qmmu4qp8zqjqvIrPqnw1ZXfdVxH0PV
3pVTduXqq8z8CmPNn4xnjqv6dqyyMiuH/XUyK2xVdR+Da3bl3A3iK01jYa08
S3WYyslVZz4PpnaBCncucFfoHFtF+Wp6dpXVDW70lcqOu4uxtlgr+/lFvM8V
WZV7XjWtC1S9c4HMaoetyK7ybIWvPDKsKmNNcVbVs4pylVJWtdVVSl1g1f56
V2aFrXJ8pbbTrp5due9e4atYY1U6y8FcHc+iI6eqyKpwFZkVd4X62io7uzr6
fVHIrrL22id0g52+quoIJxir0l7drynDU3dMhavuu8qtC+zOrLgrdKatpmRX
bt3gk+wKX/UbS81Zkyb6fbr7+7LVVZ07Vkr761WZ1ZGt2LPSs9VVX23OrvCV
p6+UjIWz9Dw1wVSOrnLLrKruXCCz2mmrDdmVYjf46vNpm6+qM6wsY+GsXk9V
mwpX+brKLbPavGelZKurvnLKrrbstU/wlXqGlWksnFXnqSemmu6qqh2rd7Z6
4iqVLpDMCltdtdX27ErVV2c+76b5aqKxtlqr4pmqmwpX9exYKd8T2rVnha16
fDUlu+rYa8dXOr5yMNZEa1U+tyfv7xNTKWRVbq6a0gUqZlab+kBnWylmV1P2
2lV2r/CVrrPcvNXxbFxMNclVnTtWDvvrLplVt0Wm2eqqr7qyqw3d4GRfYax5
9up+nVGeemoqXDXHVZX76+xZYavK7IpuEF/d9ZWCsdScNXmmmypjt8rFVZu7
QPasZttK8e8MTsmu8JVmfhVtLJyl6alprlLMqzp3rCZ2gWRWnrY68tX27Apf
afhqgrFw1gxPuXaAk1xFZkVm5WSrq766kl0d2apyr736zqvsexkm+Eq9I8x0
FtaqsZSTqTqzKlxFZjVhJtiqM7va0A2esVXl3QxXfDUxw8o0Fs7Ke65dplJx
VbStnrpKsQusvMvqzv76R7Yis/Ky1VVfZWdX27vBquxqg69cjLXBW9nPLfJ9
VjOVc17l5iqFLpDMaqetonwVnV1Vd4PdvpqSXzkaq8pZjt6qfC7R72lF/4er
6ALJrPbY6qqvyK7m7F5t8lWGsaqdpWKurtesYqoKV3V1gFGuemWrTFc5dIFk
Vthqw167Yjeo6iuljlDNWJ3Omj5Z75eiqXCVTxdIZtU/6raK9FV2dnXXV6/+
u8JXGr6qzLAyjYWzNC1111O4Cle57K9vyqy22WpbN4iv+n2lbCyc1e+pp6a6
46pMUzm6SnXH6pWtKrvAzMyq2xbbbRXpq847GdS6QXzlY6wKZ2GtGkt1mUol
q9rkKqXMqtNV2Ep3ov4WzhVb4av3tqr2VdaO+x1fVfeElcba4q3qZxnx/leY
ClfNchX769jqqq+uZlcf/a5M2GtX373q8lV2R9iVYXUYa4K3up5Xl6mUOkA1
V026x6qqC8RWe2xFdlWzexWRXZ3xlWtH2Gmsbmcp2av7dTubClf1u0p5f/2V
rXCVt62OfNWZXeGrmflVpa8ijaXorG0T9T4qm6rLVWdt9dRV27tAMitsFZld
uey1u+9edeZXm4yFs/w8VW0qlaxKKa/CVbhqo62OfJV9ZhBfaftqUoaFs/Qn
+r15YirF/g9X1biquwvkntD5tqIbjOsG8dVsY+EsHU89NRWuOu8qdqzIrLBV
vK9cu0F8leurqgxL1Vh4q95SEZ5S3atSddXTvOqJq9y7wKj9dWzlM3SD+KrL
V53GqnDWNmtVPM+I932LqXBVjquu3mVFF4itKrOrTb4687kU5avoM4QbjFXl
rGneqnxmnaba7qrsHjBrx0ols6IL3GmrI19FZVcZ3aDivaJuvlLMsBSMVe0s
ZXd1PodIT6mbStlV2XnV9B0rMitsFZFdOXSDmb56aqtpvqrOsKKN1e2spz7r
/jm6PVVtquysStFVXWcCp7qKzGqWra766qqt8NUcXzlkWBnGcnWWw6h4qtJU
GVlVdQ+Y6Sq1+xYiu0Ayq122OvJVRXbF7tV1X3XuuLtkWJnOwlo6loow1Zas
yiGvmrBjdcdWuGqXrdS7wS5fKeRXjhnWRGNhrXpHRXlKOavCVXtcRRc421ZH
voqy1aZuEF/p9YSVztpqrYrnGmWqu6668/vu4Cr1uxaydqzoAnVnkq3w1ex+
MMtXrsaqctZEc1U/t05PqWVV2/Iqlx0rMitsddVWCt0g+VWtr6oyLBVjdThL
2V7dzyHSUw6mUs6qcBWuwlZ5vlLPrqb7quMMYWWGpWQsFWdFO6z75632VIep
trmq866FrB0rukCN2WIrB1+9+zeM4m57tK9UjFXtq+3Ocp2M92uaqaa6qmt3
nczKYybaqsJXHfcy4CufDEvVWVhL01JPPVVtqoysyslVXXkVrvKZqbY68pVC
dqW6246vNHbdq4yFtfo9FWGqCVlVtatUzwRm7VjRBWKrbF+9uq9fpRt09lXn
jvvkDKvKWdu9VfV8o34fFE2V0QGq5FWZPWC1q8issJWKr5z6wWnGUnOWirUq
veVmse5nEmmop5ZS81R0TjU5q1LpAXEVtsr0lVI/OMlX3TnWBGMpWSvKZd0/
m7unsvepXFzVec9C135VZA94ZKvu73Xl2WorfOXrq4nGynKWo7XcJut922qq
yr2qba6KzKy6v9PVZ4utPs0VWzntX2X76sn9V9t8pWwsnKXvqU5TKbiqsgPs
dlX1HVZ0gdgqc1x3r9R9FX2OMKsjdDJWtrOwVr+jojzlbqoOV3Xes4Cr5s92
W1V3g9t95ZhhdfaElc7CXLXPOOr3QtVUuMrfVXSB9wdbee1ePfXVu8+MTb5y
y7A6jDXZWx3PMPL34Imrrv7bYpKrlHtA9R0rbHV+ttnq01y1lZuv3v23T341
w1jd1lJ3V/czUfOUs6lwlYarsNX5wVZ5u1eTfdWx466UYeEsptJTk0yl2AHi
KlwVPRtt9WkUukH1uxmq8ivnDOupr7KMhbP8LfXUU3dMNTGrcneVwo4Vtro+
W231afBVTX7lmGF1GCvTWVjLw1JTTYWrdFxFZlUzm231aRR2r9R99e6zycFX
lcZycBbe0rJUhKcqTdWdVeEqXKU+2Op6djXxbgZ8pemrKmNhrVpHRXpK1VTq
rnpnK2VXsWOlP9tt9Wk27La7+Qpj9Ttruru6nmPk78MdV9393c/MqiI7wOl5
FTtWHoOtvjv4qtZXWRnWFmMpWEvdXt3PQ8lTVaZyz6pwFa6KGmz1/XHoBjf6
SjXDumusDc6K9lj3z6ngqWmm2uiqjrsW6AJ7Blt9f1x2rxR85dARbjWWs7Wc
J/O9VDaVQweIq3BV9WCrH5xNvjpjrCpfqWRYT42l6iys5WWpu56aYqpKV535
d6ZjD3i3C+z+Dp4y2OqHR2X3Cl/1ZViTjYW1NC31xFNPTeXoqjOfOw551d27
Ftix0h5s9fHgq/O2Ouur6I7QwVhPvisrnYW36h0V4amNporqAB1cxe6672Cr
48FXOcZSyLCccqwuZ003V+fzfPq7MM1UE1317jMbV80ebHU8GbtX+CrHV1UZ
loKxup3l5K7uZxPtqQ5TqbgqqgOcnFexu64z2Or14Kv+jlAxw1IxlqK1onzW
/TNN8pSzqXAVrnIcbPV+Ks8OVvgq4o4GZV+5GSvaWROs5TqR72HE71WlqTL2
qiI7wHeuOvPvTtUe8K6rsFXeYKtzM81XVflVdEdYkWF1GivDWVjLw1IbTOWa
VTnnVWRWPYOtzk/lbvuk/Mo1w+o2VpazsJaOoxQ8pWYqXIWrJgy2ujbT8qsI
X3V1hJuMlekszFXrqEhLdZnKIauqcpVqD4iregdbXZvq3fatvsrKsCYYq8pZ
G7xV+Rwzfg+quz+XrOqMq9TvWeCuBe/BVtcHX+l1hA7GynJWtbWc/NX9XJQ8
VWmqjKwqqgN0cBV5lf9gq3vj6KuIHfezn1tdGdZ2Y6lYa+tkvqcdnso0lWtW
hauYM4Ot7o+jr6ryq00Z1hNjVTgLa3la6qmpVHMqXHW/B+SuBZ/BVs/G0VfO
HaG6sRychbd0HdXtqTumcsiqqlz17rP5SV5FZuU12Or54CvtDMvRWNXOwls9
hlLxlJKpcBV51YTBVjGDr+ZlWN1dYbezNpir+7lG/G50uCqr/6vuABVcxY7V
zPlkK4ZhGIZhGCZu/h9J9mO1
  "], "Byte", ColorSpace -> "RGB", Interleaving -> 
  True]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5eff326f-51d4-4f6d-8327-0361233df0b4",
   CellTags->"SlideShowHeader"],
  Cell[6636, 148, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"3922b593-907c-45c1-b8b6-90c3373155fd",
   CellTags->"SlideShowHeader"],
  Cell[8684, 196, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"3d417ef7-2274-476e-a156-7231bf56c84e",
   CellTags->"SlideShowHeader"],
  Cell[13817, 349, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"0decc16d-f8cc-43ea-8366-05f88784fd4a",
   CellTags->"SlideShowHeader"],
  Cell[35372, 909, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"ed1a7de1-709b-4935-a8e3-4291edc2f33f",
   CellTags->"SlideShowHeader"],
  Cell[137364, 2967, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"fbe4093a-d6c3-4c7c-844c-9d5349e74110",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 210106, 4530}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5eff326f-51d4-4f6d-8327-0361233df0b4",
 CellTags->"SlideShowHeader"],
Cell[719, 26, 343, 5, 217, "Title",ExpressionUUID->"4a349bd0-044f-4b71-9e5d-6f85b428ef05"],
Cell[1065, 33, 645, 9, 67, "Subtitle",ExpressionUUID->"8bf38818-9136-4d63-b800-a95800ba3bba"],
Cell[1713, 44, 4886, 99, 738, "Text",ExpressionUUID->"e5654c3b-261a-4278-9d0c-d50835b563a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6636, 148, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"3922b593-907c-45c1-b8b6-90c3373155fd",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[6783, 154, 317, 4, 156, "Section",ExpressionUUID->"f29c9c36-3588-423d-85b2-02bd9ce04aa0"],
Cell[7103, 160, 1532, 30, 272, "Text",ExpressionUUID->"813e3938-12dd-4af2-a679-9c2667c326cc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8684, 196, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"3d417ef7-2274-476e-a156-7231bf56c84e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[8831, 202, 349, 6, 156, "Section",ExpressionUUID->"d519da9a-07b8-4600-b208-ff11b9f334ce"],
Cell[9183, 210, 638, 12, 56, "Text",ExpressionUUID->"d1b120a4-0039-4aee-b1d8-345c184f2ff5"],
Cell[9824, 224, 575, 14, 140, "Code",ExpressionUUID->"3448cd5e-b397-4de5-9565-80bd96df13cf"],
Cell[CellGroupData[{
Cell[10424, 242, 308, 7, 86, "Subsection",ExpressionUUID->"d9b037c9-200b-4bd8-b71c-46ddd47420dd"],
Cell[10735, 251, 334, 7, 56, "Text",ExpressionUUID->"730141f6-a811-44de-99ef-a1a2f1c98d68"],
Cell[CellGroupData[{
Cell[11094, 262, 1206, 35, 198, "InputOnly",ExpressionUUID->"ef6d3d59-e728-4112-a616-b48534a3eaa0"],
Cell[12303, 299, 198, 4, 55, "Output",ExpressionUUID->"240ce76a-2f4d-426a-961a-6c8c7c8449ac"],
Cell[12504, 305, 822, 24, 98, "Output",ExpressionUUID->"5685f5ae-b24c-4198-8c12-af0a0946b0a4"],
Cell[13329, 331, 415, 10, 55, "Output",ExpressionUUID->"2bfb39bc-02f3-4a99-873c-844351b6806f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13817, 349, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"0decc16d-f8cc-43ea-8366-05f88784fd4a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[13964, 355, 308, 5, 156, "Section",ExpressionUUID->"f8ec5160-8d2b-453f-b4c6-c94edee702be"],
Cell[14275, 362, 1665, 47, 284, "Input",ExpressionUUID->"2aa2bf2c-0847-4ea9-a758-5f50236dcf52"],
Cell[CellGroupData[{
Cell[15965, 413, 288, 6, 130, "Subsubsection",ExpressionUUID->"34e2e610-f47c-4af7-b4a2-760cd012b7ca"],
Cell[16256, 421, 519, 11, 128, "Text",ExpressionUUID->"16c2c9fc-59b8-441d-b939-ce7c482aa07e"],
Cell[16778, 434, 2180, 52, 392, "Input",ExpressionUUID->"24a49a26-6084-42fa-a17b-7228b521c06a"],
Cell[18961, 488, 587, 16, 98, "Input",ExpressionUUID->"6d471bb2-b7e1-4763-8ea9-4f0ed23ebc6a"],
Cell[CellGroupData[{
Cell[19573, 508, 1250, 28, 140, "Input",ExpressionUUID->"fb578692-52a5-4fc6-bd7f-f372a11d79f9"],
Cell[20826, 538, 7644, 179, 262, "Output",ExpressionUUID->"5c00aecd-d447-41ed-bba1-1c234b056bf0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28519, 723, 226, 5, 78, "Subsubsection",ExpressionUUID->"db3b0ad7-575d-4506-95a4-32b4116593fb"],
Cell[28748, 730, 1373, 37, 266, "Input",ExpressionUUID->"ad6ecc53-2d7d-41b2-b54b-2a6b8c0da39a"],
Cell[CellGroupData[{
Cell[30146, 771, 717, 18, 98, "Input",ExpressionUUID->"bac8c47b-484d-4bdf-a0f0-f99dbc864fd6"],
Cell[30866, 791, 4433, 110, 252, "Output",ExpressionUUID->"52c1b519-0d4b-4de7-9e3e-879fee339494"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35372, 909, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"ed1a7de1-709b-4935-a8e3-4291edc2f33f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[35519, 915, 263, 5, 156, "Section",ExpressionUUID->"3d6bafa6-652e-40e8-a027-01dc2e92fe2e"],
Cell[35785, 922, 306, 7, 56, "Text",ExpressionUUID->"a4cde4f2-294d-422f-99c9-e0ed6c39968a"],
Cell[CellGroupData[{
Cell[36116, 933, 1431, 40, 224, "Input",ExpressionUUID->"36d428a6-164c-4839-a48d-58267bd3ee98"],
Cell[37550, 975, 227, 4, 55, "Output",ExpressionUUID->"a6f14f7f-1629-4b56-8126-2608ca923104"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37814, 984, 166, 3, 78, "Subsubsection",ExpressionUUID->"d3ab5173-0078-4b7c-a27f-4a0fd6c0d046"],
Cell[CellGroupData[{
Cell[38005, 991, 666, 13, 55, "Input",ExpressionUUID->"cf8f8d76-e279-47fb-9091-efd3e194051a"],
Cell[38674, 1006, 39502, 731, 109, "Output",ExpressionUUID->"7a242571-0378-4914-bf03-f98b621b8493"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78225, 1743, 176, 3, 78, "Subsubsection",ExpressionUUID->"e2d0a968-f949-4694-9130-727594cb1438"],
Cell[CellGroupData[{
Cell[78426, 1750, 408, 8, 55, "Input",ExpressionUUID->"19673c4e-fb31-4d79-b52b-caffd9e8a642"],
Cell[78837, 1760, 40721, 734, 109, "Output",ExpressionUUID->"ff98216c-f2b5-4ca5-94f3-6cc87c13cfa1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119607, 2500, 184, 3, 78, "Subsubsection",ExpressionUUID->"d09689fa-f4ca-46b0-9095-c293ef91a885"],
Cell[CellGroupData[{
Cell[119816, 2507, 305, 5, 98, "Input",ExpressionUUID->"9173e202-ef4d-4cac-a243-17b0f3b8ddcb"],
Cell[120124, 2514, 269, 4, 55, "Output",ExpressionUUID->"6a78e447-51ab-477d-a2d2-197d684ab797"],
Cell[120396, 2520, 16895, 439, 589, "Output",ExpressionUUID->"ac2e49b2-76d1-4ed2-9932-bc5401c8a06c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137364, 2967, 122, 2, 50, "SlideShowNavigationBar",ExpressionUUID->"fbe4093a-d6c3-4c7c-844c-9d5349e74110",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[137511, 2973, 197, 4, 156, "Section",ExpressionUUID->"de625789-4f17-4bae-862d-ce8b5c1fca5b"],
Cell[137711, 2979, 294, 6, 56, "Text",ExpressionUUID->"bcba83f5-9612-4019-a713-80dbebd6c7f0"],
Cell[CellGroupData[{
Cell[138030, 2989, 16021, 387, 55, "WolframAlphaShortInput",ExpressionUUID->"21dd8dcd-22a2-4b5b-8888-006b4094551f"],
Cell[154054, 3378, 272, 5, 55, "Output",ExpressionUUID->"13d4bb6d-08cd-4fad-ac26-0d762285dfa1"]
}, Open  ]],
Cell[154341, 3386, 336, 5, 63, "WolframAlphaLong",ExpressionUUID->"21a0112f-0da1-4fb6-86c9-51f7d7e37e20"]
}, Open  ]]
}, Open  ]]
}
]
*)

